<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="39138"><g><title>libSDL2-2.0.0.dylib`SDL_AtomicAdd_REAL (6 samples, 0.02%)</title><rect x="0.0000%" y="597" width="0.0153%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="0.0537%" y="597" width="0.0102%" height="15" fill="rgb(217,0,24)" fg:x="21" fg:w="4"/><text x="0.3037%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="0.0639%" y="597" width="0.0153%" height="15" fill="rgb(221,193,54)" fg:x="25" fg:w="6"/><text x="0.3139%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="0.0818%" y="597" width="0.0153%" height="15" fill="rgb(248,212,6)" fg:x="32" fg:w="6"/><text x="0.3318%" y="607.50"></text></g><g><title>velocity-sdl`__rdl_alloc (4 samples, 0.01%)</title><rect x="0.1354%" y="597" width="0.0102%" height="15" fill="rgb(208,68,35)" fg:x="53" fg:w="4"/><text x="0.3854%" y="607.50"></text></g><g><title>CoreFoundation`_CFRelease (11 samples, 0.03%)</title><rect x="0.1993%" y="357" width="0.0281%" height="15" fill="rgb(232,128,0)" fg:x="78" fg:w="11"/><text x="0.4493%" y="367.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (11 samples, 0.03%)</title><rect x="0.1993%" y="341" width="0.0281%" height="15" fill="rgb(207,160,47)" fg:x="78" fg:w="11"/><text x="0.4493%" y="351.50"></text></g><g><title>IOKit`IOConnectCallMethod (11 samples, 0.03%)</title><rect x="0.1993%" y="325" width="0.0281%" height="15" fill="rgb(228,23,34)" fg:x="78" fg:w="11"/><text x="0.4493%" y="335.50"></text></g><g><title>IOKit`io_connect_method (11 samples, 0.03%)</title><rect x="0.1993%" y="309" width="0.0281%" height="15" fill="rgb(218,30,26)" fg:x="78" fg:w="11"/><text x="0.4493%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.03%)</title><rect x="0.1993%" y="293" width="0.0281%" height="15" fill="rgb(220,122,19)" fg:x="78" fg:w="11"/><text x="0.4493%" y="303.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_DestroyRenderer (14 samples, 0.04%)</title><rect x="0.1942%" y="581" width="0.0358%" height="15" fill="rgb(250,228,42)" fg:x="76" fg:w="14"/><text x="0.4442%" y="591.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (14 samples, 0.04%)</title><rect x="0.1942%" y="565" width="0.0358%" height="15" fill="rgb(240,193,28)" fg:x="76" fg:w="14"/><text x="0.4442%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (14 samples, 0.04%)</title><rect x="0.1942%" y="549" width="0.0358%" height="15" fill="rgb(216,20,37)" fg:x="76" fg:w="14"/><text x="0.4442%" y="559.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (14 samples, 0.04%)</title><rect x="0.1942%" y="533" width="0.0358%" height="15" fill="rgb(206,188,39)" fg:x="76" fg:w="14"/><text x="0.4442%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData .cxx_destruct] (14 samples, 0.04%)</title><rect x="0.1942%" y="517" width="0.0358%" height="15" fill="rgb(217,207,13)" fg:x="76" fg:w="14"/><text x="0.4442%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandQueue dealloc] (14 samples, 0.04%)</title><rect x="0.1942%" y="501" width="0.0358%" height="15" fill="rgb(231,73,38)" fg:x="76" fg:w="14"/><text x="0.4442%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue dealloc] (14 samples, 0.04%)</title><rect x="0.1942%" y="485" width="0.0358%" height="15" fill="rgb(225,20,46)" fg:x="76" fg:w="14"/><text x="0.4442%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandQueue dealloc] (13 samples, 0.03%)</title><rect x="0.1967%" y="469" width="0.0332%" height="15" fill="rgb(210,31,41)" fg:x="77" fg:w="13"/><text x="0.4467%" y="479.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice _decrementCommandQueueCount] (13 samples, 0.03%)</title><rect x="0.1967%" y="453" width="0.0332%" height="15" fill="rgb(221,200,47)" fg:x="77" fg:w="13"/><text x="0.4467%" y="463.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice _purgeDevice] (13 samples, 0.03%)</title><rect x="0.1967%" y="437" width="0.0332%" height="15" fill="rgb(226,26,5)" fg:x="77" fg:w="13"/><text x="0.4467%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice _purgeDevice] (13 samples, 0.03%)</title><rect x="0.1967%" y="421" width="0.0332%" height="15" fill="rgb(249,33,26)" fg:x="77" fg:w="13"/><text x="0.4467%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalResourcePool purge] (12 samples, 0.03%)</title><rect x="0.1993%" y="405" width="0.0307%" height="15" fill="rgb(235,183,28)" fg:x="78" fg:w="12"/><text x="0.4493%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalResourcePool purgeWithLock] (12 samples, 0.03%)</title><rect x="0.1993%" y="389" width="0.0307%" height="15" fill="rgb(221,5,38)" fg:x="78" fg:w="12"/><text x="0.4493%" y="399.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (12 samples, 0.03%)</title><rect x="0.1993%" y="373" width="0.0307%" height="15" fill="rgb(247,18,42)" fg:x="78" fg:w="12"/><text x="0.4493%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (6 samples, 0.02%)</title><rect x="0.3219%" y="549" width="0.0153%" height="15" fill="rgb(241,131,45)" fg:x="126" fg:w="6"/><text x="0.5719%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (4 samples, 0.01%)</title><rect x="0.3373%" y="549" width="0.0102%" height="15" fill="rgb(249,31,29)" fg:x="132" fg:w="4"/><text x="0.5873%" y="559.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (36 samples, 0.09%)</title><rect x="0.3781%" y="517" width="0.0920%" height="15" fill="rgb(225,111,53)" fg:x="148" fg:w="36"/><text x="0.6281%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.09%)</title><rect x="0.3833%" y="501" width="0.0869%" height="15" fill="rgb(238,160,17)" fg:x="150" fg:w="34"/><text x="0.6333%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.08%)</title><rect x="0.3884%" y="485" width="0.0818%" height="15" fill="rgb(214,148,48)" fg:x="152" fg:w="32"/><text x="0.6384%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (24 samples, 0.06%)</title><rect x="0.4088%" y="469" width="0.0613%" height="15" fill="rgb(232,36,49)" fg:x="160" fg:w="24"/><text x="0.6588%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="0.4574%" y="453" width="0.0128%" height="15" fill="rgb(209,103,24)" fg:x="179" fg:w="5"/><text x="0.7074%" y="463.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice newTextureWithDescriptor:] (41 samples, 0.10%)</title><rect x="0.3781%" y="533" width="0.1048%" height="15" fill="rgb(229,88,8)" fg:x="148" fg:w="41"/><text x="0.6281%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture finalizeTextureCreation] (14 samples, 0.04%)</title><rect x="0.4829%" y="533" width="0.0358%" height="15" fill="rgb(213,181,19)" fg:x="189" fg:w="14"/><text x="0.7329%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture initNewTextureData:] (4 samples, 0.01%)</title><rect x="0.5187%" y="533" width="0.0102%" height="15" fill="rgb(254,191,54)" fg:x="203" fg:w="4"/><text x="0.7687%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture updateBindDataWithAddresses:cpuMetadataAddress:gpuVirtualAddress:isCompressible:shouldInitMetadata:] (7 samples, 0.02%)</title><rect x="0.5315%" y="533" width="0.0179%" height="15" fill="rgb(241,83,37)" fg:x="208" fg:w="7"/><text x="0.7815%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXTexture getCPUSizeBytes] (6 samples, 0.02%)</title><rect x="0.5647%" y="533" width="0.0153%" height="15" fill="rgb(233,36,39)" fg:x="221" fg:w="6"/><text x="0.8147%" y="543.50"></text></g><g><title>AGXMetalG14G`AGX::G14::TextureFormatTable::chooseTextureFormatOBJC (4 samples, 0.01%)</title><rect x="0.6567%" y="501" width="0.0102%" height="15" fill="rgb(226,3,54)" fg:x="257" fg:w="4"/><text x="0.9067%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::sumLevelSizesTiled (4 samples, 0.01%)</title><rect x="0.8048%" y="453" width="0.0102%" height="15" fill="rgb(245,192,40)" fg:x="315" fg:w="4"/><text x="1.0548%" y="463.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0&gt; (14 samples, 0.04%)</title><rect x="0.7844%" y="485" width="0.0358%" height="15" fill="rgb(238,167,29)" fg:x="307" fg:w="14"/><text x="1.0344%" y="495.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getMipmapSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0&gt; (8 samples, 0.02%)</title><rect x="0.7997%" y="469" width="0.0204%" height="15" fill="rgb(232,182,51)" fg:x="313" fg:w="8"/><text x="1.0497%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::sumLevelSizesTiled (4 samples, 0.01%)</title><rect x="0.8585%" y="469" width="0.0102%" height="15" fill="rgb(231,60,39)" fg:x="336" fg:w="4"/><text x="1.1085%" y="479.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getLevelOffset&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)1&gt; (14 samples, 0.04%)</title><rect x="0.8687%" y="469" width="0.0358%" height="15" fill="rgb(208,69,12)" fg:x="340" fg:w="14"/><text x="1.1187%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::sumLevelSizesTiled (9 samples, 0.02%)</title><rect x="0.9096%" y="453" width="0.0230%" height="15" fill="rgb(235,93,37)" fg:x="356" fg:w="9"/><text x="1.1596%" y="463.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)1&gt; (52 samples, 0.13%)</title><rect x="0.8202%" y="485" width="0.1329%" height="15" fill="rgb(213,116,39)" fg:x="321" fg:w="52"/><text x="1.0702%" y="495.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getMipmapSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)1&gt; (19 samples, 0.05%)</title><rect x="0.9045%" y="469" width="0.0485%" height="15" fill="rgb(222,207,29)" fg:x="354" fg:w="19"/><text x="1.1545%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::sumLevelSizesTwiddled (8 samples, 0.02%)</title><rect x="0.9326%" y="453" width="0.0204%" height="15" fill="rgb(206,96,30)" fg:x="365" fg:w="8"/><text x="1.1826%" y="463.50"></text></g><g><title>CoreFoundation`CFEqual (8 samples, 0.02%)</title><rect x="0.9530%" y="485" width="0.0204%" height="15" fill="rgb(218,138,4)" fg:x="373" fg:w="8"/><text x="1.2030%" y="495.50"></text></g><g><title>CoreFoundation`__CFStringEqual (4 samples, 0.01%)</title><rect x="0.9735%" y="485" width="0.0102%" height="15" fill="rgb(250,191,14)" fg:x="381" fg:w="4"/><text x="1.2235%" y="495.50"></text></g><g><title>IOSurface`DYLD-STUB$$CFEqual (5 samples, 0.01%)</title><rect x="0.9837%" y="485" width="0.0128%" height="15" fill="rgb(239,60,40)" fg:x="385" fg:w="5"/><text x="1.2337%" y="495.50"></text></g><g><title>CoreFoundation`CFEqual (17 samples, 0.04%)</title><rect x="1.0041%" y="469" width="0.0434%" height="15" fill="rgb(206,27,48)" fg:x="393" fg:w="17"/><text x="1.2541%" y="479.50"></text></g><g><title>IOSurface`IOSurfaceClientAlignProperty (26 samples, 0.07%)</title><rect x="1.0041%" y="485" width="0.0664%" height="15" fill="rgb(225,35,8)" fg:x="393" fg:w="26"/><text x="1.2541%" y="495.50"></text></g><g><title>CoreFoundation`__CFStringEqual (9 samples, 0.02%)</title><rect x="1.0476%" y="469" width="0.0230%" height="15" fill="rgb(250,213,24)" fg:x="410" fg:w="9"/><text x="1.2976%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::TextureGen4 (160 samples, 0.41%)</title><rect x="0.6720%" y="501" width="0.4088%" height="15" fill="rgb(247,123,22)" fg:x="263" fg:w="160"/><text x="0.9220%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (4 samples, 0.01%)</title><rect x="1.0706%" y="485" width="0.0102%" height="15" fill="rgb(231,138,38)" fg:x="419" fg:w="4"/><text x="1.3206%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::sumLevelSizesTiled (6 samples, 0.02%)</title><rect x="1.0910%" y="485" width="0.0153%" height="15" fill="rgb(231,145,46)" fg:x="427" fg:w="6"/><text x="1.3410%" y="495.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getMipmapSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0&gt; (10 samples, 0.03%)</title><rect x="1.0885%" y="501" width="0.0256%" height="15" fill="rgb(251,118,11)" fg:x="426" fg:w="10"/><text x="1.3385%" y="511.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)1&gt; (5 samples, 0.01%)</title><rect x="1.1166%" y="501" width="0.0128%" height="15" fill="rgb(217,147,25)" fg:x="437" fg:w="5"/><text x="1.3666%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.05%)</title><rect x="1.1728%" y="469" width="0.0460%" height="15" fill="rgb(247,81,37)" fg:x="459" fg:w="18"/><text x="1.4228%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.06%)</title><rect x="1.1600%" y="485" width="0.0613%" height="15" fill="rgb(209,12,38)" fg:x="454" fg:w="24"/><text x="1.4100%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.07%)</title><rect x="1.1549%" y="501" width="0.0690%" height="15" fill="rgb(227,1,9)" fg:x="452" fg:w="27"/><text x="1.4049%" y="511.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (6 samples, 0.02%)</title><rect x="1.2239%" y="501" width="0.0153%" height="15" fill="rgb(248,47,43)" fg:x="479" fg:w="6"/><text x="1.4739%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture initImplWithDevice:Descriptor:iosurface:plane:buffer:bytesPerRow:allowNPOT:sparsePageSize:isCompressedIOSurface:isHeapBacked:] (252 samples, 0.64%)</title><rect x="0.6055%" y="517" width="0.6439%" height="15" fill="rgb(221,10,30)" fg:x="237" fg:w="252"/><text x="0.8555%" y="527.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (4 samples, 0.01%)</title><rect x="1.2392%" y="501" width="0.0102%" height="15" fill="rgb(210,229,1)" fg:x="485" fg:w="4"/><text x="1.4892%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::PBEStateEncoderGen8&lt;kAGXRevG14&gt;::StateFields::StateFields(AGX::PBEStateEncoderGen8 (33 samples, 0.08%)</title><rect x="1.2648%" y="517" width="0.0843%" height="15" fill="rgb(222,148,37)" fg:x="495" fg:w="33"/><text x="1.5148%" y="527.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getLevelOffset&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0&gt; (4 samples, 0.01%)</title><rect x="1.4666%" y="501" width="0.0102%" height="15" fill="rgb(234,67,33)" fg:x="574" fg:w="4"/><text x="1.7166%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::sumLevelSizesTiled (11 samples, 0.03%)</title><rect x="1.4870%" y="485" width="0.0281%" height="15" fill="rgb(247,98,35)" fg:x="582" fg:w="11"/><text x="1.7370%" y="495.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getMipmapSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0&gt; (26 samples, 0.07%)</title><rect x="1.4768%" y="501" width="0.0664%" height="15" fill="rgb(247,138,52)" fg:x="578" fg:w="26"/><text x="1.7268%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::sumLevelSizesTwiddled (11 samples, 0.03%)</title><rect x="1.5152%" y="485" width="0.0281%" height="15" fill="rgb(213,79,30)" fg:x="593" fg:w="11"/><text x="1.7652%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::texBaseAddressesUpdated (84 samples, 0.21%)</title><rect x="1.3542%" y="517" width="0.2146%" height="15" fill="rgb(246,177,23)" fg:x="530" fg:w="84"/><text x="1.6042%" y="527.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getStride&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::Units)2, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::Op)0&gt; (10 samples, 0.03%)</title><rect x="1.5433%" y="501" width="0.0256%" height="15" fill="rgb(230,62,27)" fg:x="604" fg:w="10"/><text x="1.7933%" y="511.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getStride&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::Units)2, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::Op)0&gt; (4 samples, 0.01%)</title><rect x="1.6097%" y="517" width="0.0102%" height="15" fill="rgb(216,154,8)" fg:x="630" fg:w="4"/><text x="1.8597%" y="527.50"></text></g><g><title>IOGPU`DYLD-STUB$$MTLRangeAllocatorGetMaxFreeSize (4 samples, 0.01%)</title><rect x="1.6327%" y="485" width="0.0102%" height="15" fill="rgb(244,35,45)" fg:x="639" fg:w="4"/><text x="1.8827%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice newBufferWithDescriptor:] (67 samples, 0.17%)</title><rect x="1.6889%" y="469" width="0.1712%" height="15" fill="rgb(251,115,12)" fg:x="661" fg:w="67"/><text x="1.9389%" y="479.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (67 samples, 0.17%)</title><rect x="1.6889%" y="453" width="0.1712%" height="15" fill="rgb(240,54,50)" fg:x="661" fg:w="67"/><text x="1.9389%" y="463.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (67 samples, 0.17%)</title><rect x="1.6889%" y="437" width="0.1712%" height="15" fill="rgb(233,84,52)" fg:x="661" fg:w="67"/><text x="1.9389%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (67 samples, 0.17%)</title><rect x="1.6889%" y="421" width="0.1712%" height="15" fill="rgb(207,117,47)" fg:x="661" fg:w="67"/><text x="1.9389%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (65 samples, 0.17%)</title><rect x="1.6940%" y="405" width="0.1661%" height="15" fill="rgb(249,43,39)" fg:x="663" fg:w="65"/><text x="1.9440%" y="415.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (64 samples, 0.16%)</title><rect x="1.6966%" y="389" width="0.1635%" height="15" fill="rgb(209,38,44)" fg:x="664" fg:w="64"/><text x="1.9466%" y="399.50"></text></g><g><title>IOKit`IOConnectCallMethod (64 samples, 0.16%)</title><rect x="1.6966%" y="373" width="0.1635%" height="15" fill="rgb(236,212,23)" fg:x="664" fg:w="64"/><text x="1.9466%" y="383.50"></text></g><g><title>IOKit`io_connect_method (64 samples, 0.16%)</title><rect x="1.6966%" y="357" width="0.1635%" height="15" fill="rgb(242,79,21)" fg:x="664" fg:w="64"/><text x="1.9466%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (62 samples, 0.16%)</title><rect x="1.7017%" y="341" width="0.1584%" height="15" fill="rgb(211,96,35)" fg:x="666" fg:w="62"/><text x="1.9517%" y="351.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorHeap::Allocator&lt;std::__1::__tree_node&lt;std::__1::__value_type&lt;unsigned int, short&gt;, void*&gt;&gt;::allocate (8 samples, 0.02%)</title><rect x="1.8678%" y="453" width="0.0204%" height="15" fill="rgb(253,215,40)" fg:x="731" fg:w="8"/><text x="2.1178%" y="463.50"></text></g><g><title>IOGPU`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;unsigned int, short&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::__map_value_compare&lt;unsigned int, std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::less&lt;unsigned int&gt;, true&gt;, IOGPUMetalSuballocatorHeap::Allocator&lt;std::__1::__value_type&lt;unsigned int, short&gt;&gt;&gt;::__emplace_multi&lt;std::__1::pair&lt;unsigned int, short&gt;&gt;(std::__1::pair (11 samples, 0.03%)</title><rect x="1.8626%" y="469" width="0.0281%" height="15" fill="rgb(211,81,21)" fg:x="729" fg:w="11"/><text x="2.1126%" y="479.50"></text></g><g><title>IOGPU`void std::__1::__tree_remove&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (5 samples, 0.01%)</title><rect x="1.8907%" y="469" width="0.0128%" height="15" fill="rgb(208,190,38)" fg:x="740" fg:w="5"/><text x="2.1407%" y="479.50"></text></g><g><title>Metal`MTLRangeAllocatorAllocate (12 samples, 0.03%)</title><rect x="1.9061%" y="469" width="0.0307%" height="15" fill="rgb(235,213,38)" fg:x="746" fg:w="12"/><text x="2.1561%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (8 samples, 0.02%)</title><rect x="1.9418%" y="469" width="0.0204%" height="15" fill="rgb(237,122,38)" fg:x="760" fg:w="8"/><text x="2.1918%" y="479.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorAllocate (127 samples, 0.32%)</title><rect x="1.6531%" y="485" width="0.3245%" height="15" fill="rgb(244,218,35)" fg:x="647" fg:w="127"/><text x="1.9031%" y="495.50"></text></g><g><title>Metal`MTLRangeAllocatorGetMaxFreeSize (42 samples, 0.11%)</title><rect x="1.9878%" y="485" width="0.1073%" height="15" fill="rgb(240,68,47)" fg:x="778" fg:w="42"/><text x="2.2378%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (188 samples, 0.48%)</title><rect x="1.6301%" y="501" width="0.4804%" height="15" fill="rgb(210,16,53)" fg:x="638" fg:w="188"/><text x="1.8801%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="2.1181%" y="501" width="0.0204%" height="15" fill="rgb(235,124,12)" fg:x="829" fg:w="8"/><text x="2.3681%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:] (229 samples, 0.59%)</title><rect x="1.6276%" y="517" width="0.5851%" height="15" fill="rgb(224,169,11)" fg:x="637" fg:w="229"/><text x="1.8776%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (29 samples, 0.07%)</title><rect x="2.1386%" y="501" width="0.0741%" height="15" fill="rgb(250,166,2)" fg:x="837" fg:w="29"/><text x="2.3886%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (7 samples, 0.02%)</title><rect x="2.2127%" y="517" width="0.0179%" height="15" fill="rgb(242,216,29)" fg:x="866" fg:w="7"/><text x="2.4627%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMemoryInfo addResourceToList:] (5 samples, 0.01%)</title><rect x="2.3226%" y="485" width="0.0128%" height="15" fill="rgb(230,116,27)" fg:x="909" fg:w="5"/><text x="2.5726%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMemoryInfo addResourceToList:] (4 samples, 0.01%)</title><rect x="2.3660%" y="469" width="0.0102%" height="15" fill="rgb(228,99,48)" fg:x="926" fg:w="4"/><text x="2.6160%" y="479.50"></text></g><g><title>CoreFoundation`CFAllocatorAllocate (4 samples, 0.01%)</title><rect x="2.4069%" y="453" width="0.0102%" height="15" fill="rgb(253,11,6)" fg:x="942" fg:w="4"/><text x="2.6569%" y="463.50"></text></g><g><title>CoreFoundation`CFRetain (9 samples, 0.02%)</title><rect x="2.4171%" y="453" width="0.0230%" height="15" fill="rgb(247,143,39)" fg:x="946" fg:w="9"/><text x="2.6671%" y="463.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$malloc_zone_calloc (4 samples, 0.01%)</title><rect x="2.4401%" y="453" width="0.0102%" height="15" fill="rgb(236,97,10)" fg:x="955" fg:w="4"/><text x="2.6901%" y="463.50"></text></g><g><title>CoreFoundation`_CFRetain (5 samples, 0.01%)</title><rect x="2.4631%" y="453" width="0.0128%" height="15" fill="rgb(233,208,19)" fg:x="964" fg:w="5"/><text x="2.7131%" y="463.50"></text></g><g><title>CoreFoundation`CFRetain (5 samples, 0.01%)</title><rect x="2.5040%" y="437" width="0.0128%" height="15" fill="rgb(216,164,2)" fg:x="980" fg:w="5"/><text x="2.7540%" y="447.50"></text></g><g><title>CoreFoundation`_CFRetain (4 samples, 0.01%)</title><rect x="2.5193%" y="437" width="0.0102%" height="15" fill="rgb(220,129,5)" fg:x="986" fg:w="4"/><text x="2.7693%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.02%)</title><rect x="2.5397%" y="437" width="0.0230%" height="15" fill="rgb(242,17,10)" fg:x="994" fg:w="9"/><text x="2.7897%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (9 samples, 0.02%)</title><rect x="2.5397%" y="421" width="0.0230%" height="15" fill="rgb(242,107,0)" fg:x="994" fg:w="9"/><text x="2.7897%" y="431.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (42 samples, 0.11%)</title><rect x="2.4759%" y="453" width="0.1073%" height="15" fill="rgb(251,28,31)" fg:x="969" fg:w="42"/><text x="2.7259%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (8 samples, 0.02%)</title><rect x="2.5627%" y="437" width="0.0204%" height="15" fill="rgb(233,223,10)" fg:x="1003" fg:w="8"/><text x="2.8127%" y="447.50"></text></g><g><title>IOKit`DYLD-STUB$$memcpy (7 samples, 0.02%)</title><rect x="2.6164%" y="437" width="0.0179%" height="15" fill="rgb(215,21,27)" fg:x="1024" fg:w="7"/><text x="2.8664%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_internal (18 samples, 0.05%)</title><rect x="2.7646%" y="421" width="0.0460%" height="15" fill="rgb(232,23,21)" fg:x="1082" fg:w="18"/><text x="3.0146%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,967 samples, 5.03%)</title><rect x="2.8106%" y="421" width="5.0258%" height="15" fill="rgb(244,5,23)" fg:x="1100" fg:w="1967"/><text x="3.0606%" y="431.50">libsys..</text></g><g><title>IOKit`io_connect_method (2,037 samples, 5.20%)</title><rect x="2.6343%" y="437" width="5.2047%" height="15" fill="rgb(226,81,46)" fg:x="1031" fg:w="2037"/><text x="2.8843%" y="447.50">IOKit`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="7.8491%" y="437" width="0.0153%" height="15" fill="rgb(247,70,30)" fg:x="3072" fg:w="6"/><text x="8.0991%" y="447.50"></text></g><g><title>IOKit`IOConnectCallMethod (2,067 samples, 5.28%)</title><rect x="2.5959%" y="453" width="5.2813%" height="15" fill="rgb(212,68,19)" fg:x="1016" fg:w="2067"/><text x="2.8459%" y="463.50">IOKit`..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (5 samples, 0.01%)</title><rect x="7.8645%" y="437" width="0.0128%" height="15" fill="rgb(240,187,13)" fg:x="3078" fg:w="5"/><text x="8.1145%" y="447.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (2,152 samples, 5.50%)</title><rect x="2.4018%" y="469" width="5.4985%" height="15" fill="rgb(223,113,26)" fg:x="940" fg:w="2152"/><text x="2.6518%" y="479.50">IOGPU`I..</text></g><g><title>IOGPU`IOGPUResourceGetClientShared (8 samples, 0.02%)</title><rect x="7.9003%" y="469" width="0.0204%" height="15" fill="rgb(206,192,2)" fg:x="3092" fg:w="8"/><text x="8.1503%" y="479.50"></text></g><g><title>CoreFoundation`CFGetTypeID (7 samples, 0.02%)</title><rect x="7.9028%" y="453" width="0.0179%" height="15" fill="rgb(241,108,4)" fg:x="3093" fg:w="7"/><text x="8.1528%" y="463.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (34 samples, 0.09%)</title><rect x="7.9769%" y="437" width="0.0869%" height="15" fill="rgb(247,173,49)" fg:x="3122" fg:w="34"/><text x="8.2269%" y="447.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (42 samples, 0.11%)</title><rect x="7.9718%" y="453" width="0.1073%" height="15" fill="rgb(224,114,35)" fg:x="3120" fg:w="42"/><text x="8.2218%" y="463.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (6 samples, 0.02%)</title><rect x="8.0638%" y="437" width="0.0153%" height="15" fill="rgb(245,159,27)" fg:x="3156" fg:w="6"/><text x="8.3138%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (57 samples, 0.15%)</title><rect x="7.9437%" y="469" width="0.1456%" height="15" fill="rgb(245,172,44)" fg:x="3109" fg:w="57"/><text x="8.1937%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.01%)</title><rect x="8.0919%" y="469" width="0.0102%" height="15" fill="rgb(236,23,11)" fg:x="3167" fg:w="4"/><text x="8.3419%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (2,257 samples, 5.77%)</title><rect x="2.3404%" y="485" width="5.7668%" height="15" fill="rgb(205,117,38)" fg:x="916" fg:w="2257"/><text x="2.5904%" y="495.50">IOGPU`-..</text></g><g><title>IOGPU`DYLD-STUB$$objc_retain (4 samples, 0.01%)</title><rect x="8.1123%" y="485" width="0.0102%" height="15" fill="rgb(237,72,25)" fg:x="3175" fg:w="4"/><text x="8.3623%" y="495.50"></text></g><g><title>IOGPU`IOGPUResourceGetClientShared (4 samples, 0.01%)</title><rect x="8.1353%" y="485" width="0.0102%" height="15" fill="rgb(244,70,9)" fg:x="3184" fg:w="4"/><text x="8.3853%" y="495.50"></text></g><g><title>IOGPU`objc_msgSend$_addResource: (4 samples, 0.01%)</title><rect x="8.1532%" y="485" width="0.0102%" height="15" fill="rgb(217,125,39)" fg:x="3191" fg:w="4"/><text x="8.4032%" y="495.50"></text></g><g><title>IOGPU`objc_msgSend$addResourceToList: (4 samples, 0.01%)</title><rect x="8.1634%" y="485" width="0.0102%" height="15" fill="rgb(235,36,10)" fg:x="3195" fg:w="4"/><text x="8.4134%" y="495.50"></text></g><g><title>Metal`-[_MTLDevice supportsFamily:] (67 samples, 0.17%)</title><rect x="8.1762%" y="469" width="0.1712%" height="15" fill="rgb(251,123,47)" fg:x="3200" fg:w="67"/><text x="8.4262%" y="479.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForFeatureSetQuery(MTLPixelFormatQuery&amp;, MTLPixelFormat) (5 samples, 0.01%)</title><rect x="8.3474%" y="469" width="0.0128%" height="15" fill="rgb(221,13,13)" fg:x="3267" fg:w="5"/><text x="8.5974%" y="479.50"></text></g><g><title>Metal`MTLPixelFormatQuery::supportsFamily (4 samples, 0.01%)</title><rect x="8.3602%" y="469" width="0.0102%" height="15" fill="rgb(238,131,9)" fg:x="3272" fg:w="4"/><text x="8.6102%" y="479.50"></text></g><g><title>Metal`objc_msgSend$supportsFamily: (5 samples, 0.01%)</title><rect x="8.3729%" y="469" width="0.0128%" height="15" fill="rgb(211,50,8)" fg:x="3277" fg:w="5"/><text x="8.6229%" y="479.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (101 samples, 0.26%)</title><rect x="8.1762%" y="485" width="0.2581%" height="15" fill="rgb(245,182,24)" fg:x="3200" fg:w="101"/><text x="8.4262%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (19 samples, 0.05%)</title><rect x="8.3857%" y="469" width="0.0485%" height="15" fill="rgb(242,14,37)" fg:x="3282" fg:w="19"/><text x="8.6357%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.02%)</title><rect x="8.4368%" y="485" width="0.0179%" height="15" fill="rgb(246,228,12)" fg:x="3302" fg:w="7"/><text x="8.6868%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (4 samples, 0.01%)</title><rect x="8.4598%" y="485" width="0.0102%" height="15" fill="rgb(213,55,15)" fg:x="3311" fg:w="4"/><text x="8.7098%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_retain (4 samples, 0.01%)</title><rect x="8.4700%" y="485" width="0.0102%" height="15" fill="rgb(209,9,3)" fg:x="3315" fg:w="4"/><text x="8.7200%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithBuffer:descriptor:sysMemOffset:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:isStrideTexture:] (2,435 samples, 6.22%)</title><rect x="2.2689%" y="501" width="6.2216%" height="15" fill="rgb(230,59,30)" fg:x="888" fg:w="2435"/><text x="2.5189%" y="511.50">IOGPU`-[..</text></g><g><title>IOGPU`DYLD-STUB$$objc_opt_class (4 samples, 0.01%)</title><rect x="8.4905%" y="501" width="0.0102%" height="15" fill="rgb(209,121,21)" fg:x="3323" fg:w="4"/><text x="8.7405%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (14 samples, 0.04%)</title><rect x="8.5186%" y="501" width="0.0358%" height="15" fill="rgb(220,109,13)" fg:x="3334" fg:w="14"/><text x="8.7686%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:descriptor:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (2,485 samples, 6.35%)</title><rect x="2.2357%" y="517" width="6.3493%" height="15" fill="rgb(232,18,1)" fg:x="875" fg:w="2485"/><text x="2.4857%" y="527.50">IOGPU`-[..</text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (8 samples, 0.02%)</title><rect x="8.5646%" y="501" width="0.0204%" height="15" fill="rgb(215,41,42)" fg:x="3352" fg:w="8"/><text x="8.8146%" y="511.50"></text></g><g><title>IOGPU`objc_msgSend$allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength: (4 samples, 0.01%)</title><rect x="8.5850%" y="517" width="0.0102%" height="15" fill="rgb(224,123,36)" fg:x="3360" fg:w="4"/><text x="8.8350%" y="527.50"></text></g><g><title>Metal`-[MTLTextureDescriptorInternal resourceOptions] (4 samples, 0.01%)</title><rect x="8.6106%" y="517" width="0.0102%" height="15" fill="rgb(240,125,3)" fg:x="3370" fg:w="4"/><text x="8.8606%" y="527.50"></text></g><g><title>Metal`-[MTLTextureDescriptorInternal storageMode] (4 samples, 0.01%)</title><rect x="8.6233%" y="517" width="0.0102%" height="15" fill="rgb(205,98,50)" fg:x="3375" fg:w="4"/><text x="8.8733%" y="527.50"></text></g><g><title>Metal`-[_MTLDevice supportsFamily:] (57 samples, 0.15%)</title><rect x="8.6923%" y="485" width="0.1456%" height="15" fill="rgb(205,185,37)" fg:x="3402" fg:w="57"/><text x="8.9423%" y="495.50"></text></g><g><title>Metal`MTLPixelFormatQuery::supportsFamily (5 samples, 0.01%)</title><rect x="8.8456%" y="485" width="0.0128%" height="15" fill="rgb(238,207,15)" fg:x="3462" fg:w="5"/><text x="9.0956%" y="495.50"></text></g><g><title>Metal`adjustPixelFormatForiOSDevice(MTLPixelFormat, MTLPixelFormatInfo const&amp;, unsigned long*, unsigned long*, unsigned char*, bool, bool) (4 samples, 0.01%)</title><rect x="8.8584%" y="485" width="0.0102%" height="15" fill="rgb(213,199,42)" fg:x="3467" fg:w="4"/><text x="9.1084%" y="495.50"></text></g><g><title>Metal`objc_msgSend$supportsFamily: (15 samples, 0.04%)</title><rect x="8.8686%" y="485" width="0.0383%" height="15" fill="rgb(235,201,11)" fg:x="3471" fg:w="15"/><text x="9.1186%" y="495.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (97 samples, 0.25%)</title><rect x="8.6898%" y="501" width="0.2478%" height="15" fill="rgb(207,46,11)" fg:x="3401" fg:w="97"/><text x="8.9398%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (12 samples, 0.03%)</title><rect x="8.9069%" y="485" width="0.0307%" height="15" fill="rgb(241,35,35)" fg:x="3486" fg:w="12"/><text x="9.1569%" y="495.50"></text></g><g><title>Metal`_mtlValidateMTLTextureSwizzleKey (5 samples, 0.01%)</title><rect x="8.9453%" y="501" width="0.0128%" height="15" fill="rgb(243,32,47)" fg:x="3501" fg:w="5"/><text x="9.1953%" y="511.50"></text></g><g><title>Metal`objc_msgSend$limits (6 samples, 0.02%)</title><rect x="8.9580%" y="501" width="0.0153%" height="15" fill="rgb(247,202,23)" fg:x="3506" fg:w="6"/><text x="9.2080%" y="511.50"></text></g><g><title>Metal`-[MTLTextureDescriptorInternal validateWithDevice:] (136 samples, 0.35%)</title><rect x="8.6361%" y="517" width="0.3475%" height="15" fill="rgb(219,102,11)" fg:x="3380" fg:w="136"/><text x="8.8861%" y="527.50"></text></g><g><title>Metal`validateMTLStorageMode (4 samples, 0.01%)</title><rect x="8.9734%" y="501" width="0.0102%" height="15" fill="rgb(243,110,44)" fg:x="3512" fg:w="4"/><text x="9.2234%" y="511.50"></text></g><g><title>Metal`-[_MTLDevice supportsFamily:] (12 samples, 0.03%)</title><rect x="8.9913%" y="517" width="0.0307%" height="15" fill="rgb(222,74,54)" fg:x="3519" fg:w="12"/><text x="9.2413%" y="527.50"></text></g><g><title>Metal`-[_MTLDeviceFeatureQueries familySupportsNonPrivateDepthStencilTextures] (5 samples, 0.01%)</title><rect x="9.0296%" y="517" width="0.0128%" height="15" fill="rgb(216,99,12)" fg:x="3534" fg:w="5"/><text x="9.2796%" y="527.50"></text></g><g><title>Metal`objc_msgSend$storageMode (4 samples, 0.01%)</title><rect x="9.0781%" y="517" width="0.0102%" height="15" fill="rgb(226,22,26)" fg:x="3553" fg:w="4"/><text x="9.3281%" y="527.50"></text></g><g><title>Metal`validateMTLStorageMode (8 samples, 0.02%)</title><rect x="9.1190%" y="517" width="0.0204%" height="15" fill="rgb(217,163,10)" fg:x="3569" fg:w="8"/><text x="9.3690%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (62 samples, 0.16%)</title><rect x="9.1395%" y="517" width="0.1584%" height="15" fill="rgb(213,25,53)" fg:x="3577" fg:w="62"/><text x="9.3895%" y="527.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (4 samples, 0.01%)</title><rect x="9.3081%" y="517" width="0.0102%" height="15" fill="rgb(252,105,26)" fg:x="3643" fg:w="4"/><text x="9.5581%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (3,421 samples, 8.74%)</title><rect x="0.5800%" y="533" width="8.7409%" height="15" fill="rgb(220,39,43)" fg:x="227" fg:w="3421"/><text x="0.8300%" y="543.50">AGXMetalG14G..</text></g><g><title>AGXMetalG14G`AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::texBaseAddressesUpdated (4 samples, 0.01%)</title><rect x="9.3209%" y="533" width="0.0102%" height="15" fill="rgb(229,68,48)" fg:x="3648" fg:w="4"/><text x="9.5709%" y="543.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset: (4 samples, 0.01%)</title><rect x="9.3388%" y="533" width="0.0102%" height="15" fill="rgb(252,8,32)" fg:x="3655" fg:w="4"/><text x="9.5888%" y="543.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$updateBindDataWithAddresses:cpuMetadataAddress:gpuVirtualAddress:isCompressible:shouldInitMetadata: (4 samples, 0.01%)</title><rect x="9.3566%" y="533" width="0.0102%" height="15" fill="rgb(223,20,43)" fg:x="3662" fg:w="4"/><text x="9.6066%" y="543.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$updateBindDataWithAddresses:gpuVirtualAddress:shouldInitMetadata: (6 samples, 0.02%)</title><rect x="9.3669%" y="533" width="0.0153%" height="15" fill="rgb(229,81,49)" fg:x="3666" fg:w="6"/><text x="9.6169%" y="543.50"></text></g><g><title>Metal`-[MTLTextureDescriptorInternal init] (4 samples, 0.01%)</title><rect x="9.4052%" y="517" width="0.0102%" height="15" fill="rgb(236,28,36)" fg:x="3681" fg:w="4"/><text x="9.6552%" y="527.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForFeatureSetQuery(MTLPixelFormatQuery&amp;, MTLPixelFormat) (8 samples, 0.02%)</title><rect x="9.4205%" y="469" width="0.0204%" height="15" fill="rgb(249,185,26)" fg:x="3687" fg:w="8"/><text x="9.6705%" y="479.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (27 samples, 0.07%)</title><rect x="9.4205%" y="485" width="0.0690%" height="15" fill="rgb(249,174,33)" fg:x="3687" fg:w="27"/><text x="9.6705%" y="495.50"></text></g><g><title>Metal`MTLPixelFormatQuery::supportsFamily (19 samples, 0.05%)</title><rect x="9.4410%" y="469" width="0.0485%" height="15" fill="rgb(233,201,37)" fg:x="3695" fg:w="19"/><text x="9.6910%" y="479.50"></text></g><g><title>Metal`MTLDebugValidateMTLPixelFormat (30 samples, 0.08%)</title><rect x="9.4154%" y="501" width="0.0767%" height="15" fill="rgb(221,78,26)" fg:x="3685" fg:w="30"/><text x="9.6654%" y="511.50"></text></g><g><title>Metal`-[MTLTextureDescriptorInternal setPixelFormat:] (31 samples, 0.08%)</title><rect x="9.4154%" y="517" width="0.0792%" height="15" fill="rgb(250,127,30)" fg:x="3685" fg:w="31"/><text x="9.6654%" y="527.50"></text></g><g><title>libdyld.dylib`dyld_get_active_platform (4 samples, 0.01%)</title><rect x="9.5150%" y="517" width="0.0102%" height="15" fill="rgb(230,49,44)" fg:x="3724" fg:w="4"/><text x="9.7650%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_allocWithZone (4 samples, 0.01%)</title><rect x="9.5278%" y="517" width="0.0102%" height="15" fill="rgb(229,67,23)" fg:x="3729" fg:w="4"/><text x="9.7778%" y="527.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (7 samples, 0.02%)</title><rect x="9.5380%" y="485" width="0.0179%" height="15" fill="rgb(249,83,47)" fg:x="3733" fg:w="7"/><text x="9.7880%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="9.5457%" y="469" width="0.0102%" height="15" fill="rgb(215,43,3)" fg:x="3736" fg:w="4"/><text x="9.7957%" y="479.50"></text></g><g><title>Metal`+[MTLTextureDescriptor allocWithZone:] (10 samples, 0.03%)</title><rect x="9.5380%" y="501" width="0.0256%" height="15" fill="rgb(238,154,13)" fg:x="3733" fg:w="10"/><text x="9.7880%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (22 samples, 0.06%)</title><rect x="9.5380%" y="517" width="0.0562%" height="15" fill="rgb(219,56,2)" fg:x="3733" fg:w="22"/><text x="9.7880%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (6 samples, 0.02%)</title><rect x="9.5789%" y="501" width="0.0153%" height="15" fill="rgb(233,0,4)" fg:x="3749" fg:w="6"/><text x="9.8289%" y="511.50"></text></g><g><title>Metal`+[MTLTextureDescriptor texture2DDescriptorWithPixelFormat:width:height:mipmapped:] (85 samples, 0.22%)</title><rect x="9.3924%" y="533" width="0.2172%" height="15" fill="rgb(235,30,7)" fg:x="3676" fg:w="85"/><text x="9.6424%" y="543.50"></text></g><g><title>Metal`objc_msgSend$setMipmapLevelCount: (4 samples, 0.01%)</title><rect x="9.6377%" y="533" width="0.0102%" height="15" fill="rgb(250,79,13)" fg:x="3772" fg:w="4"/><text x="9.8877%" y="543.50"></text></g><g><title>libobjc.A.dylib`class_respondsToSelector_inst (4 samples, 0.01%)</title><rect x="9.6735%" y="533" width="0.0102%" height="15" fill="rgb(211,146,34)" fg:x="3786" fg:w="4"/><text x="9.9235%" y="543.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (5 samples, 0.01%)</title><rect x="9.6939%" y="517" width="0.0128%" height="15" fill="rgb(228,22,38)" fg:x="3794" fg:w="5"/><text x="9.9439%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="9.6965%" y="501" width="0.0102%" height="15" fill="rgb(235,168,5)" fg:x="3795" fg:w="4"/><text x="9.9465%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (10 samples, 0.03%)</title><rect x="9.6913%" y="533" width="0.0256%" height="15" fill="rgb(221,155,16)" fg:x="3793" fg:w="10"/><text x="9.9413%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (4 samples, 0.01%)</title><rect x="9.7067%" y="517" width="0.0102%" height="15" fill="rgb(215,215,53)" fg:x="3799" fg:w="4"/><text x="9.9567%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (5 samples, 0.01%)</title><rect x="9.7476%" y="501" width="0.0128%" height="15" fill="rgb(223,4,10)" fg:x="3815" fg:w="5"/><text x="9.9976%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.02%)</title><rect x="9.7603%" y="501" width="0.0179%" height="15" fill="rgb(234,103,6)" fg:x="3820" fg:w="7"/><text x="10.0103%" y="511.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (25 samples, 0.06%)</title><rect x="9.7271%" y="517" width="0.0639%" height="15" fill="rgb(227,97,0)" fg:x="3807" fg:w="25"/><text x="9.9771%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (38 samples, 0.10%)</title><rect x="9.7195%" y="533" width="0.0971%" height="15" fill="rgb(234,150,53)" fg:x="3804" fg:w="38"/><text x="9.9695%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (51 samples, 0.13%)</title><rect x="9.8165%" y="533" width="0.1303%" height="15" fill="rgb(228,201,54)" fg:x="3842" fg:w="51"/><text x="10.0665%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend$init (5 samples, 0.01%)</title><rect x="9.9469%" y="533" width="0.0128%" height="15" fill="rgb(222,22,37)" fg:x="3893" fg:w="5"/><text x="10.1969%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (15 samples, 0.04%)</title><rect x="9.9596%" y="533" width="0.0383%" height="15" fill="rgb(237,53,32)" fg:x="3898" fg:w="15"/><text x="10.2096%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (10 samples, 0.03%)</title><rect x="10.0056%" y="533" width="0.0256%" height="15" fill="rgb(233,25,53)" fg:x="3916" fg:w="10"/><text x="10.2556%" y="543.50"></text></g><g><title>libobjc.A.dylib`moveTLSAutoreleaseToPool(ReturnAutoreleaseInfo) (4 samples, 0.01%)</title><rect x="10.0210%" y="517" width="0.0102%" height="15" fill="rgb(210,40,34)" fg:x="3922" fg:w="4"/><text x="10.2710%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_CreateTexture (3,794 samples, 9.69%)</title><rect x="0.3552%" y="549" width="9.6939%" height="15" fill="rgb(241,220,44)" fg:x="139" fg:w="3794"/><text x="0.6052%" y="559.50">libSDL2-2.0.0...</text></g><g><title>libobjc.A.dylib`objc_storeStrong (7 samples, 0.02%)</title><rect x="10.0312%" y="533" width="0.0179%" height="15" fill="rgb(235,28,35)" fg:x="3926" fg:w="7"/><text x="10.2812%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$getenv (4 samples, 0.01%)</title><rect x="10.0542%" y="533" width="0.0102%" height="15" fill="rgb(210,56,17)" fg:x="3935" fg:w="4"/><text x="10.3042%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$strcmp (10 samples, 0.03%)</title><rect x="10.0644%" y="533" width="0.0256%" height="15" fill="rgb(224,130,29)" fg:x="3939" fg:w="10"/><text x="10.3144%" y="543.50"></text></g><g><title>libsystem_c.dylib`__findenv_locked (34 samples, 0.09%)</title><rect x="10.1180%" y="517" width="0.0869%" height="15" fill="rgb(235,212,8)" fg:x="3960" fg:w="34"/><text x="10.3680%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_GetHint_REAL (48 samples, 0.12%)</title><rect x="10.0899%" y="533" width="0.1226%" height="15" fill="rgb(223,33,50)" fg:x="3949" fg:w="48"/><text x="10.3399%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_GetScaleMode (137 samples, 0.35%)</title><rect x="10.0516%" y="549" width="0.3500%" height="15" fill="rgb(219,149,13)" fg:x="3934" fg:w="137"/><text x="10.3016%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (71 samples, 0.18%)</title><rect x="10.2202%" y="533" width="0.1814%" height="15" fill="rgb(250,156,29)" fg:x="4000" fg:w="71"/><text x="10.4702%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (20 samples, 0.05%)</title><rect x="10.4323%" y="549" width="0.0511%" height="15" fill="rgb(216,193,19)" fg:x="4083" fg:w="20"/><text x="10.6823%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_release (17 samples, 0.04%)</title><rect x="10.4885%" y="549" width="0.0434%" height="15" fill="rgb(216,135,14)" fg:x="4105" fg:w="17"/><text x="10.7385%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_retain (11 samples, 0.03%)</title><rect x="10.5320%" y="549" width="0.0281%" height="15" fill="rgb(241,47,5)" fg:x="4122" fg:w="11"/><text x="10.7820%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_storeStrong (6 samples, 0.02%)</title><rect x="10.5703%" y="549" width="0.0153%" height="15" fill="rgb(233,42,35)" fg:x="4137" fg:w="6"/><text x="10.8203%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTexture_REAL (4,050 samples, 10.35%)</title><rect x="0.2504%" y="565" width="10.3480%" height="15" fill="rgb(231,13,6)" fg:x="98" fg:w="4050"/><text x="0.5004%" y="575.50">libSDL2-2.0.0.d..</text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (4 samples, 0.01%)</title><rect x="10.6597%" y="533" width="0.0102%" height="15" fill="rgb(207,181,40)" fg:x="4172" fg:w="4"/><text x="10.9097%" y="543.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::isLevelTiled (7 samples, 0.02%)</title><rect x="10.6929%" y="501" width="0.0179%" height="15" fill="rgb(254,173,49)" fg:x="4185" fg:w="7"/><text x="10.9429%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getCPUPtr (5 samples, 0.01%)</title><rect x="10.7594%" y="485" width="0.0128%" height="15" fill="rgb(221,1,38)" fg:x="4211" fg:w="5"/><text x="11.0094%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::isLevelTiled (12 samples, 0.03%)</title><rect x="10.7721%" y="485" width="0.0307%" height="15" fill="rgb(206,124,46)" fg:x="4216" fg:w="12"/><text x="11.0221%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::validateRegion (11 samples, 0.03%)</title><rect x="10.8028%" y="485" width="0.0281%" height="15" fill="rgb(249,21,11)" fg:x="4228" fg:w="11"/><text x="11.0528%" y="495.50"></text></g><g><title>AGXMetalG14G`agxaAssertBufferIsValid(unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) (107 samples, 0.27%)</title><rect x="10.8309%" y="485" width="0.2734%" height="15" fill="rgb(222,201,40)" fg:x="4239" fg:w="107"/><text x="11.0809%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::writeRegion (397 samples, 1.01%)</title><rect x="10.7185%" y="501" width="1.0144%" height="15" fill="rgb(235,61,29)" fg:x="4195" fg:w="397"/><text x="10.9685%" y="511.50"></text></g><g><title>AGXMetalG14G`void agxsTwiddleAddressCommon&lt;(TwiddleOrder)1, AGXSConverterPassThru&lt;true, 4ul, 1u, (TwiddleOrder)1&gt;&gt;(AGXSConverterPassThru&lt;true, 4ul, 1u, (TwiddleOrder)1&gt;::twid_ptr_type, AGXSConverterPassThru&lt;true, 4ul, 1u, (246 samples, 0.63%)</title><rect x="11.1043%" y="485" width="0.6285%" height="15" fill="rgb(219,207,3)" fg:x="4346" fg:w="246"/><text x="11.3543%" y="495.50"></text></g><g><title>AGXMetalG14G`agxaAssertBufferIsValid(unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) (8 samples, 0.02%)</title><rect x="11.7328%" y="501" width="0.0204%" height="15" fill="rgb(222,56,46)" fg:x="4592" fg:w="8"/><text x="11.9828%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (425 samples, 1.09%)</title><rect x="10.6750%" y="517" width="1.0859%" height="15" fill="rgb(239,76,54)" fg:x="4178" fg:w="425"/><text x="10.9250%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource storageMode] (4 samples, 0.01%)</title><rect x="11.7661%" y="517" width="0.0102%" height="15" fill="rgb(231,124,27)" fg:x="4605" fg:w="4"/><text x="12.0161%" y="527.50"></text></g><g><title>libobjc.A.dylib`class_respondsToSelector_inst (5 samples, 0.01%)</title><rect x="11.7942%" y="501" width="0.0128%" height="15" fill="rgb(249,195,6)" fg:x="4616" fg:w="5"/><text x="12.0442%" y="511.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrNilTryCache (4 samples, 0.01%)</title><rect x="11.7967%" y="485" width="0.0102%" height="15" fill="rgb(237,174,47)" fg:x="4617" fg:w="4"/><text x="12.0467%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_GetStorageMode (8 samples, 0.02%)</title><rect x="11.7891%" y="517" width="0.0204%" height="15" fill="rgb(206,201,31)" fg:x="4614" fg:w="8"/><text x="12.0391%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (458 samples, 1.17%)</title><rect x="10.6725%" y="533" width="1.1702%" height="15" fill="rgb(231,57,52)" fg:x="4177" fg:w="458"/><text x="10.9225%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (7 samples, 0.02%)</title><rect x="11.8504%" y="533" width="0.0179%" height="15" fill="rgb(248,177,22)" fg:x="4638" fg:w="7"/><text x="12.1004%" y="543.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (5 samples, 0.01%)</title><rect x="11.8555%" y="517" width="0.0128%" height="15" fill="rgb(215,211,37)" fg:x="4640" fg:w="5"/><text x="12.1055%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (488 samples, 1.25%)</title><rect x="10.6444%" y="549" width="1.2469%" height="15" fill="rgb(241,128,51)" fg:x="4166" fg:w="488"/><text x="10.8944%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (4 samples, 0.01%)</title><rect x="11.9066%" y="549" width="0.0102%" height="15" fill="rgb(227,165,31)" fg:x="4660" fg:w="4"/><text x="12.1566%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="11.9194%" y="549" width="0.0204%" height="15" fill="rgb(228,167,24)" fg:x="4665" fg:w="8"/><text x="12.1694%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.01%)</title><rect x="11.9398%" y="549" width="0.0102%" height="15" fill="rgb(228,143,12)" fg:x="4673" fg:w="4"/><text x="12.1898%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_retain (7 samples, 0.02%)</title><rect x="11.9500%" y="549" width="0.0179%" height="15" fill="rgb(249,149,8)" fg:x="4677" fg:w="7"/><text x="12.2000%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (531 samples, 1.36%)</title><rect x="10.6163%" y="565" width="1.3567%" height="15" fill="rgb(243,35,44)" fg:x="4155" fg:w="531"/><text x="10.8663%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTextureFromSurface_REAL (4,596 samples, 11.74%)</title><rect x="0.2325%" y="581" width="11.7431%" height="15" fill="rgb(246,89,9)" fg:x="91" fg:w="4596"/><text x="0.4825%" y="591.50">libSDL2-2.0.0.dyl..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTexture_REAL (9 samples, 0.02%)</title><rect x="11.9756%" y="581" width="0.0230%" height="15" fill="rgb(233,213,13)" fg:x="4687" fg:w="9"/><text x="12.2256%" y="591.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setFragmentSamplerState:atIndex:] (4 samples, 0.01%)</title><rect x="12.0446%" y="549" width="0.0102%" height="15" fill="rgb(233,141,41)" fg:x="4714" fg:w="4"/><text x="12.2946%" y="559.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setFragmentTexture:atIndex:] (4 samples, 0.01%)</title><rect x="12.0548%" y="549" width="0.0102%" height="15" fill="rgb(239,167,4)" fg:x="4718" fg:w="4"/><text x="12.3048%" y="559.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation: (4 samples, 0.01%)</title><rect x="12.0650%" y="549" width="0.0102%" height="15" fill="rgb(209,217,16)" fg:x="4722" fg:w="4"/><text x="12.3150%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_TextureData mtlsampler] (4 samples, 0.01%)</title><rect x="12.1084%" y="549" width="0.0102%" height="15" fill="rgb(219,88,35)" fg:x="4739" fg:w="4"/><text x="12.3584%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$memcpy (4 samples, 0.01%)</title><rect x="12.1314%" y="549" width="0.0102%" height="15" fill="rgb(220,193,23)" fg:x="4748" fg:w="4"/><text x="12.3814%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (13 samples, 0.03%)</title><rect x="12.1468%" y="549" width="0.0332%" height="15" fill="rgb(230,90,52)" fg:x="4754" fg:w="13"/><text x="12.3968%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (15 samples, 0.04%)</title><rect x="12.1902%" y="549" width="0.0383%" height="15" fill="rgb(252,106,19)" fg:x="4771" fg:w="15"/><text x="12.4402%" y="559.50"></text></g><g><title>CoreFoundation`CFRetain (4 samples, 0.01%)</title><rect x="12.3895%" y="453" width="0.0102%" height="15" fill="rgb(206,74,20)" fg:x="4849" fg:w="4"/><text x="12.6395%" y="463.50"></text></g><g><title>CoreFoundation`_CFRetain (4 samples, 0.01%)</title><rect x="12.4074%" y="453" width="0.0102%" height="15" fill="rgb(230,138,44)" fg:x="4856" fg:w="4"/><text x="12.6574%" y="463.50"></text></g><g><title>CoreFoundation`CFAllocatorAllocate (5 samples, 0.01%)</title><rect x="12.4457%" y="437" width="0.0128%" height="15" fill="rgb(235,182,43)" fg:x="4871" fg:w="5"/><text x="12.6957%" y="447.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (27 samples, 0.07%)</title><rect x="12.4176%" y="453" width="0.0690%" height="15" fill="rgb(242,16,51)" fg:x="4860" fg:w="27"/><text x="12.6676%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (6 samples, 0.02%)</title><rect x="12.4713%" y="437" width="0.0153%" height="15" fill="rgb(248,9,4)" fg:x="4881" fg:w="6"/><text x="12.7213%" y="447.50"></text></g><g><title>IOKit`io_connect_method (1,573 samples, 4.02%)</title><rect x="12.5121%" y="437" width="4.0191%" height="15" fill="rgb(210,31,22)" fg:x="4897" fg:w="1573"/><text x="12.7621%" y="447.50">IOKi..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,557 samples, 3.98%)</title><rect x="12.5530%" y="421" width="3.9782%" height="15" fill="rgb(239,54,39)" fg:x="4913" fg:w="1557"/><text x="12.8030%" y="431.50">libs..</text></g><g><title>IOKit`IOConnectCallMethod (1,594 samples, 4.07%)</title><rect x="12.4994%" y="453" width="4.0728%" height="15" fill="rgb(230,99,41)" fg:x="4892" fg:w="1594"/><text x="12.7494%" y="463.50">IOKi..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.03%)</title><rect x="16.5440%" y="437" width="0.0281%" height="15" fill="rgb(253,106,12)" fg:x="6475" fg:w="11"/><text x="16.7940%" y="447.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (1,647 samples, 4.21%)</title><rect x="12.3818%" y="469" width="4.2082%" height="15" fill="rgb(213,46,41)" fg:x="4846" fg:w="1647"/><text x="12.6318%" y="479.50">IOGPU..</text></g><g><title>IOGPU`IOGPUResourceGetClientShared (5 samples, 0.01%)</title><rect x="16.5900%" y="469" width="0.0128%" height="15" fill="rgb(215,133,35)" fg:x="6493" fg:w="5"/><text x="16.8400%" y="479.50"></text></g><g><title>CoreFoundation`CFGetTypeID (5 samples, 0.01%)</title><rect x="16.5900%" y="453" width="0.0128%" height="15" fill="rgb(213,28,5)" fg:x="6493" fg:w="5"/><text x="16.8400%" y="463.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (29 samples, 0.07%)</title><rect x="16.6309%" y="453" width="0.0741%" height="15" fill="rgb(215,77,49)" fg:x="6509" fg:w="29"/><text x="16.8809%" y="463.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (28 samples, 0.07%)</title><rect x="16.6335%" y="437" width="0.0715%" height="15" fill="rgb(248,100,22)" fg:x="6510" fg:w="28"/><text x="16.8835%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (37 samples, 0.09%)</title><rect x="16.6130%" y="469" width="0.0945%" height="15" fill="rgb(208,67,9)" fg:x="6502" fg:w="37"/><text x="16.8630%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1,707 samples, 4.36%)</title><rect x="12.3614%" y="485" width="4.3615%" height="15" fill="rgb(219,133,21)" fg:x="4838" fg:w="1707"/><text x="12.6114%" y="495.50">IOGPU..</text></g><g><title>IOGPU`DYLD-STUB$$objc_storeWeak (4 samples, 0.01%)</title><rect x="16.7280%" y="485" width="0.0102%" height="15" fill="rgb(246,46,29)" fg:x="6547" fg:w="4"/><text x="16.9780%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (4 samples, 0.01%)</title><rect x="16.7663%" y="485" width="0.0102%" height="15" fill="rgb(246,185,52)" fg:x="6562" fg:w="4"/><text x="17.0163%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (1,745 samples, 4.46%)</title><rect x="12.3256%" y="501" width="4.4586%" height="15" fill="rgb(252,136,11)" fg:x="4824" fg:w="1745"/><text x="12.5756%" y="511.50">IOGPU..</text></g><g><title>IOGPU`IOGPUMetalSuballocatorAllocate (22 samples, 0.06%)</title><rect x="16.7995%" y="485" width="0.0562%" height="15" fill="rgb(219,138,53)" fg:x="6575" fg:w="22"/><text x="17.0495%" y="495.50"></text></g><g><title>Metal`MTLRangeAllocatorAllocate (10 samples, 0.03%)</title><rect x="16.8302%" y="469" width="0.0256%" height="15" fill="rgb(211,51,23)" fg:x="6587" fg:w="10"/><text x="17.0802%" y="479.50"></text></g><g><title>Metal`MTLRangeAllocatorGetMaxFreeSize (42 samples, 0.11%)</title><rect x="16.8660%" y="485" width="0.1073%" height="15" fill="rgb(247,221,28)" fg:x="6601" fg:w="42"/><text x="17.1160%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (77 samples, 0.20%)</title><rect x="16.7842%" y="501" width="0.1967%" height="15" fill="rgb(251,222,45)" fg:x="6569" fg:w="77"/><text x="17.0342%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (15 samples, 0.04%)</title><rect x="17.0065%" y="501" width="0.0383%" height="15" fill="rgb(217,162,53)" fg:x="6656" fg:w="15"/><text x="17.2565%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (1,863 samples, 4.76%)</title><rect x="12.2873%" y="517" width="4.7601%" height="15" fill="rgb(229,93,14)" fg:x="4809" fg:w="1863"/><text x="12.5373%" y="527.50">AGXMet..</text></g><g><title>AGXMetalG14G`objc_msgSend$length (6 samples, 0.02%)</title><rect x="17.0601%" y="517" width="0.0153%" height="15" fill="rgb(209,67,49)" fg:x="6677" fg:w="6"/><text x="17.3101%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (5 samples, 0.01%)</title><rect x="17.0755%" y="517" width="0.0128%" height="15" fill="rgb(213,87,29)" fg:x="6683" fg:w="5"/><text x="17.3255%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer length] (6 samples, 0.02%)</title><rect x="17.0883%" y="517" width="0.0153%" height="15" fill="rgb(205,151,52)" fg:x="6688" fg:w="6"/><text x="17.3383%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (1,891 samples, 4.83%)</title><rect x="12.2873%" y="533" width="4.8316%" height="15" fill="rgb(253,215,39)" fg:x="4809" fg:w="1891"/><text x="12.5373%" y="543.50">AGXMet..</text></g><g><title>AGXMetalG14G`AGX::EndOfTileEmitter&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitEndOfTileArgumentsLate(AGX::G14::EndOfTileProgramVariant const*, AGX::EndOfTileDriverArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, unsigned long long*, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, AGX::StateLoaderProgramsTracker (8 samples, 0.02%)</title><rect x="17.1981%" y="485" width="0.0204%" height="15" fill="rgb(221,220,41)" fg:x="6731" fg:w="8"/><text x="17.4481%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::Framebuffer&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::getBGOProgramVariant(AGX::Framebuffer (8 samples, 0.02%)</title><rect x="17.2186%" y="485" width="0.0204%" height="15" fill="rgb(218,133,21)" fg:x="6739" fg:w="8"/><text x="17.4686%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::assignRenderRegisters(AGXTACommandRec*, AGX3DCommandRec*, bool, bool, AGX::Framebuffer (5 samples, 0.01%)</title><rect x="17.2390%" y="485" width="0.0128%" height="15" fill="rgb(221,193,43)" fg:x="6747" fg:w="5"/><text x="17.4890%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::finalizeStoreActions (4 samples, 0.01%)</title><rect x="17.2518%" y="485" width="0.0102%" height="15" fill="rgb(240,128,52)" fg:x="6752" fg:w="4"/><text x="17.5018%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::ContextCommon&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::endCommand (60 samples, 0.15%)</title><rect x="17.3974%" y="469" width="0.1533%" height="15" fill="rgb(253,114,12)" fg:x="6809" fg:w="60"/><text x="17.6474%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::EndOfTileEmitter&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitEndOfTileArgumentsLate(AGX::G14::EndOfTileProgramVariant const*, AGX::EndOfTileDriverArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, unsigned long long*, unsigned long long*, unsigned long long, unsigned char*, unsigned long long, AGX::StateLoaderProgramsTracker (9 samples, 0.02%)</title><rect x="17.5507%" y="469" width="0.0230%" height="15" fill="rgb(215,223,47)" fg:x="6869" fg:w="9"/><text x="17.8007%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::Framebuffer&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::getBGOProgramVariant(AGX::Framebuffer (6 samples, 0.02%)</title><rect x="17.5737%" y="469" width="0.0153%" height="15" fill="rgb(248,225,23)" fg:x="6878" fg:w="6"/><text x="17.8237%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::assignRenderRegisters(AGXTACommandRec*, AGX3DCommandRec*, bool, bool, AGX::Framebuffer (8 samples, 0.02%)</title><rect x="17.5890%" y="469" width="0.0204%" height="15" fill="rgb(250,108,0)" fg:x="6884" fg:w="8"/><text x="17.8390%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::finalizeStoreActions (11 samples, 0.03%)</title><rect x="17.6095%" y="469" width="0.0281%" height="15" fill="rgb(228,208,7)" fg:x="6892" fg:w="11"/><text x="17.8595%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::emitSWEndOfTileIfNeeded (7 samples, 0.02%)</title><rect x="17.6453%" y="469" width="0.0179%" height="15" fill="rgb(244,45,10)" fg:x="6906" fg:w="7"/><text x="17.8953%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::RenderTileDispatchSWEndOfTile&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::dispatch (8 samples, 0.02%)</title><rect x="17.6631%" y="469" width="0.0204%" height="15" fill="rgb(207,125,25)" fg:x="6913" fg:w="8"/><text x="17.9131%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::ZLSEncoderGen6&lt;kAGXRevG14&gt;::ZLSState::patchDepthStencilSparse (16 samples, 0.04%)</title><rect x="17.6836%" y="469" width="0.0409%" height="15" fill="rgb(210,195,18)" fg:x="6921" fg:w="16"/><text x="17.9336%" y="479.50"></text></g><g><title>AGXMetalG14G`FenceEncoder::encode (4 samples, 0.01%)</title><rect x="17.7270%" y="469" width="0.0102%" height="15" fill="rgb(249,80,12)" fg:x="6938" fg:w="4"/><text x="17.9770%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer setCurrentKernelCommandBufferPointer:] (5 samples, 0.01%)</title><rect x="17.7449%" y="469" width="0.0128%" height="15" fill="rgb(221,65,9)" fg:x="6945" fg:w="5"/><text x="17.9949%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="17.7653%" y="469" width="0.0153%" height="15" fill="rgb(235,49,36)" fg:x="6953" fg:w="6"/><text x="18.0153%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::endRenderPassCommon (206 samples, 0.53%)</title><rect x="17.2722%" y="485" width="0.5263%" height="15" fill="rgb(225,32,20)" fg:x="6760" fg:w="206"/><text x="17.5222%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="17.7807%" y="469" width="0.0179%" height="15" fill="rgb(215,141,46)" fg:x="6959" fg:w="7"/><text x="18.0307%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.03%)</title><rect x="17.8190%" y="469" width="0.0307%" height="15" fill="rgb(250,160,47)" fg:x="6974" fg:w="12"/><text x="18.0690%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::ResourceGroupUsage&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::reset (30 samples, 0.08%)</title><rect x="17.7986%" y="485" width="0.0767%" height="15" fill="rgb(216,222,40)" fg:x="6966" fg:w="30"/><text x="18.0486%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.02%)</title><rect x="17.8522%" y="469" width="0.0230%" height="15" fill="rgb(234,217,39)" fg:x="6987" fg:w="9"/><text x="18.1022%" y="479.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$bzero (4 samples, 0.01%)</title><rect x="17.8752%" y="485" width="0.0102%" height="15" fill="rgb(207,178,40)" fg:x="6996" fg:w="4"/><text x="18.1252%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="17.9084%" y="485" width="0.0128%" height="15" fill="rgb(221,136,13)" fg:x="7009" fg:w="5"/><text x="18.1584%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.07%)</title><rect x="17.9212%" y="485" width="0.0741%" height="15" fill="rgb(249,199,10)" fg:x="7014" fg:w="29"/><text x="18.1712%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext deferredEndEncoding:] (714 samples, 1.82%)</title><rect x="17.1675%" y="501" width="1.8243%" height="15" fill="rgb(249,222,13)" fg:x="6719" fg:w="714"/><text x="17.4175%" y="511.50">A..</text></g><g><title>libsystem_platform.dylib`_platform_memset (390 samples, 1.00%)</title><rect x="17.9953%" y="485" width="0.9965%" height="15" fill="rgb(244,185,38)" fg:x="7043" fg:w="390"/><text x="18.2453%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::Framebuffer&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::~Framebuffer (12 samples, 0.03%)</title><rect x="19.0556%" y="485" width="0.0307%" height="15" fill="rgb(236,202,9)" fg:x="7458" fg:w="12"/><text x="19.3056%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::PointerWithOnDemandObjectCreation&lt;AGX::G14::SWGeometryPipelineContext&gt;::~PointerWithOnDemandObjectCreation (4 samples, 0.01%)</title><rect x="19.0863%" y="485" width="0.0102%" height="15" fill="rgb(250,229,37)" fg:x="7470" fg:w="4"/><text x="19.3363%" y="495.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$objc_release (5 samples, 0.01%)</title><rect x="19.0965%" y="485" width="0.0128%" height="15" fill="rgb(206,174,23)" fg:x="7474" fg:w="5"/><text x="19.3465%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext destroyImpl] (50 samples, 0.13%)</title><rect x="18.9918%" y="501" width="0.1278%" height="15" fill="rgb(211,33,43)" fg:x="7433" fg:w="50"/><text x="19.2418%" y="511.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$objc_release (5 samples, 0.01%)</title><rect x="19.1425%" y="501" width="0.0128%" height="15" fill="rgb(245,58,50)" fg:x="7492" fg:w="5"/><text x="19.3925%" y="511.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$os_unfair_lock_lock (9 samples, 0.02%)</title><rect x="19.1553%" y="501" width="0.0230%" height="15" fill="rgb(244,68,36)" fg:x="7497" fg:w="9"/><text x="19.4053%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.01%)</title><rect x="19.1987%" y="501" width="0.0102%" height="15" fill="rgb(232,229,15)" fg:x="7514" fg:w="4"/><text x="19.4487%" y="511.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (5 samples, 0.01%)</title><rect x="19.2217%" y="501" width="0.0128%" height="15" fill="rgb(254,30,23)" fg:x="7523" fg:w="5"/><text x="19.4717%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commitEncoder] (821 samples, 2.10%)</title><rect x="17.1598%" y="517" width="2.0977%" height="15" fill="rgb(235,160,14)" fg:x="6716" fg:w="821"/><text x="17.4098%" y="527.50">A..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (9 samples, 0.02%)</title><rect x="19.2345%" y="501" width="0.0230%" height="15" fill="rgb(212,155,44)" fg:x="7528" fg:w="9"/><text x="19.4845%" y="511.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$deferredEndEncoding: (4 samples, 0.01%)</title><rect x="19.2830%" y="517" width="0.0102%" height="15" fill="rgb(226,2,50)" fg:x="7547" fg:w="4"/><text x="19.5330%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (120 samples, 0.31%)</title><rect x="19.3367%" y="485" width="0.3066%" height="15" fill="rgb(234,177,6)" fg:x="7568" fg:w="120"/><text x="19.5867%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (118 samples, 0.30%)</title><rect x="19.3418%" y="469" width="0.3015%" height="15" fill="rgb(217,24,9)" fg:x="7570" fg:w="118"/><text x="19.5918%" y="479.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (132 samples, 0.34%)</title><rect x="19.3265%" y="501" width="0.3373%" height="15" fill="rgb(220,13,46)" fg:x="7564" fg:w="132"/><text x="19.5765%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_source_merge_data (7 samples, 0.02%)</title><rect x="19.6459%" y="485" width="0.0179%" height="15" fill="rgb(239,221,27)" fg:x="7689" fg:w="7"/><text x="19.8959%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandQueue createTelemetryWithLabel:] (4 samples, 0.01%)</title><rect x="19.6638%" y="501" width="0.0102%" height="15" fill="rgb(222,198,25)" fg:x="7696" fg:w="4"/><text x="19.9138%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (7 samples, 0.02%)</title><rect x="19.7021%" y="501" width="0.0179%" height="15" fill="rgb(211,99,13)" fg:x="7711" fg:w="7"/><text x="19.9521%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_source_merge_data (4 samples, 0.01%)</title><rect x="19.7353%" y="501" width="0.0102%" height="15" fill="rgb(232,111,31)" fg:x="7724" fg:w="4"/><text x="19.9853%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (186 samples, 0.48%)</title><rect x="19.3009%" y="517" width="0.4752%" height="15" fill="rgb(245,82,37)" fg:x="7554" fg:w="186"/><text x="19.5509%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (12 samples, 0.03%)</title><rect x="19.7455%" y="501" width="0.0307%" height="15" fill="rgb(227,149,46)" fg:x="7728" fg:w="12"/><text x="19.9955%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (6 samples, 0.02%)</title><rect x="19.8043%" y="517" width="0.0153%" height="15" fill="rgb(218,36,50)" fg:x="7751" fg:w="6"/><text x="20.0543%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.03%)</title><rect x="19.8247%" y="517" width="0.0281%" height="15" fill="rgb(226,80,48)" fg:x="7759" fg:w="11"/><text x="20.0747%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commit] (1,067 samples, 2.73%)</title><rect x="17.1342%" y="533" width="2.7263%" height="15" fill="rgb(238,224,15)" fg:x="6706" fg:w="1067"/><text x="17.3842%" y="543.50">AG..</text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer disableDeferredEndEncoding] (5 samples, 0.01%)</title><rect x="19.8605%" y="533" width="0.0128%" height="15" fill="rgb(241,136,10)" fg:x="7773" fg:w="5"/><text x="20.1105%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="19.9141%" y="469" width="0.0102%" height="15" fill="rgb(208,32,45)" fg:x="7794" fg:w="4"/><text x="20.1641%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (4 samples, 0.01%)</title><rect x="19.9959%" y="453" width="0.0102%" height="15" fill="rgb(207,135,9)" fg:x="7826" fg:w="4"/><text x="20.2459%" y="463.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (52 samples, 0.13%)</title><rect x="19.8886%" y="517" width="0.1329%" height="15" fill="rgb(206,86,44)" fg:x="7784" fg:w="52"/><text x="20.1386%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (49 samples, 0.13%)</title><rect x="19.8963%" y="501" width="0.1252%" height="15" fill="rgb(245,177,15)" fg:x="7787" fg:w="49"/><text x="20.1463%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.12%)</title><rect x="19.8988%" y="485" width="0.1226%" height="15" fill="rgb(206,64,50)" fg:x="7788" fg:w="48"/><text x="20.1488%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.10%)</title><rect x="19.9244%" y="469" width="0.0971%" height="15" fill="rgb(234,36,40)" fg:x="7798" fg:w="38"/><text x="20.1744%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="20.0061%" y="453" width="0.0153%" height="15" fill="rgb(213,64,8)" fg:x="7830" fg:w="6"/><text x="20.2561%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (4 samples, 0.01%)</title><rect x="20.0215%" y="517" width="0.0102%" height="15" fill="rgb(210,75,36)" fg:x="7836" fg:w="4"/><text x="20.2715%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice newBufferWithLength:options:] (61 samples, 0.16%)</title><rect x="19.8835%" y="533" width="0.1559%" height="15" fill="rgb(229,88,21)" fg:x="7782" fg:w="61"/><text x="20.1335%" y="543.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$device (6 samples, 0.02%)</title><rect x="20.0470%" y="517" width="0.0153%" height="15" fill="rgb(252,204,47)" fg:x="7846" fg:w="6"/><text x="20.2970%" y="527.50"></text></g><g><title>CoreFoundation`-[__NSCFConstantString release] (4 samples, 0.01%)</title><rect x="20.0623%" y="501" width="0.0102%" height="15" fill="rgb(208,77,27)" fg:x="7852" fg:w="4"/><text x="20.3123%" y="511.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (12 samples, 0.03%)</title><rect x="20.0726%" y="501" width="0.0307%" height="15" fill="rgb(221,76,26)" fg:x="7856" fg:w="12"/><text x="20.3226%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.03%)</title><rect x="20.0751%" y="485" width="0.0281%" height="15" fill="rgb(225,139,18)" fg:x="7857" fg:w="11"/><text x="20.3251%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandEncoder dealloc] (26 samples, 0.07%)</title><rect x="20.0623%" y="517" width="0.0664%" height="15" fill="rgb(230,137,11)" fg:x="7852" fg:w="26"/><text x="20.3123%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="20.1186%" y="501" width="0.0102%" height="15" fill="rgb(212,28,1)" fg:x="7874" fg:w="4"/><text x="20.3686%" y="511.50"></text></g><g><title>Metal`DYLD-STUB$$objc_release (4 samples, 0.01%)</title><rect x="20.1339%" y="517" width="0.0102%" height="15" fill="rgb(248,164,17)" fg:x="7880" fg:w="4"/><text x="20.3839%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext dealloc] (49 samples, 0.13%)</title><rect x="20.0393%" y="533" width="0.1252%" height="15" fill="rgb(222,171,42)" fg:x="7843" fg:w="49"/><text x="20.2893%" y="543.50"></text></g><g><title>AGXMetalG14G`AGX::ClipRectContextGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::canUseScissorConfigReg (6 samples, 0.02%)</title><rect x="20.2182%" y="517" width="0.0153%" height="15" fill="rgb(243,84,45)" fg:x="7913" fg:w="6"/><text x="20.4682%" y="527.50"></text></g><g><title>AGXMetalG14G`AGX::DirtyArguments AGX::getDirtyArguments&lt;AGX::G14::FragmentProgramVariantESLState&gt; (12 samples, 0.03%)</title><rect x="20.2386%" y="517" width="0.0307%" height="15" fill="rgb(252,49,23)" fg:x="7921" fg:w="12"/><text x="20.4886%" y="527.50"></text></g><g><title>AGXMetalG14G`AGX::IPFEncoderGen4&lt;kAGXRevG14&gt;::DepthBiasBits* AGX::DataBufferAllocator&lt;32ul&gt;::getBasePointer&lt;AGX::IPFEncoderGen4&lt;kAGXRevG14&gt;::DepthBiasBits&gt; (5 samples, 0.01%)</title><rect x="20.2693%" y="517" width="0.0128%" height="15" fill="rgb(215,19,7)" fg:x="7933" fg:w="5"/><text x="20.5193%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice supportsRaytracing] (8 samples, 0.02%)</title><rect x="20.7599%" y="501" width="0.0204%" height="15" fill="rgb(238,81,41)" fg:x="8125" fg:w="8"/><text x="21.0099%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::ClipRectContextGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::updateClipRegions (15 samples, 0.04%)</title><rect x="20.7803%" y="501" width="0.0383%" height="15" fill="rgb(210,199,37)" fg:x="8133" fg:w="15"/><text x="21.0303%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::IPFEncoderGen4&lt;kAGXRevG14&gt;::DepthBiasBits* AGX::DataBufferAllocator&lt;32ul&gt;::getBasePointer&lt;AGX::IPFEncoderGen4&lt;kAGXRevG14&gt;::DepthBiasBits&gt; (7 samples, 0.02%)</title><rect x="20.8186%" y="501" width="0.0179%" height="15" fill="rgb(244,192,49)" fg:x="8148" fg:w="7"/><text x="21.0686%" y="511.50"></text></g><g><title>Metal`MTLResourceListAddHashValue(MTLResourceListPrivate&amp;, unsigned long long) (15 samples, 0.04%)</title><rect x="20.8621%" y="485" width="0.0383%" height="15" fill="rgb(226,211,11)" fg:x="8165" fg:w="15"/><text x="21.1121%" y="495.50"></text></g><g><title>Metal`MTLResourceListAddResource (10 samples, 0.03%)</title><rect x="20.9004%" y="485" width="0.0256%" height="15" fill="rgb(236,162,54)" fg:x="8180" fg:w="10"/><text x="21.1504%" y="495.50"></text></g><g><title>Metal`MTLResourceListChunksAddEntry(MTLResourceListPrivate&amp;, unsigned long long) (5 samples, 0.01%)</title><rect x="20.9260%" y="485" width="0.0128%" height="15" fill="rgb(220,229,9)" fg:x="8190" fg:w="5"/><text x="21.1760%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::Mempool&lt;16u, 0u, true, AGX::ImageStateEncoderGen7&lt;kAGXRevG14&gt;::ImageStateFields, AGX::ImageStateEncoderGen7&lt;kAGXRevG14&gt;::ImageStateFields, unsigned int&gt;::addToResourceList(std::__1::array&lt;AGX::Mempool&lt;16u, 0u, true, AGX::ImageStateEncoderGen7&lt;kAGXRevG14&gt;::ImageStateFields, AGX::ImageStateEncoderGen7 (36 samples, 0.09%)</title><rect x="20.8544%" y="501" width="0.0920%" height="15" fill="rgb(250,87,22)" fg:x="8162" fg:w="36"/><text x="21.1044%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::bindFragmentTextureResources (10 samples, 0.03%)</title><rect x="20.9464%" y="501" width="0.0256%" height="15" fill="rgb(239,43,17)" fg:x="8198" fg:w="10"/><text x="21.1964%" y="511.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (4 samples, 0.01%)</title><rect x="20.9617%" y="485" width="0.0102%" height="15" fill="rgb(231,177,25)" fg:x="8204" fg:w="4"/><text x="21.2117%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::reserveScissorSpace (4 samples, 0.01%)</title><rect x="20.9796%" y="501" width="0.0102%" height="15" fill="rgb(219,179,1)" fg:x="8211" fg:w="4"/><text x="21.2296%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::RenderUSCStateLoader&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G14::DataBufferAllocator&amp;, AGX::G14::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G14::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (53 samples, 0.14%)</title><rect x="20.9898%" y="501" width="0.1354%" height="15" fill="rgb(238,219,53)" fg:x="8215" fg:w="53"/><text x="21.2398%" y="511.50"></text></g><g><title>AGXMetalG14G`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G14::Classes, AGX::G14::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (19 samples, 0.05%)</title><rect x="21.0767%" y="485" width="0.0485%" height="15" fill="rgb(232,167,36)" fg:x="8249" fg:w="19"/><text x="21.3267%" y="495.50"></text></g><g><title>AGXMetalG14G`void AGX::CommonUSCStateLoader&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitCommon&lt;AGX::G14::FragmentProgramVariant const, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;, AGX::FragmentDriverArgumentTable&lt;AGX::G14::Classes&gt;, LdShdrTransformFragment&lt;AGX::G14::Encoders&gt;&gt;(unsigned long long*, unsigned long long, unsigned char*, unsigned long long, AGX::G14::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;*, AGX::FragmentDriverArgumentTable&lt;AGX::G14::Classes&gt;&amp;, LdShdrTransformFragment (33 samples, 0.08%)</title><rect x="21.1508%" y="501" width="0.0843%" height="15" fill="rgb(244,19,51)" fg:x="8278" fg:w="33"/><text x="21.4008%" y="511.50"></text></g><g><title>AGXMetalG14G`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G14::Classes, AGX::G14::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformFragment&lt;AGX::G14::Encoders&gt;&gt;(unsigned long long*, unsigned long long**, unsigned int, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*, unsigned long long const*, LdShdrTransformFragment (16 samples, 0.04%)</title><rect x="21.1942%" y="485" width="0.0409%" height="15" fill="rgb(224,6,22)" fg:x="8295" fg:w="16"/><text x="21.4442%" y="495.50"></text></g><g><title>AGXMetalG14G`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G14::Classes, AGX::G14::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (10 samples, 0.03%)</title><rect x="21.2402%" y="501" width="0.0256%" height="15" fill="rgb(224,145,5)" fg:x="8313" fg:w="10"/><text x="21.4902%" y="511.50"></text></g><g><title>AGXMetalG14G`void agxaReserveVDMTokenSpace&lt;AGX::G14::Encoders, AGX::G14::DataBufferAllocator&gt;(AGX::G14::DataBufferAllocator&amp;, unsigned long, AGX::FlagsConfiguration (13 samples, 0.03%)</title><rect x="21.2658%" y="501" width="0.0332%" height="15" fill="rgb(234,130,49)" fg:x="8323" fg:w="13"/><text x="21.5158%" y="511.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (20 samples, 0.05%)</title><rect x="21.2990%" y="501" width="0.0511%" height="15" fill="rgb(254,6,2)" fg:x="8336" fg:w="20"/><text x="21.5490%" y="511.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (10 samples, 0.03%)</title><rect x="21.3501%" y="501" width="0.0256%" height="15" fill="rgb(208,96,46)" fg:x="8356" fg:w="10"/><text x="21.6001%" y="511.50"></text></g><g><title>Metal`MTLResourceListAddHashValue(MTLResourceListPrivate&amp;, unsigned long long) (18 samples, 0.05%)</title><rect x="21.3808%" y="501" width="0.0460%" height="15" fill="rgb(239,3,39)" fg:x="8368" fg:w="18"/><text x="21.6308%" y="511.50"></text></g><g><title>Metal`MTLResourceListAddResource (28 samples, 0.07%)</title><rect x="21.4267%" y="501" width="0.0715%" height="15" fill="rgb(233,210,1)" fg:x="8386" fg:w="28"/><text x="21.6767%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_retain (4 samples, 0.01%)</title><rect x="21.5060%" y="501" width="0.0102%" height="15" fill="rgb(244,137,37)" fg:x="8417" fg:w="4"/><text x="21.7560%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G14::VertexProgramVariant const*, AGX::G14::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, AGX::RenderDirtyBits (479 samples, 1.22%)</title><rect x="20.3076%" y="517" width="1.2239%" height="15" fill="rgb(240,136,2)" fg:x="7948" fg:w="479"/><text x="20.5576%" y="527.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (4 samples, 0.01%)</title><rect x="21.5213%" y="501" width="0.0102%" height="15" fill="rgb(239,18,37)" fg:x="8423" fg:w="4"/><text x="21.7713%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::RenderUSCStateLoader&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G14::DataBufferAllocator&amp;, AGX::G14::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G14::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (5 samples, 0.01%)</title><rect x="21.5417%" y="517" width="0.0128%" height="15" fill="rgb(218,185,22)" fg:x="8431" fg:w="5"/><text x="21.7917%" y="527.50"></text></g><g><title>AGXMetalG14G`AGX::ResourceGroupUsage&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::bindBuffer (4 samples, 0.01%)</title><rect x="21.5545%" y="517" width="0.0102%" height="15" fill="rgb(225,218,4)" fg:x="8436" fg:w="4"/><text x="21.8045%" y="527.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$MTLResourceListAddResource (9 samples, 0.02%)</title><rect x="21.5647%" y="517" width="0.0230%" height="15" fill="rgb(230,182,32)" fg:x="8440" fg:w="9"/><text x="21.8147%" y="527.50"></text></g><g><title>AGXMetalG14G`void AGX::CommonUSCStateLoader&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitCommon&lt;AGX::G14::FragmentProgramVariant const, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;, AGX::FragmentDriverArgumentTable&lt;AGX::G14::Classes&gt;, LdShdrTransformFragment&lt;AGX::G14::Encoders&gt;&gt;(unsigned long long*, unsigned long long, unsigned char*, unsigned long long, AGX::G14::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;*, AGX::FragmentDriverArgumentTable&lt;AGX::G14::Classes&gt;&amp;, LdShdrTransformFragment (6 samples, 0.02%)</title><rect x="21.6030%" y="517" width="0.0153%" height="15" fill="rgb(242,56,43)" fg:x="8455" fg:w="6"/><text x="21.8530%" y="527.50"></text></g><g><title>AGXMetalG14G`void agxaReserveVDMTokenSpace&lt;AGX::G14::Encoders, AGX::G14::DataBufferAllocator&gt;(AGX::G14::DataBufferAllocator&amp;, unsigned long, AGX::FlagsConfiguration (4 samples, 0.01%)</title><rect x="21.6184%" y="517" width="0.0102%" height="15" fill="rgb(233,99,24)" fg:x="8461" fg:w="4"/><text x="21.8684%" y="527.50"></text></g><g><title>Metal`-[_MTLDevice supportsFamily:] (4 samples, 0.01%)</title><rect x="21.6337%" y="517" width="0.0102%" height="15" fill="rgb(234,209,42)" fg:x="8467" fg:w="4"/><text x="21.8837%" y="527.50"></text></g><g><title>Metal`DYLD-STUB$$objc_retain (5 samples, 0.01%)</title><rect x="21.6567%" y="517" width="0.0128%" height="15" fill="rgb(227,7,12)" fg:x="8476" fg:w="5"/><text x="21.9067%" y="527.50"></text></g><g><title>Metal`MTLResourceListAddResource (13 samples, 0.03%)</title><rect x="21.6695%" y="517" width="0.0332%" height="15" fill="rgb(245,203,43)" fg:x="8481" fg:w="13"/><text x="21.9195%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.02%)</title><rect x="21.7078%" y="517" width="0.0179%" height="15" fill="rgb(238,205,33)" fg:x="8496" fg:w="7"/><text x="21.9578%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_retain (24 samples, 0.06%)</title><rect x="21.7257%" y="517" width="0.0613%" height="15" fill="rgb(231,56,7)" fg:x="8503" fg:w="24"/><text x="21.9757%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.03%)</title><rect x="21.7870%" y="517" width="0.0256%" height="15" fill="rgb(244,186,29)" fg:x="8527" fg:w="10"/><text x="22.0370%" y="527.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (5 samples, 0.01%)</title><rect x="21.8126%" y="517" width="0.0128%" height="15" fill="rgb(234,111,31)" fg:x="8537" fg:w="5"/><text x="22.0626%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (649 samples, 1.66%)</title><rect x="20.1722%" y="533" width="1.6582%" height="15" fill="rgb(241,149,10)" fg:x="7895" fg:w="649"/><text x="20.4222%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer setCurrentCommandEncoder:] (5 samples, 0.01%)</title><rect x="21.8764%" y="485" width="0.0128%" height="15" fill="rgb(249,206,44)" fg:x="8562" fg:w="5"/><text x="22.1264%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandBuffer executeSynchronizationNotifications:] (4 samples, 0.01%)</title><rect x="21.8943%" y="485" width="0.0102%" height="15" fill="rgb(251,153,30)" fg:x="8569" fg:w="4"/><text x="22.1443%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandEncoder endEncoding] (20 samples, 0.05%)</title><rect x="21.8688%" y="501" width="0.0511%" height="15" fill="rgb(239,152,38)" fg:x="8559" fg:w="20"/><text x="22.1188%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="21.9071%" y="485" width="0.0128%" height="15" fill="rgb(249,139,47)" fg:x="8574" fg:w="5"/><text x="22.1571%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder endEncoding] (37 samples, 0.09%)</title><rect x="21.8509%" y="517" width="0.0945%" height="15" fill="rgb(244,64,35)" fg:x="8552" fg:w="37"/><text x="22.1009%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="21.9301%" y="501" width="0.0153%" height="15" fill="rgb(216,46,15)" fg:x="8583" fg:w="6"/><text x="22.1801%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandEncoder endEncoding] (4 samples, 0.01%)</title><rect x="21.9454%" y="517" width="0.0102%" height="15" fill="rgb(250,74,19)" fg:x="8589" fg:w="4"/><text x="22.1954%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext endEncoding] (53 samples, 0.14%)</title><rect x="21.8304%" y="533" width="0.1354%" height="15" fill="rgb(249,42,33)" fg:x="8544" fg:w="53"/><text x="22.0804%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setFragmentBufferOffset:atIndex:] (4 samples, 0.01%)</title><rect x="21.9659%" y="533" width="0.0102%" height="15" fill="rgb(242,149,17)" fg:x="8597" fg:w="4"/><text x="22.2159%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setFragmentSamplerState:atIndex:] (9 samples, 0.02%)</title><rect x="21.9761%" y="533" width="0.0230%" height="15" fill="rgb(244,29,21)" fg:x="8601" fg:w="9"/><text x="22.2261%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setFragmentTexture:atIndex:] (15 samples, 0.04%)</title><rect x="21.9991%" y="533" width="0.0383%" height="15" fill="rgb(220,130,37)" fg:x="8610" fg:w="15"/><text x="22.2491%" y="543.50"></text></g><g><title>Metal`MTLResourceListAddResource (5 samples, 0.01%)</title><rect x="22.0246%" y="517" width="0.0128%" height="15" fill="rgb(211,67,2)" fg:x="8620" fg:w="5"/><text x="22.2746%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setRenderPipelineState:] (6 samples, 0.02%)</title><rect x="22.0374%" y="533" width="0.0153%" height="15" fill="rgb(235,68,52)" fg:x="8625" fg:w="6"/><text x="22.2874%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setVertexBufferOffset:atIndex:] (9 samples, 0.02%)</title><rect x="22.0578%" y="533" width="0.0230%" height="15" fill="rgb(246,142,3)" fg:x="8633" fg:w="9"/><text x="22.3078%" y="543.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::encodeISPPrimitiveType (8 samples, 0.02%)</title><rect x="22.1013%" y="533" width="0.0204%" height="15" fill="rgb(241,25,7)" fg:x="8650" fg:w="8"/><text x="22.3513%" y="543.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="22.1396%" y="533" width="0.0128%" height="15" fill="rgb(242,119,39)" fg:x="8665" fg:w="5"/><text x="22.3896%" y="543.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation: (4 samples, 0.01%)</title><rect x="22.1728%" y="533" width="0.0102%" height="15" fill="rgb(241,98,45)" fg:x="8678" fg:w="4"/><text x="22.4228%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder endEncoding] (5 samples, 0.01%)</title><rect x="22.1856%" y="533" width="0.0128%" height="15" fill="rgb(254,28,30)" fg:x="8683" fg:w="5"/><text x="22.4356%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (13 samples, 0.03%)</title><rect x="22.2469%" y="533" width="0.0332%" height="15" fill="rgb(241,142,54)" fg:x="8707" fg:w="13"/><text x="22.4969%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (7 samples, 0.02%)</title><rect x="22.2827%" y="533" width="0.0179%" height="15" fill="rgb(222,85,15)" fg:x="8721" fg:w="7"/><text x="22.5327%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (5 samples, 0.01%)</title><rect x="22.3006%" y="533" width="0.0128%" height="15" fill="rgb(210,85,47)" fg:x="8728" fg:w="5"/><text x="22.5506%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (11 samples, 0.03%)</title><rect x="22.3134%" y="533" width="0.0281%" height="15" fill="rgb(224,206,25)" fg:x="8733" fg:w="11"/><text x="22.5634%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (4 samples, 0.01%)</title><rect x="22.3491%" y="517" width="0.0102%" height="15" fill="rgb(243,201,19)" fg:x="8747" fg:w="4"/><text x="22.5991%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (12 samples, 0.03%)</title><rect x="22.3415%" y="533" width="0.0307%" height="15" fill="rgb(236,59,4)" fg:x="8744" fg:w="12"/><text x="22.5915%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_GetOutputSize (6 samples, 0.02%)</title><rect x="22.3721%" y="533" width="0.0153%" height="15" fill="rgb(254,179,45)" fg:x="8756" fg:w="6"/><text x="22.6221%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setFragmentBuffer:offset:atIndex:] (4 samples, 0.01%)</title><rect x="22.4232%" y="517" width="0.0102%" height="15" fill="rgb(226,14,10)" fg:x="8776" fg:w="4"/><text x="22.6732%" y="527.50"></text></g><g><title>Metal`MTLResourceListAddHashValue(MTLResourceListPrivate&amp;, unsigned long long) (8 samples, 0.02%)</title><rect x="22.4386%" y="501" width="0.0204%" height="15" fill="rgb(244,27,41)" fg:x="8782" fg:w="8"/><text x="22.6886%" y="511.50"></text></g><g><title>Metal`MTLResourceListAddResource (6 samples, 0.02%)</title><rect x="22.4590%" y="501" width="0.0153%" height="15" fill="rgb(235,35,32)" fg:x="8790" fg:w="6"/><text x="22.7090%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setRenderPipelineState:] (18 samples, 0.05%)</title><rect x="22.4334%" y="517" width="0.0460%" height="15" fill="rgb(218,68,31)" fg:x="8780" fg:w="18"/><text x="22.6834%" y="527.50"></text></g><g><title>AGXMetalG14G`AGX::ClipRectContextGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::encodeViewportState (4 samples, 0.01%)</title><rect x="22.4845%" y="501" width="0.0102%" height="15" fill="rgb(207,120,37)" fg:x="8800" fg:w="4"/><text x="22.7345%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::ClipRectContextGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setViewports (7 samples, 0.02%)</title><rect x="22.4948%" y="501" width="0.0179%" height="15" fill="rgb(227,98,0)" fg:x="8804" fg:w="7"/><text x="22.7448%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext setViewport:] (13 samples, 0.03%)</title><rect x="22.4845%" y="517" width="0.0332%" height="15" fill="rgb(207,7,3)" fg:x="8800" fg:w="13"/><text x="22.7345%" y="527.50"></text></g><g><title>AGXMetalG14G`AGX::ClipRectContextGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setViewports (6 samples, 0.02%)</title><rect x="22.5178%" y="517" width="0.0153%" height="15" fill="rgb(206,98,19)" fg:x="8813" fg:w="6"/><text x="22.7678%" y="527.50"></text></g><g><title>AGXMetalG14G`AGX::PPPEncoderGen5&lt;AGX::G14::ESLEncoder, AGX::G14::VsStateConfig&gt;::RasterToken::setViewports (5 samples, 0.01%)</title><rect x="22.5331%" y="517" width="0.0128%" height="15" fill="rgb(217,5,26)" fg:x="8819" fg:w="5"/><text x="22.7831%" y="527.50"></text></g><g><title>AGXMetalG14G`AGX::RenderPipeline&lt;AGX::G14::ObjClasses, AGX::G14::Classes, AGX::G14::Encoders&gt;::bindResources (10 samples, 0.03%)</title><rect x="22.7452%" y="501" width="0.0256%" height="15" fill="rgb(235,190,38)" fg:x="8902" fg:w="10"/><text x="22.9952%" y="511.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (6 samples, 0.02%)</title><rect x="22.7733%" y="501" width="0.0153%" height="15" fill="rgb(247,86,24)" fg:x="8913" fg:w="6"/><text x="23.0233%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setRenderPipelineStateCommon (98 samples, 0.25%)</title><rect x="22.5484%" y="517" width="0.2504%" height="15" fill="rgb(205,101,16)" fg:x="8825" fg:w="98"/><text x="22.7984%" y="527.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (4 samples, 0.01%)</title><rect x="22.7886%" y="501" width="0.0102%" height="15" fill="rgb(246,168,33)" fg:x="8919" fg:w="4"/><text x="23.0386%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setVertexProgramBuffer (16 samples, 0.04%)</title><rect x="22.7988%" y="517" width="0.0409%" height="15" fill="rgb(231,114,1)" fg:x="8923" fg:w="16"/><text x="23.0488%" y="527.50"></text></g><g><title>Metal`MTLResourceListAddResource (6 samples, 0.02%)</title><rect x="22.8244%" y="501" width="0.0153%" height="15" fill="rgb(207,184,53)" fg:x="8933" fg:w="6"/><text x="23.0744%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::ResourceGroupUsage&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setBuffer (6 samples, 0.02%)</title><rect x="22.8474%" y="517" width="0.0153%" height="15" fill="rgb(224,95,51)" fg:x="8942" fg:w="6"/><text x="23.0974%" y="527.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$IOGPUResourceListAddResource (7 samples, 0.02%)</title><rect x="22.8704%" y="517" width="0.0179%" height="15" fill="rgb(212,188,45)" fg:x="8951" fg:w="7"/><text x="23.1204%" y="527.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (4 samples, 0.01%)</title><rect x="22.9036%" y="517" width="0.0102%" height="15" fill="rgb(223,154,38)" fg:x="8964" fg:w="4"/><text x="23.1536%" y="527.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (4 samples, 0.01%)</title><rect x="22.9163%" y="517" width="0.0102%" height="15" fill="rgb(251,22,52)" fg:x="8969" fg:w="4"/><text x="23.1663%" y="527.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal colorAttachments] (5 samples, 0.01%)</title><rect x="22.9342%" y="517" width="0.0128%" height="15" fill="rgb(229,209,22)" fg:x="8976" fg:w="5"/><text x="23.1842%" y="527.50"></text></g><g><title>Metal`MTLResourceListAddResource (5 samples, 0.01%)</title><rect x="22.9470%" y="517" width="0.0128%" height="15" fill="rgb(234,138,34)" fg:x="8981" fg:w="5"/><text x="23.1970%" y="527.50"></text></g><g><title>QuartzCore`-[CAMetalLayer drawableSize] (7 samples, 0.02%)</title><rect x="22.9777%" y="517" width="0.0179%" height="15" fill="rgb(212,95,11)" fg:x="8993" fg:w="7"/><text x="23.2277%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlbackbuffer] (8 samples, 0.02%)</title><rect x="22.9981%" y="517" width="0.0204%" height="15" fill="rgb(240,179,47)" fg:x="9001" fg:w="8"/><text x="23.2481%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdbuffer] (4 samples, 0.01%)</title><rect x="23.0185%" y="517" width="0.0102%" height="15" fill="rgb(240,163,11)" fg:x="9009" fg:w="4"/><text x="23.2685%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (7 samples, 0.02%)</title><rect x="23.0288%" y="517" width="0.0179%" height="15" fill="rgb(236,37,12)" fg:x="9013" fg:w="7"/><text x="23.2788%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtllayer] (6 samples, 0.02%)</title><rect x="23.0543%" y="517" width="0.0153%" height="15" fill="rgb(232,164,16)" fg:x="9023" fg:w="6"/><text x="23.3043%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`ChooseShaderPipelines (36 samples, 0.09%)</title><rect x="23.0850%" y="517" width="0.0920%" height="15" fill="rgb(244,205,15)" fg:x="9035" fg:w="36"/><text x="23.3350%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (15 samples, 0.04%)</title><rect x="23.1795%" y="517" width="0.0383%" height="15" fill="rgb(223,117,47)" fg:x="9072" fg:w="15"/><text x="23.4295%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (5 samples, 0.01%)</title><rect x="23.2178%" y="517" width="0.0128%" height="15" fill="rgb(244,107,35)" fg:x="9087" fg:w="5"/><text x="23.4678%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (29 samples, 0.07%)</title><rect x="23.2306%" y="517" width="0.0741%" height="15" fill="rgb(205,140,8)" fg:x="9092" fg:w="29"/><text x="23.4806%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commitEncoder] (9 samples, 0.02%)</title><rect x="23.3482%" y="501" width="0.0230%" height="15" fill="rgb(228,84,46)" fg:x="9138" fg:w="9"/><text x="23.5982%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice supportsRaytracing] (6 samples, 0.02%)</title><rect x="24.7764%" y="469" width="0.0153%" height="15" fill="rgb(254,188,9)" fg:x="9697" fg:w="6"/><text x="25.0264%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::ClipRectContextGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setViewports (7 samples, 0.02%)</title><rect x="24.8020%" y="469" width="0.0179%" height="15" fill="rgb(206,112,54)" fg:x="9707" fg:w="7"/><text x="25.0520%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::EndOfTileEmitter&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitEndOfTileArgumentsEarly(IOGPUResourceList*, AGX::G14::DataBufferAllocator&amp;, AGX::G14::EndOfTileProgramVariant const*, LdShdrTransformFragment (4 samples, 0.01%)</title><rect x="24.8403%" y="469" width="0.0102%" height="15" fill="rgb(216,84,49)" fg:x="9722" fg:w="4"/><text x="25.0903%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::Framebuffer&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::Framebuffer (4 samples, 0.01%)</title><rect x="24.8505%" y="469" width="0.0102%" height="15" fill="rgb(214,194,35)" fg:x="9726" fg:w="4"/><text x="25.1005%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource resourceOptions] (5 samples, 0.01%)</title><rect x="25.0013%" y="453" width="0.0128%" height="15" fill="rgb(249,28,3)" fg:x="9785" fg:w="5"/><text x="25.2513%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferDriverConfig&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::FramebufferDriverConfig (63 samples, 0.16%)</title><rect x="24.8633%" y="469" width="0.1610%" height="15" fill="rgb(222,56,52)" fg:x="9731" fg:w="63"/><text x="25.1133%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::PassiveResourceGroupUsage&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::bindPassiveResource (9 samples, 0.02%)</title><rect x="25.0626%" y="437" width="0.0230%" height="15" fill="rgb(245,217,50)" fg:x="9809" fg:w="9"/><text x="25.3126%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="25.0754%" y="421" width="0.0102%" height="15" fill="rgb(213,201,24)" fg:x="9814" fg:w="4"/><text x="25.3254%" y="431.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$IOSurfaceGetBaseAddressOfPlane (5 samples, 0.01%)</title><rect x="25.0881%" y="437" width="0.0128%" height="15" fill="rgb(248,116,28)" fg:x="9819" fg:w="5"/><text x="25.3381%" y="447.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0&gt; (13 samples, 0.03%)</title><rect x="25.1035%" y="437" width="0.0332%" height="15" fill="rgb(219,72,43)" fg:x="9825" fg:w="13"/><text x="25.3535%" y="447.50"></text></g><g><title>IOSurface`IOSurfaceClientGetBaseAddressOfPlane (12 samples, 0.03%)</title><rect x="25.1393%" y="437" width="0.0307%" height="15" fill="rgb(209,138,14)" fg:x="9839" fg:w="12"/><text x="25.3893%" y="447.50"></text></g><g><title>IOSurface`IOSurfaceGetBaseAddressOfPlane (4 samples, 0.01%)</title><rect x="25.1827%" y="437" width="0.0102%" height="15" fill="rgb(222,18,33)" fg:x="9856" fg:w="4"/><text x="25.4327%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::ResourceGroupUsage&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setAndBindRenderTarget (61 samples, 0.16%)</title><rect x="25.0447%" y="453" width="0.1559%" height="15" fill="rgb(213,199,7)" fg:x="9802" fg:w="61"/><text x="25.2947%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::updateResourceGroupUsage (73 samples, 0.19%)</title><rect x="25.0243%" y="469" width="0.1865%" height="15" fill="rgb(250,110,10)" fg:x="9794" fg:w="73"/><text x="25.2743%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getGPUVirtualAddress (4 samples, 0.01%)</title><rect x="25.2006%" y="453" width="0.0102%" height="15" fill="rgb(248,123,6)" fg:x="9863" fg:w="4"/><text x="25.4506%" y="463.50"></text></g><g><title>Metal`MTLResourceListAddHashValue(MTLResourceListPrivate&amp;, unsigned long long) (4 samples, 0.01%)</title><rect x="25.2210%" y="453" width="0.0102%" height="15" fill="rgb(206,91,31)" fg:x="9871" fg:w="4"/><text x="25.4710%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::addAPIResources (25 samples, 0.06%)</title><rect x="25.2108%" y="469" width="0.0639%" height="15" fill="rgb(211,154,13)" fg:x="9867" fg:w="25"/><text x="25.4608%" y="479.50"></text></g><g><title>Metal`MTLResourceListAddResource (17 samples, 0.04%)</title><rect x="25.2312%" y="453" width="0.0434%" height="15" fill="rgb(225,148,7)" fg:x="9875" fg:w="17"/><text x="25.4812%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::addGPUResources(IOGPUResourceList*, AGX::G14::ResourceGroupUsage&amp;, AGX::Framebuffer (6 samples, 0.02%)</title><rect x="25.2747%" y="469" width="0.0153%" height="15" fill="rgb(220,160,43)" fg:x="9892" fg:w="6"/><text x="25.5247%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::Device&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::populateEndOfTileProgramVariants (13 samples, 0.03%)</title><rect x="25.3360%" y="453" width="0.0332%" height="15" fill="rgb(213,52,39)" fg:x="9916" fg:w="13"/><text x="25.5860%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::EndOfTileProgramKey::isPrecompiled (4 samples, 0.01%)</title><rect x="25.8419%" y="421" width="0.0102%" height="15" fill="rgb(243,137,7)" fg:x="10114" fg:w="4"/><text x="26.0919%" y="431.50"></text></g><g><title>AGXMetalG14G`AGX::Program&lt;AGX::G14::EndOfTileProgramVariant, AGX::EndOfTileProgramKey, AGX::G14::IndirectArgumentLayout, AGXG14GFamilyIndirectArgumentBufferLayout&gt;::getOrCreateVariantEntry (5 samples, 0.01%)</title><rect x="25.8547%" y="405" width="0.0128%" height="15" fill="rgb(230,79,13)" fg:x="10119" fg:w="5"/><text x="26.1047%" y="415.50"></text></g><g><title>AGXMetalG14G`VectorMap&lt;AGX::EndOfTileProgramKey, AGX::Program&lt;AGX::G14::EndOfTileProgramVariant, AGX::EndOfTileProgramKey, AGX::G14::IndirectArgumentLayout, AGXG14GFamilyIndirectArgumentBufferLayout&gt;::VariantEntry, 4u&gt;::operator[] (5 samples, 0.01%)</title><rect x="25.8547%" y="389" width="0.0128%" height="15" fill="rgb(247,105,23)" fg:x="10119" fg:w="5"/><text x="26.1047%" y="399.50"></text></g><g><title>AGXMetalG14G`AGX::G14::EndOfTileProgramVariant* AGX::Device&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::tryFindOrCreateDriverProgramVariant&lt;AGX::G14::EndOfTileProgramVariant, AGX::EndOfTileProgramKey, AGX::G14::EndOfTileProgram&gt; (12 samples, 0.03%)</title><rect x="25.8521%" y="421" width="0.0307%" height="15" fill="rgb(223,179,41)" fg:x="10118" fg:w="12"/><text x="26.1021%" y="431.50"></text></g><g><title>AGXMetalG14G`AGX::Device&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::populateEndOfTileProgramVariants (32 samples, 0.08%)</title><rect x="25.8036%" y="437" width="0.0818%" height="15" fill="rgb(218,9,34)" fg:x="10099" fg:w="32"/><text x="26.0536%" y="447.50"></text></g><g><title>AGXMetalG14G`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::getStride&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::View)0, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::Units)2, (AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::Op)0&gt; (5 samples, 0.01%)</title><rect x="25.9364%" y="421" width="0.0128%" height="15" fill="rgb(222,106,8)" fg:x="10151" fg:w="5"/><text x="26.1864%" y="431.50"></text></g><g><title>IOSurface`IOSurfaceClientGetBaseAddressOfPlane (9 samples, 0.02%)</title><rect x="25.9492%" y="421" width="0.0230%" height="15" fill="rgb(211,220,0)" fg:x="10156" fg:w="9"/><text x="26.1992%" y="431.50"></text></g><g><title>AGXMetalG14G`AGX::Framebuffer&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::configurePBE (37 samples, 0.09%)</title><rect x="25.8853%" y="437" width="0.0945%" height="15" fill="rgb(229,52,16)" fg:x="10131" fg:w="37"/><text x="26.1353%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::Program&lt;AGX::G14::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G14::IndirectArgumentLayout, AGXG14GFamilyIndirectArgumentBufferLayout&gt;::getOrCreateVariantEntry (21 samples, 0.05%)</title><rect x="25.9875%" y="421" width="0.0537%" height="15" fill="rgb(212,155,18)" fg:x="10171" fg:w="21"/><text x="26.2375%" y="431.50"></text></g><g><title>AGXMetalG14G`VectorMap&lt;AGX::BackgroundObjectProgramKey, AGX::Program&lt;AGX::G14::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G14::IndirectArgumentLayout, AGXG14GFamilyIndirectArgumentBufferLayout&gt;::VariantEntry, 4u&gt;::operator[] (20 samples, 0.05%)</title><rect x="25.9901%" y="405" width="0.0511%" height="15" fill="rgb(242,21,14)" fg:x="10172" fg:w="20"/><text x="26.2401%" y="415.50"></text></g><g><title>AGXMetalG14G`VectorMap&lt;AGX::BackgroundObjectProgramKey, AGX::Program&lt;AGX::G14::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G14::IndirectArgumentLayout, AGXG14GFamilyIndirectArgumentBufferLayout&gt;::VariantEntry, 4u&gt;::operator[] (5 samples, 0.01%)</title><rect x="26.0489%" y="421" width="0.0128%" height="15" fill="rgb(222,19,48)" fg:x="10195" fg:w="5"/><text x="26.2989%" y="431.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (5 samples, 0.01%)</title><rect x="26.0616%" y="421" width="0.0128%" height="15" fill="rgb(232,45,27)" fg:x="10200" fg:w="5"/><text x="26.3116%" y="431.50"></text></g><g><title>AGXMetalG14G`AGX::G14::BackgroundObjectProgramVariant* AGX::Device&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::tryFindOrCreateDriverProgramVariant&lt;AGX::G14::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G14::BackgroundObjectProgram&gt; (40 samples, 0.10%)</title><rect x="25.9799%" y="437" width="0.1022%" height="15" fill="rgb(249,103,42)" fg:x="10168" fg:w="40"/><text x="26.2299%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::PBEStateEncoderGen8&lt;kAGXRevG14&gt;::StateFields::StateFields(AGX::PBEStateEncoderGen8 (17 samples, 0.04%)</title><rect x="26.0872%" y="437" width="0.0434%" height="15" fill="rgb(246,81,33)" fg:x="10210" fg:w="17"/><text x="26.3372%" y="447.50"></text></g><g><title>AGXMetalG14G`std::__1::enable_if&lt;__is_cpp17_forward_iterator&lt;unsigned int*&gt;::value &amp;&amp; is_constructible&lt;unsigned int, std::__1::iterator_traits&lt;unsigned int*&gt;::reference&gt;::value, void&gt;::type std::__1::vector&lt;unsigned int, std::__1::allocator&lt;unsigned int&gt;&gt;::assign&lt;unsigned int*&gt; (18 samples, 0.05%)</title><rect x="26.1562%" y="437" width="0.0460%" height="15" fill="rgb(252,33,42)" fg:x="10237" fg:w="18"/><text x="26.4062%" y="447.50"></text></g><g><title>IOSurface`IOSurfaceClientGetBaseAddressOfPlane (8 samples, 0.02%)</title><rect x="26.2098%" y="437" width="0.0204%" height="15" fill="rgb(209,212,41)" fg:x="10258" fg:w="8"/><text x="26.4598%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::Framebuffer&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::Framebuffer (341 samples, 0.87%)</title><rect x="25.3692%" y="453" width="0.8713%" height="15" fill="rgb(207,154,6)" fg:x="9929" fg:w="341"/><text x="25.6192%" y="463.50"></text></g><g><title>IOSurface`IOSurfaceGetBaseAddressOfPlane (4 samples, 0.01%)</title><rect x="26.2303%" y="437" width="0.0102%" height="15" fill="rgb(223,64,47)" fg:x="10266" fg:w="4"/><text x="26.4803%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::Framebuffer&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::configurePBE (6 samples, 0.02%)</title><rect x="26.2405%" y="453" width="0.0153%" height="15" fill="rgb(211,161,38)" fg:x="10270" fg:w="6"/><text x="26.4905%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::G14::BackgroundObjectProgramVariant* AGX::Device&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::tryFindOrCreateDriverProgramVariant&lt;AGX::G14::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G14::BackgroundObjectProgram&gt; (8 samples, 0.02%)</title><rect x="26.2558%" y="453" width="0.0204%" height="15" fill="rgb(219,138,40)" fg:x="10276" fg:w="8"/><text x="26.5058%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::FramebufferGen3_3 (419 samples, 1.07%)</title><rect x="25.2900%" y="469" width="1.0706%" height="15" fill="rgb(241,228,46)" fg:x="9898" fg:w="419"/><text x="25.5400%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (22 samples, 0.06%)</title><rect x="26.3044%" y="453" width="0.0562%" height="15" fill="rgb(223,209,38)" fg:x="10295" fg:w="22"/><text x="26.5544%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::PPPEncoderGen5&lt;AGX::G14::ESLEncoder, AGX::G14::VsStateConfig&gt;::RasterToken::setViewports (6 samples, 0.02%)</title><rect x="26.3606%" y="469" width="0.0153%" height="15" fill="rgb(236,164,45)" fg:x="10317" fg:w="6"/><text x="26.6106%" y="479.50"></text></g><g><title>Metal`objc_msgSend$indirectArgumentBufferCapabilities (4 samples, 0.01%)</title><rect x="26.6927%" y="437" width="0.0102%" height="15" fill="rgb(231,15,5)" fg:x="10447" fg:w="4"/><text x="26.9427%" y="447.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice supportsRaytracing] (15 samples, 0.04%)</title><rect x="26.6672%" y="453" width="0.0383%" height="15" fill="rgb(252,35,15)" fg:x="10437" fg:w="15"/><text x="26.9172%" y="463.50"></text></g><g><title>IOGPU`DYLD-STUB$$objc_retain (7 samples, 0.02%)</title><rect x="27.1833%" y="405" width="0.0179%" height="15" fill="rgb(248,181,18)" fg:x="10639" fg:w="7"/><text x="27.4333%" y="415.50"></text></g><g><title>IOGPU`DYLD-STUB$$os_unfair_lock_lock (9 samples, 0.02%)</title><rect x="27.2012%" y="405" width="0.0230%" height="15" fill="rgb(233,39,42)" fg:x="10646" fg:w="9"/><text x="27.4512%" y="415.50"></text></g><g><title>IOGPU`DYLD-STUB$$os_unfair_lock_unlock (5 samples, 0.01%)</title><rect x="27.2242%" y="405" width="0.0128%" height="15" fill="rgb(238,110,33)" fg:x="10655" fg:w="5"/><text x="27.4742%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (8 samples, 0.02%)</title><rect x="27.2932%" y="389" width="0.0204%" height="15" fill="rgb(233,195,10)" fg:x="10682" fg:w="8"/><text x="27.5432%" y="399.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (8 samples, 0.02%)</title><rect x="27.2932%" y="373" width="0.0204%" height="15" fill="rgb(254,105,3)" fg:x="10682" fg:w="8"/><text x="27.5432%" y="383.50"></text></g><g><title>IOKit`IOConnectCallMethod (7 samples, 0.02%)</title><rect x="27.2957%" y="357" width="0.0179%" height="15" fill="rgb(221,225,9)" fg:x="10683" fg:w="7"/><text x="27.5457%" y="367.50"></text></g><g><title>IOKit`io_connect_method (7 samples, 0.02%)</title><rect x="27.2957%" y="341" width="0.0179%" height="15" fill="rgb(224,227,45)" fg:x="10683" fg:w="7"/><text x="27.5457%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.02%)</title><rect x="27.2983%" y="325" width="0.0153%" height="15" fill="rgb(229,198,43)" fg:x="10684" fg:w="6"/><text x="27.5483%" y="335.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (32 samples, 0.08%)</title><rect x="27.2370%" y="405" width="0.0818%" height="15" fill="rgb(206,209,35)" fg:x="10660" fg:w="32"/><text x="27.4870%" y="415.50"></text></g><g><title>Metal`MTLValidationEnabled (7 samples, 0.02%)</title><rect x="27.3187%" y="405" width="0.0179%" height="15" fill="rgb(245,195,53)" fg:x="10692" fg:w="7"/><text x="27.5687%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_retain (22 samples, 0.06%)</title><rect x="27.3366%" y="405" width="0.0562%" height="15" fill="rgb(240,92,26)" fg:x="10699" fg:w="22"/><text x="27.5866%" y="415.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (154 samples, 0.39%)</title><rect x="27.0377%" y="421" width="0.3935%" height="15" fill="rgb(207,40,23)" fg:x="10582" fg:w="154"/><text x="27.2877%" y="431.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (13 samples, 0.03%)</title><rect x="27.3979%" y="405" width="0.0332%" height="15" fill="rgb(223,111,35)" fg:x="10723" fg:w="13"/><text x="27.6479%" y="415.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (63 samples, 0.16%)</title><rect x="27.4388%" y="421" width="0.1610%" height="15" fill="rgb(229,147,28)" fg:x="10739" fg:w="63"/><text x="27.6888%" y="431.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (75 samples, 0.19%)</title><rect x="27.5998%" y="421" width="0.1916%" height="15" fill="rgb(211,29,28)" fg:x="10802" fg:w="75"/><text x="27.8498%" y="431.50"></text></g><g><title>AGXMetalG14G`AGX::DataBufferAllocator&lt;32ul&gt;::newCommand (424 samples, 1.08%)</title><rect x="26.7132%" y="437" width="1.0833%" height="15" fill="rgb(228,72,33)" fg:x="10455" fg:w="424"/><text x="26.9632%" y="447.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$IOGPUResourceListAddResource (11 samples, 0.03%)</title><rect x="27.7965%" y="437" width="0.0281%" height="15" fill="rgb(205,214,31)" fg:x="10879" fg:w="11"/><text x="28.0465%" y="447.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$allocCommandBufferResourceAtIndex: (6 samples, 0.02%)</title><rect x="27.8246%" y="437" width="0.0153%" height="15" fill="rgb(224,111,15)" fg:x="10890" fg:w="6"/><text x="28.0746%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer allocCommandBufferResourceAtIndex:] (9 samples, 0.02%)</title><rect x="27.8400%" y="437" width="0.0230%" height="15" fill="rgb(253,21,26)" fg:x="10896" fg:w="9"/><text x="28.0900%" y="447.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (45 samples, 0.11%)</title><rect x="27.8681%" y="437" width="0.1150%" height="15" fill="rgb(245,139,43)" fg:x="10907" fg:w="45"/><text x="28.1181%" y="447.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginSegment (168 samples, 0.43%)</title><rect x="27.9830%" y="437" width="0.4293%" height="15" fill="rgb(252,170,7)" fg:x="10952" fg:w="168"/><text x="28.2330%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (162 samples, 0.41%)</title><rect x="27.9984%" y="421" width="0.4139%" height="15" fill="rgb(231,118,14)" fg:x="10958" fg:w="162"/><text x="28.2484%" y="431.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (34 samples, 0.09%)</title><rect x="28.4123%" y="437" width="0.0869%" height="15" fill="rgb(238,83,0)" fg:x="11120" fg:w="34"/><text x="28.6623%" y="447.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (41 samples, 0.10%)</title><rect x="28.5043%" y="437" width="0.1048%" height="15" fill="rgb(221,39,39)" fg:x="11156" fg:w="41"/><text x="28.7543%" y="447.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (4 samples, 0.01%)</title><rect x="28.6090%" y="437" width="0.0102%" height="15" fill="rgb(222,119,46)" fg:x="11197" fg:w="4"/><text x="28.8590%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::ContextCommon&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::newCommand (771 samples, 1.97%)</title><rect x="26.7055%" y="453" width="1.9700%" height="15" fill="rgb(222,165,49)" fg:x="10452" fg:w="771"/><text x="26.9555%" y="463.50">A..</text></g><g><title>libobjc.A.dylib`objc_msgSend (19 samples, 0.05%)</title><rect x="28.6269%" y="437" width="0.0485%" height="15" fill="rgb(219,113,52)" fg:x="11204" fg:w="19"/><text x="28.8769%" y="447.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (5 samples, 0.01%)</title><rect x="28.7240%" y="437" width="0.0128%" height="15" fill="rgb(214,7,15)" fg:x="11242" fg:w="5"/><text x="28.9740%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::DataBufferAllocator&lt;32ul&gt;::getGPUAddress (28 samples, 0.07%)</title><rect x="28.6831%" y="453" width="0.0715%" height="15" fill="rgb(235,32,4)" fg:x="11226" fg:w="28"/><text x="28.9331%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::DataBufferAllocator&lt;32ul&gt;::getResInfo (5 samples, 0.01%)</title><rect x="28.7547%" y="453" width="0.0128%" height="15" fill="rgb(238,90,54)" fg:x="11254" fg:w="5"/><text x="29.0047%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::EndOfTileEmitter&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitEndOfTileArgumentsEarly(IOGPUResourceList*, AGX::G14::DataBufferAllocator&amp;, AGX::G14::EndOfTileProgramVariant const*, LdShdrTransformFragment (15 samples, 0.04%)</title><rect x="28.7751%" y="453" width="0.0383%" height="15" fill="rgb(213,208,19)" fg:x="11262" fg:w="15"/><text x="29.0251%" y="463.50"></text></g><g><title>AGXMetalG14G`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G14::Classes, AGX::G14::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformFragment&lt;AGX::G14::Encoders&gt;&gt;(unsigned long long*, unsigned long long**, unsigned int, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*, unsigned long long const*, LdShdrTransformFragment (6 samples, 0.02%)</title><rect x="28.7981%" y="437" width="0.0153%" height="15" fill="rgb(233,156,4)" fg:x="11271" fg:w="6"/><text x="29.0481%" y="447.50"></text></g><g><title>IOGPU`DYLD-STUB$$IOSurfaceBindAccel (4 samples, 0.01%)</title><rect x="28.8313%" y="437" width="0.0102%" height="15" fill="rgb(207,194,5)" fg:x="11284" fg:w="4"/><text x="29.0813%" y="447.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (6 samples, 0.02%)</title><rect x="28.8415%" y="437" width="0.0153%" height="15" fill="rgb(206,111,30)" fg:x="11288" fg:w="6"/><text x="29.0915%" y="447.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferGen3_2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::addGPUResources(IOGPUResourceList*, AGX::G14::ResourceGroupUsage&amp;, AGX::Framebuffer (18 samples, 0.05%)</title><rect x="28.8134%" y="453" width="0.0460%" height="15" fill="rgb(243,70,54)" fg:x="11277" fg:w="18"/><text x="29.0634%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::RenderUSCStateLoader&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitBackgroundObjectArguments(IOGPUResourceList*, AGX::G14::DataBufferAllocator&amp;, AGX::G14::BackgroundObjectProgramVariant const*, AGX::BackgroundObjectArgumentTable (30 samples, 0.08%)</title><rect x="28.8594%" y="453" width="0.0767%" height="15" fill="rgb(242,28,8)" fg:x="11295" fg:w="30"/><text x="29.1094%" y="463.50"></text></g><g><title>AGXMetalG14G`void AGX::CommonUSCStateLoader&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitCommon&lt;AGX::G14::BackgroundObjectProgramVariant const, AGX::BackgroundObjectArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;, AGX::BackgroundObjectDriverArgumentTable, LdShdrTransformFragment&lt;AGX::G14::Encoders&gt;&gt;(unsigned long long*, unsigned long long, unsigned char*, unsigned long long, AGX::G14::BackgroundObjectProgramVariant const*, AGX::BackgroundObjectArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;*, AGX::BackgroundObjectDriverArgumentTable&amp;, LdShdrTransformFragment (25 samples, 0.06%)</title><rect x="28.8722%" y="437" width="0.0639%" height="15" fill="rgb(219,106,18)" fg:x="11300" fg:w="25"/><text x="29.1222%" y="447.50"></text></g><g><title>AGXMetalG14G`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G14::Classes, AGX::G14::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformFragment&lt;AGX::G14::Encoders&gt;&gt;(unsigned long long*, unsigned long long**, unsigned int, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*, unsigned long long const*, LdShdrTransformFragment (9 samples, 0.02%)</title><rect x="28.9131%" y="421" width="0.0230%" height="15" fill="rgb(244,222,10)" fg:x="11316" fg:w="9"/><text x="29.1631%" y="431.50"></text></g><g><title>AGXMetalG14G`AGX::SpillInfoGen2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::checkSpillParamsForCompute (4 samples, 0.01%)</title><rect x="28.9361%" y="453" width="0.0102%" height="15" fill="rgb(236,179,52)" fg:x="11325" fg:w="4"/><text x="29.1861%" y="463.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$IOGPUResourceListAddResource (5 samples, 0.01%)</title><rect x="28.9514%" y="453" width="0.0128%" height="15" fill="rgb(213,23,39)" fg:x="11331" fg:w="5"/><text x="29.2014%" y="463.50"></text></g><g><title>AGXMetalG14G`void AGX::CommonUSCStateLoader&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;::emitCommon&lt;AGX::G14::BackgroundObjectProgramVariant const, AGX::BackgroundObjectArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;, AGX::BackgroundObjectDriverArgumentTable, LdShdrTransformFragment&lt;AGX::G14::Encoders&gt;&gt;(unsigned long long*, unsigned long long, unsigned char*, unsigned long long, AGX::G14::BackgroundObjectProgramVariant const*, AGX::BackgroundObjectArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;*, AGX::BackgroundObjectDriverArgumentTable&amp;, LdShdrTransformFragment (4 samples, 0.01%)</title><rect x="28.9744%" y="453" width="0.0102%" height="15" fill="rgb(238,48,10)" fg:x="11340" fg:w="4"/><text x="29.2244%" y="463.50"></text></g><g><title>AGXMetalG14G`void agxaReserveVDMTokenSpace&lt;AGX::G14::Encoders, AGX::G14::DataBufferAllocator&gt;(AGX::G14::DataBufferAllocator&amp;, unsigned long, AGX::FlagsConfiguration (6 samples, 0.02%)</title><rect x="28.9923%" y="453" width="0.0153%" height="15" fill="rgb(251,196,23)" fg:x="11347" fg:w="6"/><text x="29.2423%" y="463.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (6 samples, 0.02%)</title><rect x="29.0357%" y="437" width="0.0153%" height="15" fill="rgb(250,152,24)" fg:x="11364" fg:w="6"/><text x="29.2857%" y="447.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (25 samples, 0.06%)</title><rect x="29.0153%" y="453" width="0.0639%" height="15" fill="rgb(209,150,17)" fg:x="11356" fg:w="25"/><text x="29.2653%" y="463.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginSegment (4 samples, 0.01%)</title><rect x="29.0792%" y="453" width="0.0102%" height="15" fill="rgb(234,202,34)" fg:x="11381" fg:w="4"/><text x="29.3292%" y="463.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (10 samples, 0.03%)</title><rect x="29.0919%" y="453" width="0.0256%" height="15" fill="rgb(253,148,53)" fg:x="11386" fg:w="10"/><text x="29.3419%" y="463.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (11 samples, 0.03%)</title><rect x="29.1175%" y="453" width="0.0281%" height="15" fill="rgb(218,129,16)" fg:x="11396" fg:w="11"/><text x="29.3675%" y="463.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (6 samples, 0.02%)</title><rect x="29.1456%" y="453" width="0.0153%" height="15" fill="rgb(216,85,19)" fg:x="11407" fg:w="6"/><text x="29.3956%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::beginRenderPass (1,098 samples, 2.81%)</title><rect x="26.3759%" y="469" width="2.8055%" height="15" fill="rgb(235,228,7)" fg:x="10323" fg:w="1098"/><text x="26.6259%" y="479.50">AG..</text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="29.1686%" y="453" width="0.0128%" height="15" fill="rgb(245,175,0)" fg:x="11416" fg:w="5"/><text x="29.4186%" y="463.50"></text></g><g><title>AGXMetalG14G`AGX::SpillInfoGen2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::checkSpillParamsForCompute (8 samples, 0.02%)</title><rect x="29.1890%" y="469" width="0.0204%" height="15" fill="rgb(208,168,36)" fg:x="11424" fg:w="8"/><text x="29.4390%" y="479.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$_descriptorAtIndex: (8 samples, 0.02%)</title><rect x="29.2248%" y="469" width="0.0204%" height="15" fill="rgb(246,171,24)" fg:x="11438" fg:w="8"/><text x="29.4748%" y="479.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$supportsFunctionPointers (4 samples, 0.01%)</title><rect x="29.2529%" y="469" width="0.0102%" height="15" fill="rgb(215,142,24)" fg:x="11449" fg:w="4"/><text x="29.5029%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder globalTraceObjectID] (71 samples, 0.18%)</title><rect x="29.2810%" y="469" width="0.1814%" height="15" fill="rgb(250,187,7)" fg:x="11460" fg:w="71"/><text x="29.5310%" y="479.50"></text></g><g><title>IOGPU`IOGPUDeviceGetNextGlobalTraceID (67 samples, 0.17%)</title><rect x="29.2912%" y="453" width="0.1712%" height="15" fill="rgb(228,66,33)" fg:x="11464" fg:w="67"/><text x="29.5412%" y="463.50"></text></g><g><title>libobjc.A.dylib`-[NSObject init] (4 samples, 0.01%)</title><rect x="29.4982%" y="437" width="0.0102%" height="15" fill="rgb(234,215,21)" fg:x="11545" fg:w="4"/><text x="29.7482%" y="447.50"></text></g><g><title>Metal`-[_MTLCommandEncoder initWithCommandBuffer:] (15 samples, 0.04%)</title><rect x="29.4777%" y="453" width="0.0383%" height="15" fill="rgb(222,191,20)" fg:x="11537" fg:w="15"/><text x="29.7277%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="29.5467%" y="453" width="0.0102%" height="15" fill="rgb(245,79,54)" fg:x="11564" fg:w="4"/><text x="29.7967%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder initWithCommandBuffer:] (43 samples, 0.11%)</title><rect x="29.4624%" y="469" width="0.1099%" height="15" fill="rgb(240,10,37)" fg:x="11531" fg:w="43"/><text x="29.7124%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource resourceOptions] (4 samples, 0.01%)</title><rect x="29.5748%" y="469" width="0.0102%" height="15" fill="rgb(214,192,32)" fg:x="11575" fg:w="4"/><text x="29.8248%" y="479.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal _descriptorAtIndex:] (12 samples, 0.03%)</title><rect x="29.6208%" y="469" width="0.0307%" height="15" fill="rgb(209,36,54)" fg:x="11593" fg:w="12"/><text x="29.8708%" y="479.50"></text></g><g><title>Metal`-[_MTLDevice minTilePixels] (4 samples, 0.01%)</title><rect x="29.7077%" y="453" width="0.0102%" height="15" fill="rgb(220,10,11)" fg:x="11627" fg:w="4"/><text x="29.9577%" y="463.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal validate:width:height:] (23 samples, 0.06%)</title><rect x="29.6617%" y="469" width="0.0588%" height="15" fill="rgb(221,106,17)" fg:x="11609" fg:w="23"/><text x="29.9117%" y="479.50"></text></g><g><title>Metal`-[_MTLCommandEncoder initWithCommandBuffer:] (5 samples, 0.01%)</title><rect x="29.7230%" y="469" width="0.0128%" height="15" fill="rgb(251,142,44)" fg:x="11633" fg:w="5"/><text x="29.9730%" y="479.50"></text></g><g><title>Metal`-[_MTLDevice supportsFamily:] (6 samples, 0.02%)</title><rect x="29.7358%" y="469" width="0.0153%" height="15" fill="rgb(238,13,15)" fg:x="11638" fg:w="6"/><text x="29.9858%" y="479.50"></text></g><g><title>Metal`MTLResourceListAddResource (16 samples, 0.04%)</title><rect x="29.7562%" y="469" width="0.0409%" height="15" fill="rgb(208,107,27)" fg:x="11646" fg:w="16"/><text x="30.0062%" y="479.50"></text></g><g><title>Metal`objc_msgSend$height (4 samples, 0.01%)</title><rect x="29.8048%" y="469" width="0.0102%" height="15" fill="rgb(205,136,37)" fg:x="11665" fg:w="4"/><text x="30.0548%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (31 samples, 0.08%)</title><rect x="29.8329%" y="469" width="0.0792%" height="15" fill="rgb(250,205,27)" fg:x="11676" fg:w="31"/><text x="30.0829%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="29.9121%" y="469" width="0.0128%" height="15" fill="rgb(210,80,43)" fg:x="11707" fg:w="5"/><text x="30.1621%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.05%)</title><rect x="29.9325%" y="469" width="0.0537%" height="15" fill="rgb(247,160,36)" fg:x="11715" fg:w="21"/><text x="30.1825%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (59 samples, 0.15%)</title><rect x="29.9862%" y="469" width="0.1507%" height="15" fill="rgb(234,13,49)" fg:x="11736" fg:w="59"/><text x="30.2362%" y="479.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (4 samples, 0.01%)</title><rect x="30.1370%" y="469" width="0.0102%" height="15" fill="rgb(234,122,0)" fg:x="11795" fg:w="4"/><text x="30.3870%" y="479.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (2,642 samples, 6.75%)</title><rect x="23.4069%" y="485" width="6.7505%" height="15" fill="rgb(207,146,38)" fg:x="9161" fg:w="2642"/><text x="23.6569%" y="495.50">AGXMetalG..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (4 samples, 0.01%)</title><rect x="30.1472%" y="469" width="0.0102%" height="15" fill="rgb(207,177,25)" fg:x="11799" fg:w="4"/><text x="30.3972%" y="479.50"></text></g><g><title>AGXMetalG14G`AGX::ESLInstructionEncoderGen2_3&lt;AGX::G14::Encoders&gt;::SpecLM::setFragmentImageBlockData (7 samples, 0.02%)</title><rect x="30.1778%" y="485" width="0.0179%" height="15" fill="rgb(211,178,42)" fg:x="11811" fg:w="7"/><text x="30.4278%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::FramebufferCompilerConfigGen3&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::buildDrawBufferState (10 samples, 0.03%)</title><rect x="30.1957%" y="485" width="0.0256%" height="15" fill="rgb(230,69,54)" fg:x="11818" fg:w="10"/><text x="30.4457%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::PPPEncoderGen5&lt;AGX::G14::ESLEncoder, AGX::G14::VsStateConfig&gt;::RasterToken::setViewports (4 samples, 0.01%)</title><rect x="30.2392%" y="485" width="0.0102%" height="15" fill="rgb(214,135,41)" fg:x="11835" fg:w="4"/><text x="30.4892%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::SpillInfoGen2&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::SpillInfoGen2(AGXG14GFamilyDevice*, AGX::DeviceInternalBuffer (16 samples, 0.04%)</title><rect x="30.2545%" y="485" width="0.0409%" height="15" fill="rgb(237,67,25)" fg:x="11841" fg:w="16"/><text x="30.5045%" y="495.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$bzero (15 samples, 0.04%)</title><rect x="30.2979%" y="485" width="0.0383%" height="15" fill="rgb(222,189,50)" fg:x="11858" fg:w="15"/><text x="30.5479%" y="495.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$os_unfair_lock_lock (7 samples, 0.02%)</title><rect x="30.3465%" y="485" width="0.0179%" height="15" fill="rgb(245,148,34)" fg:x="11877" fg:w="7"/><text x="30.5965%" y="495.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$commandBufferResourceInfo (4 samples, 0.01%)</title><rect x="30.3848%" y="485" width="0.0102%" height="15" fill="rgb(222,29,6)" fg:x="11892" fg:w="4"/><text x="30.6348%" y="495.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$device (4 samples, 0.01%)</title><rect x="30.3976%" y="485" width="0.0102%" height="15" fill="rgb(221,189,43)" fg:x="11897" fg:w="4"/><text x="30.6476%" y="495.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$globalTraceObjectID (6 samples, 0.02%)</title><rect x="30.4103%" y="485" width="0.0153%" height="15" fill="rgb(207,36,27)" fg:x="11902" fg:w="6"/><text x="30.6603%" y="495.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$ioGPUResourceList (5 samples, 0.01%)</title><rect x="30.4308%" y="485" width="0.0128%" height="15" fill="rgb(217,90,24)" fg:x="11910" fg:w="5"/><text x="30.6808%" y="495.50"></text></g><g><title>AGXMetalG14G`objc_msgSend$rasterizationRateMap (5 samples, 0.01%)</title><rect x="30.4563%" y="485" width="0.0128%" height="15" fill="rgb(224,66,35)" fg:x="11920" fg:w="5"/><text x="30.7063%" y="495.50"></text></g><g><title>AGXMetalG14G`std::__1::__function::__func&lt;AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::&apos;lambda&apos;(), std::__1::allocator&lt;AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::&apos;lambda&apos;()&gt;, AGX::G14::SWGeometryPipelineContext* ()&gt;::__clone(std::__1::__function::__base&lt;AGX::G14::SWGeometryPipelineContext* (13 samples, 0.03%)</title><rect x="30.4819%" y="485" width="0.0332%" height="15" fill="rgb(221,13,50)" fg:x="11930" fg:w="13"/><text x="30.7319%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer device] (6 samples, 0.02%)</title><rect x="30.5355%" y="485" width="0.0153%" height="15" fill="rgb(236,68,49)" fg:x="11951" fg:w="6"/><text x="30.7855%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer ioGPUResourceList] (7 samples, 0.02%)</title><rect x="30.5560%" y="485" width="0.0179%" height="15" fill="rgb(229,146,28)" fg:x="11959" fg:w="7"/><text x="30.8060%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder globalTraceObjectID] (7 samples, 0.02%)</title><rect x="30.5739%" y="485" width="0.0179%" height="15" fill="rgb(225,31,38)" fg:x="11966" fg:w="7"/><text x="30.8239%" y="495.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal _descriptorPrivate] (7 samples, 0.02%)</title><rect x="30.5994%" y="485" width="0.0179%" height="15" fill="rgb(250,208,3)" fg:x="11976" fg:w="7"/><text x="30.8494%" y="495.50"></text></g><g><title>Metal`-[MTLRenderPassSampleBufferAttachmentDescriptorArrayInternal _descriptorAtIndex:] (6 samples, 0.02%)</title><rect x="30.6429%" y="485" width="0.0153%" height="15" fill="rgb(246,54,23)" fg:x="11993" fg:w="6"/><text x="30.8929%" y="495.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (8 samples, 0.02%)</title><rect x="30.6735%" y="485" width="0.0204%" height="15" fill="rgb(243,76,11)" fg:x="12005" fg:w="8"/><text x="30.9235%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (6 samples, 0.02%)</title><rect x="30.6786%" y="469" width="0.0153%" height="15" fill="rgb(245,21,50)" fg:x="12007" fg:w="6"/><text x="30.9286%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (58 samples, 0.15%)</title><rect x="30.6940%" y="485" width="0.1482%" height="15" fill="rgb(228,9,43)" fg:x="12013" fg:w="58"/><text x="30.9440%" y="495.50"></text></g><g><title>libsystem_platform.dylib`__bzero (800 samples, 2.04%)</title><rect x="30.8651%" y="485" width="2.0440%" height="15" fill="rgb(208,100,47)" fg:x="12080" fg:w="800"/><text x="31.1151%" y="495.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1,300 samples, 3.32%)</title><rect x="32.9092%" y="485" width="3.3216%" height="15" fill="rgb(232,26,8)" fg:x="12880" fg:w="1300"/><text x="33.1592%" y="495.50">lib..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (4 samples, 0.01%)</title><rect x="36.2308%" y="485" width="0.0102%" height="15" fill="rgb(216,166,38)" fg:x="14180" fg:w="4"/><text x="36.4808%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (5,038 samples, 12.87%)</title><rect x="23.3788%" y="501" width="12.8724%" height="15" fill="rgb(251,202,51)" fg:x="9150" fg:w="5038"/><text x="23.6288%" y="511.50">AGXMetalG14G`-[AGXG..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (4 samples, 0.01%)</title><rect x="36.2410%" y="485" width="0.0102%" height="15" fill="rgb(254,216,34)" fg:x="14184" fg:w="4"/><text x="36.4910%" y="495.50"></text></g><g><title>IOGPU`IOGPUDeviceGetNextGlobalTraceID (61 samples, 0.16%)</title><rect x="36.3228%" y="453" width="0.1559%" height="15" fill="rgb(251,32,27)" fg:x="14216" fg:w="61"/><text x="36.5728%" y="463.50"></text></g><g><title>IOGPU`DYLD-STUB$$os_unfair_lock_unlock (4 samples, 0.01%)</title><rect x="36.5169%" y="421" width="0.0102%" height="15" fill="rgb(208,127,28)" fg:x="14292" fg:w="4"/><text x="36.7669%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalDeviceShmemPoolCreateShmem (5 samples, 0.01%)</title><rect x="36.5272%" y="421" width="0.0128%" height="15" fill="rgb(224,137,22)" fg:x="14296" fg:w="5"/><text x="36.7772%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalDeviceShmem initWithDevice:shmemSize:shmemType:] (5 samples, 0.01%)</title><rect x="36.5272%" y="405" width="0.0128%" height="15" fill="rgb(254,70,32)" fg:x="14296" fg:w="5"/><text x="36.7772%" y="415.50"></text></g><g><title>IOGPU`IOGPUDeviceCreateDeviceShmem (5 samples, 0.01%)</title><rect x="36.5272%" y="389" width="0.0128%" height="15" fill="rgb(229,75,37)" fg:x="14296" fg:w="5"/><text x="36.7772%" y="399.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.01%)</title><rect x="36.5272%" y="373" width="0.0128%" height="15" fill="rgb(252,64,23)" fg:x="14296" fg:w="5"/><text x="36.7772%" y="383.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.01%)</title><rect x="36.5272%" y="357" width="0.0128%" height="15" fill="rgb(232,162,48)" fg:x="14296" fg:w="5"/><text x="36.7772%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="36.5272%" y="341" width="0.0128%" height="15" fill="rgb(246,160,12)" fg:x="14296" fg:w="5"/><text x="36.7772%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.01%)</title><rect x="36.5425%" y="405" width="0.0102%" height="15" fill="rgb(247,166,0)" fg:x="14302" fg:w="4"/><text x="36.7925%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (9 samples, 0.02%)</title><rect x="36.5527%" y="405" width="0.0230%" height="15" fill="rgb(249,219,21)" fg:x="14306" fg:w="9"/><text x="36.8027%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (21 samples, 0.05%)</title><rect x="36.6447%" y="357" width="0.0537%" height="15" fill="rgb(205,209,3)" fg:x="14342" fg:w="21"/><text x="36.8947%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (61 samples, 0.16%)</title><rect x="36.5834%" y="389" width="0.1559%" height="15" fill="rgb(243,44,1)" fg:x="14318" fg:w="61"/><text x="36.8334%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (56 samples, 0.14%)</title><rect x="36.5961%" y="373" width="0.1431%" height="15" fill="rgb(206,159,16)" fg:x="14323" fg:w="56"/><text x="36.8461%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.04%)</title><rect x="36.7035%" y="357" width="0.0358%" height="15" fill="rgb(244,77,30)" fg:x="14365" fg:w="14"/><text x="36.9535%" y="367.50"></text></g><g><title>IOGPU`IOGPUResourceListInit (169 samples, 0.43%)</title><rect x="36.5399%" y="421" width="0.4318%" height="15" fill="rgb(218,69,12)" fg:x="14301" fg:w="169"/><text x="36.7899%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (154 samples, 0.39%)</title><rect x="36.5783%" y="405" width="0.3935%" height="15" fill="rgb(212,87,7)" fg:x="14316" fg:w="154"/><text x="36.8283%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (91 samples, 0.23%)</title><rect x="36.7392%" y="389" width="0.2325%" height="15" fill="rgb(245,114,25)" fg:x="14379" fg:w="91"/><text x="36.9892%" y="399.50"></text></g><g><title>Metal`MTLResourceListPoolCreateResourceList (4 samples, 0.01%)</title><rect x="36.9743%" y="421" width="0.0102%" height="15" fill="rgb(210,61,42)" fg:x="14471" fg:w="4"/><text x="37.2243%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.01%)</title><rect x="36.9845%" y="421" width="0.0128%" height="15" fill="rgb(211,52,33)" fg:x="14475" fg:w="5"/><text x="37.2345%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (16 samples, 0.04%)</title><rect x="37.0152%" y="405" width="0.0409%" height="15" fill="rgb(234,58,33)" fg:x="14487" fg:w="16"/><text x="37.2652%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (11 samples, 0.03%)</title><rect x="37.0280%" y="389" width="0.0281%" height="15" fill="rgb(220,115,36)" fg:x="14492" fg:w="11"/><text x="37.2780%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.01%)</title><rect x="37.0561%" y="405" width="0.0102%" height="15" fill="rgb(243,153,54)" fg:x="14503" fg:w="4"/><text x="37.3061%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="37.0842%" y="389" width="0.0102%" height="15" fill="rgb(251,47,18)" fg:x="14514" fg:w="4"/><text x="37.3342%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.04%)</title><rect x="37.0944%" y="389" width="0.0383%" height="15" fill="rgb(242,102,42)" fg:x="14518" fg:w="15"/><text x="37.3444%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.07%)</title><rect x="37.0663%" y="405" width="0.0690%" height="15" fill="rgb(234,31,38)" fg:x="14507" fg:w="27"/><text x="37.3163%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (74 samples, 0.19%)</title><rect x="37.0050%" y="421" width="0.1891%" height="15" fill="rgb(221,117,51)" fg:x="14483" fg:w="74"/><text x="37.2550%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (23 samples, 0.06%)</title><rect x="37.1353%" y="405" width="0.0588%" height="15" fill="rgb(212,20,18)" fg:x="14534" fg:w="23"/><text x="37.3853%" y="415.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (4 samples, 0.01%)</title><rect x="37.1966%" y="421" width="0.0102%" height="15" fill="rgb(245,133,36)" fg:x="14558" fg:w="4"/><text x="37.4466%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageCreateExt (288 samples, 0.74%)</title><rect x="36.5118%" y="437" width="0.7359%" height="15" fill="rgb(212,6,19)" fg:x="14290" fg:w="288"/><text x="36.7618%" y="447.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (16 samples, 0.04%)</title><rect x="37.2068%" y="421" width="0.0409%" height="15" fill="rgb(218,1,36)" fg:x="14562" fg:w="16"/><text x="37.4568%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (313 samples, 0.80%)</title><rect x="36.4786%" y="453" width="0.7997%" height="15" fill="rgb(246,84,54)" fg:x="14277" fg:w="313"/><text x="36.7286%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="37.2656%" y="437" width="0.0128%" height="15" fill="rgb(242,110,6)" fg:x="14585" fg:w="5"/><text x="37.5156%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (96 samples, 0.25%)</title><rect x="37.3294%" y="437" width="0.2453%" height="15" fill="rgb(214,47,5)" fg:x="14610" fg:w="96"/><text x="37.5794%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (94 samples, 0.24%)</title><rect x="37.3346%" y="421" width="0.2402%" height="15" fill="rgb(218,159,25)" fg:x="14612" fg:w="94"/><text x="37.5846%" y="431.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (118 samples, 0.30%)</title><rect x="37.2783%" y="453" width="0.3015%" height="15" fill="rgb(215,211,28)" fg:x="14590" fg:w="118"/><text x="37.5283%" y="463.50"></text></g><g><title>Metal`-[_MTLDevice commandBufferErrorOptions] (5 samples, 0.01%)</title><rect x="37.5850%" y="453" width="0.0128%" height="15" fill="rgb(238,59,32)" fg:x="14710" fg:w="5"/><text x="37.8350%" y="463.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_wait (6 samples, 0.02%)</title><rect x="37.6182%" y="453" width="0.0153%" height="15" fill="rgb(226,82,3)" fg:x="14723" fg:w="6"/><text x="37.8682%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="37.6335%" y="453" width="0.0256%" height="15" fill="rgb(240,164,32)" fg:x="14729" fg:w="10"/><text x="37.8835%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (4 samples, 0.01%)</title><rect x="37.6616%" y="453" width="0.0102%" height="15" fill="rgb(232,46,7)" fg:x="14740" fg:w="4"/><text x="37.9116%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (6 samples, 0.02%)</title><rect x="37.6718%" y="453" width="0.0153%" height="15" fill="rgb(229,129,53)" fg:x="14744" fg:w="6"/><text x="37.9218%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (551 samples, 1.41%)</title><rect x="36.2921%" y="469" width="1.4078%" height="15" fill="rgb(234,188,29)" fg:x="14204" fg:w="551"/><text x="36.5421%" y="479.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.02%)</title><rect x="37.7280%" y="469" width="0.0153%" height="15" fill="rgb(246,141,4)" fg:x="14766" fg:w="6"/><text x="37.9780%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.01%)</title><rect x="37.7331%" y="453" width="0.0102%" height="15" fill="rgb(229,23,39)" fg:x="14768" fg:w="4"/><text x="37.9831%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.01%)</title><rect x="37.7536%" y="469" width="0.0128%" height="15" fill="rgb(206,12,3)" fg:x="14776" fg:w="5"/><text x="38.0036%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="37.7664%" y="469" width="0.0102%" height="15" fill="rgb(252,226,20)" fg:x="14781" fg:w="4"/><text x="38.0164%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="37.7791%" y="469" width="0.0230%" height="15" fill="rgb(216,123,35)" fg:x="14786" fg:w="9"/><text x="38.0291%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="37.8124%" y="437" width="0.0230%" height="15" fill="rgb(212,68,40)" fg:x="14799" fg:w="9"/><text x="38.0624%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.04%)</title><rect x="37.8021%" y="469" width="0.0358%" height="15" fill="rgb(254,125,32)" fg:x="14795" fg:w="14"/><text x="38.0521%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.04%)</title><rect x="37.8021%" y="453" width="0.0358%" height="15" fill="rgb(253,97,22)" fg:x="14795" fg:w="14"/><text x="38.0521%" y="463.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer initWithQueue:retainedReferences:] (620 samples, 1.58%)</title><rect x="36.2563%" y="485" width="1.5841%" height="15" fill="rgb(241,101,14)" fg:x="14190" fg:w="620"/><text x="36.5063%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice alertCommandBufferActivityStart] (4 samples, 0.01%)</title><rect x="37.8405%" y="485" width="0.0102%" height="15" fill="rgb(238,103,29)" fg:x="14810" fg:w="4"/><text x="38.0905%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commandQueue] (4 samples, 0.01%)</title><rect x="37.8762%" y="485" width="0.0102%" height="15" fill="rgb(233,195,47)" fg:x="14824" fg:w="4"/><text x="38.1262%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="37.9248%" y="437" width="0.0153%" height="15" fill="rgb(246,218,30)" fg:x="14843" fg:w="6"/><text x="38.1748%" y="447.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (44 samples, 0.11%)</title><rect x="37.8941%" y="485" width="0.1124%" height="15" fill="rgb(219,145,47)" fg:x="14831" fg:w="44"/><text x="38.1441%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (43 samples, 0.11%)</title><rect x="37.8967%" y="469" width="0.1099%" height="15" fill="rgb(243,12,26)" fg:x="14832" fg:w="43"/><text x="38.1467%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (40 samples, 0.10%)</title><rect x="37.9043%" y="453" width="0.1022%" height="15" fill="rgb(214,87,16)" fg:x="14835" fg:w="40"/><text x="38.1543%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.07%)</title><rect x="37.9401%" y="437" width="0.0664%" height="15" fill="rgb(208,99,42)" fg:x="14849" fg:w="26"/><text x="38.1901%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="38.0117%" y="485" width="0.0204%" height="15" fill="rgb(253,99,2)" fg:x="14877" fg:w="8"/><text x="38.2617%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="38.0321%" y="485" width="0.0128%" height="15" fill="rgb(220,168,23)" fg:x="14885" fg:w="5"/><text x="38.2821%" y="495.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (5 samples, 0.01%)</title><rect x="38.0525%" y="469" width="0.0128%" height="15" fill="rgb(242,38,24)" fg:x="14893" fg:w="5"/><text x="38.3025%" y="479.50"></text></g><g><title>libobjc.A.dylib`object_cxxConstructFromClass (10 samples, 0.03%)</title><rect x="38.0449%" y="485" width="0.0256%" height="15" fill="rgb(225,182,9)" fg:x="14890" fg:w="10"/><text x="38.2949%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,154 samples, 2.95%)</title><rect x="38.0883%" y="485" width="2.9485%" height="15" fill="rgb(243,178,37)" fg:x="14907" fg:w="1154"/><text x="38.3383%" y="495.50">li..</text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandQueue commandBuffer] (1,883 samples, 4.81%)</title><rect x="36.2512%" y="501" width="4.8112%" height="15" fill="rgb(232,139,19)" fg:x="14188" fg:w="1883"/><text x="36.5012%" y="511.50">AGXMet..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (10 samples, 0.03%)</title><rect x="41.0368%" y="485" width="0.0256%" height="15" fill="rgb(225,201,24)" fg:x="16061" fg:w="10"/><text x="41.2868%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (5 samples, 0.01%)</title><rect x="41.0675%" y="501" width="0.0128%" height="15" fill="rgb(221,47,46)" fg:x="16073" fg:w="5"/><text x="41.3175%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setFragmentProgramBuffer (11 samples, 0.03%)</title><rect x="41.0803%" y="501" width="0.0281%" height="15" fill="rgb(249,23,13)" fg:x="16078" fg:w="11"/><text x="41.3303%" y="511.50"></text></g><g><title>Metal`MTLResourceListAddResource (6 samples, 0.02%)</title><rect x="41.0931%" y="485" width="0.0153%" height="15" fill="rgb(219,9,5)" fg:x="16083" fg:w="6"/><text x="41.3431%" y="495.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setVertexProgramBuffer (13 samples, 0.03%)</title><rect x="41.1084%" y="501" width="0.0332%" height="15" fill="rgb(254,171,16)" fg:x="16089" fg:w="13"/><text x="41.3584%" y="511.50"></text></g><g><title>AGXMetalG14G`AGX::ResourceGroupUsage&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::setBuffer (4 samples, 0.01%)</title><rect x="41.1416%" y="501" width="0.0102%" height="15" fill="rgb(230,171,20)" fg:x="16102" fg:w="4"/><text x="41.3916%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder setLabel:] (14 samples, 0.04%)</title><rect x="41.1697%" y="501" width="0.0358%" height="15" fill="rgb(210,71,41)" fg:x="16113" fg:w="14"/><text x="41.4197%" y="511.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorInternal setTexture:] (4 samples, 0.01%)</title><rect x="41.2106%" y="501" width="0.0102%" height="15" fill="rgb(206,173,20)" fg:x="16129" fg:w="4"/><text x="41.4606%" y="511.50"></text></g><g><title>Metal`MTLFailureTypeGetEnabled (4 samples, 0.01%)</title><rect x="41.2106%" y="485" width="0.0102%" height="15" fill="rgb(233,88,34)" fg:x="16129" fg:w="4"/><text x="41.4606%" y="495.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (17 samples, 0.04%)</title><rect x="41.2515%" y="469" width="0.0434%" height="15" fill="rgb(223,209,46)" fg:x="16145" fg:w="17"/><text x="41.5015%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="41.2847%" y="453" width="0.0102%" height="15" fill="rgb(250,43,18)" fg:x="16158" fg:w="4"/><text x="41.5347%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (33 samples, 0.08%)</title><rect x="41.2387%" y="485" width="0.0843%" height="15" fill="rgb(208,13,10)" fg:x="16140" fg:w="33"/><text x="41.4887%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (8 samples, 0.02%)</title><rect x="41.3026%" y="469" width="0.0204%" height="15" fill="rgb(212,200,36)" fg:x="16165" fg:w="8"/><text x="41.5526%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (8 samples, 0.02%)</title><rect x="41.3026%" y="453" width="0.0204%" height="15" fill="rgb(225,90,30)" fg:x="16165" fg:w="8"/><text x="41.5526%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandBuffer enqueue] (48 samples, 0.12%)</title><rect x="41.2208%" y="501" width="0.1226%" height="15" fill="rgb(236,182,39)" fg:x="16133" fg:w="48"/><text x="41.4708%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (5 samples, 0.01%)</title><rect x="41.3435%" y="501" width="0.0128%" height="15" fill="rgb(212,144,35)" fg:x="16181" fg:w="5"/><text x="41.5935%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`ChooseShaderPipelines (5 samples, 0.01%)</title><rect x="41.3818%" y="501" width="0.0128%" height="15" fill="rgb(228,63,44)" fg:x="16196" fg:w="5"/><text x="41.6318%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (21 samples, 0.05%)</title><rect x="41.4099%" y="501" width="0.0537%" height="15" fill="rgb(228,109,6)" fg:x="16207" fg:w="21"/><text x="41.6599%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease (9 samples, 0.02%)</title><rect x="41.4686%" y="501" width="0.0230%" height="15" fill="rgb(238,117,24)" fg:x="16230" fg:w="9"/><text x="41.7186%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_retain (9 samples, 0.02%)</title><rect x="41.4968%" y="501" width="0.0230%" height="15" fill="rgb(242,26,26)" fg:x="16241" fg:w="9"/><text x="41.7468%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (29 samples, 0.07%)</title><rect x="41.5198%" y="501" width="0.0741%" height="15" fill="rgb(221,92,48)" fg:x="16250" fg:w="29"/><text x="41.7698%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (7,156 samples, 18.28%)</title><rect x="23.3124%" y="517" width="18.2840%" height="15" fill="rgb(209,209,32)" fg:x="9124" fg:w="7156"/><text x="23.5624%" y="527.50">libSDL2-2.0.0.dylib`METAL_Ac..</text></g><g><title>QuartzCore`CALayerRelease (4 samples, 0.01%)</title><rect x="41.6041%" y="501" width="0.0102%" height="15" fill="rgb(221,70,22)" fg:x="16283" fg:w="4"/><text x="41.8541%" y="511.50"></text></g><g><title>QuartzCore`CALayerRetain (4 samples, 0.01%)</title><rect x="41.6143%" y="501" width="0.0102%" height="15" fill="rgb(248,145,5)" fg:x="16287" fg:w="4"/><text x="41.8643%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (4 samples, 0.01%)</title><rect x="41.6347%" y="501" width="0.0102%" height="15" fill="rgb(226,116,26)" fg:x="16295" fg:w="4"/><text x="41.8847%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_GetOutputSize (23 samples, 0.06%)</title><rect x="41.5964%" y="517" width="0.0588%" height="15" fill="rgb(244,5,17)" fg:x="16280" fg:w="23"/><text x="41.8464%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (4 samples, 0.01%)</title><rect x="41.6449%" y="501" width="0.0102%" height="15" fill="rgb(252,159,33)" fg:x="16299" fg:w="4"/><text x="41.8949%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_IntersectRect_REAL (4 samples, 0.01%)</title><rect x="41.6552%" y="517" width="0.0102%" height="15" fill="rgb(206,71,0)" fg:x="16303" fg:w="4"/><text x="41.9052%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (79 samples, 0.20%)</title><rect x="41.7344%" y="517" width="0.2018%" height="15" fill="rgb(233,118,54)" fg:x="16334" fg:w="79"/><text x="41.9844%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease (4 samples, 0.01%)</title><rect x="41.9362%" y="517" width="0.0102%" height="15" fill="rgb(234,83,48)" fg:x="16413" fg:w="4"/><text x="42.1862%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_release (112 samples, 0.29%)</title><rect x="41.9464%" y="517" width="0.2862%" height="15" fill="rgb(228,3,54)" fg:x="16417" fg:w="112"/><text x="42.1964%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_retain (33 samples, 0.08%)</title><rect x="42.2326%" y="517" width="0.0843%" height="15" fill="rgb(226,155,13)" fg:x="16529" fg:w="33"/><text x="42.4826%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (46 samples, 0.12%)</title><rect x="42.3169%" y="517" width="0.1175%" height="15" fill="rgb(241,28,37)" fg:x="16562" fg:w="46"/><text x="42.5669%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (7,847 samples, 20.05%)</title><rect x="22.3926%" y="533" width="20.0496%" height="15" fill="rgb(233,93,10)" fg:x="8764" fg:w="7847"/><text x="22.6426%" y="543.50">libSDL2-2.0.0.dylib`SetDrawState</text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (4 samples, 0.01%)</title><rect x="42.4447%" y="533" width="0.0102%" height="15" fill="rgb(225,113,19)" fg:x="16612" fg:w="4"/><text x="42.6947%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (7 samples, 0.02%)</title><rect x="42.4907%" y="533" width="0.0179%" height="15" fill="rgb(241,2,18)" fg:x="16630" fg:w="7"/><text x="42.7407%" y="543.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (7 samples, 0.02%)</title><rect x="42.4907%" y="517" width="0.0179%" height="15" fill="rgb(228,207,21)" fg:x="16630" fg:w="7"/><text x="42.7407%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (75 samples, 0.19%)</title><rect x="42.5086%" y="533" width="0.1916%" height="15" fill="rgb(213,211,35)" fg:x="16637" fg:w="75"/><text x="42.7586%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (11 samples, 0.03%)</title><rect x="42.7002%" y="533" width="0.0281%" height="15" fill="rgb(209,83,10)" fg:x="16712" fg:w="11"/><text x="42.9502%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_release (42 samples, 0.11%)</title><rect x="42.7334%" y="533" width="0.1073%" height="15" fill="rgb(209,164,1)" fg:x="16725" fg:w="42"/><text x="42.9834%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_retain (44 samples, 0.11%)</title><rect x="42.8407%" y="533" width="0.1124%" height="15" fill="rgb(213,184,43)" fg:x="16767" fg:w="44"/><text x="43.0907%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (42 samples, 0.11%)</title><rect x="42.9531%" y="533" width="0.1073%" height="15" fill="rgb(231,61,34)" fg:x="16811" fg:w="42"/><text x="43.2031%" y="543.50"></text></g><g><title>libobjc.A.dylib`moveTLSAutoreleaseToPool(ReturnAutoreleaseInfo) (6 samples, 0.02%)</title><rect x="43.0451%" y="517" width="0.0153%" height="15" fill="rgb(235,75,3)" fg:x="16847" fg:w="6"/><text x="43.2951%" y="527.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::add (4 samples, 0.01%)</title><rect x="43.0502%" y="501" width="0.0102%" height="15" fill="rgb(220,106,47)" fg:x="16849" fg:w="4"/><text x="43.3002%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (12,071 samples, 30.84%)</title><rect x="12.2336%" y="549" width="30.8421%" height="15" fill="rgb(210,196,33)" fg:x="4788" fg:w="12071"/><text x="12.4836%" y="559.50">libSDL2-2.0.0.dylib`METAL_RunCommandQueue</text></g><g><title>libobjc.A.dylib`objc_msgSend (52 samples, 0.13%)</title><rect x="43.1397%" y="549" width="0.1329%" height="15" fill="rgb(229,154,42)" fg:x="16884" fg:w="52"/><text x="43.3897%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_release (28 samples, 0.07%)</title><rect x="43.2725%" y="549" width="0.0715%" height="15" fill="rgb(228,114,26)" fg:x="16936" fg:w="28"/><text x="43.5225%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_retain (27 samples, 0.07%)</title><rect x="43.3441%" y="549" width="0.0690%" height="15" fill="rgb(208,144,1)" fg:x="16964" fg:w="27"/><text x="43.5941%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (17 samples, 0.04%)</title><rect x="43.4156%" y="549" width="0.0434%" height="15" fill="rgb(239,112,37)" fg:x="16992" fg:w="17"/><text x="43.6656%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_storeStrong (5 samples, 0.01%)</title><rect x="43.4616%" y="549" width="0.0128%" height="15" fill="rgb(210,96,50)" fg:x="17010" fg:w="5"/><text x="43.7116%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.04%)</title><rect x="43.4744%" y="549" width="0.0383%" height="15" fill="rgb(222,178,2)" fg:x="17015" fg:w="15"/><text x="43.7244%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (12,331 samples, 31.51%)</title><rect x="12.0113%" y="565" width="31.5065%" height="15" fill="rgb(226,74,18)" fg:x="4701" fg:w="12331"/><text x="12.2613%" y="575.50">libSDL2-2.0.0.dylib`FlushRenderCommands</text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_TextureData .cxx_destruct] (8 samples, 0.02%)</title><rect x="43.5587%" y="501" width="0.0204%" height="15" fill="rgb(225,67,54)" fg:x="17048" fg:w="8"/><text x="43.8087%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_storeStrong (7 samples, 0.02%)</title><rect x="43.5612%" y="485" width="0.0179%" height="15" fill="rgb(251,92,32)" fg:x="17049" fg:w="7"/><text x="43.8112%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_storeStrong (5 samples, 0.01%)</title><rect x="43.5791%" y="501" width="0.0128%" height="15" fill="rgb(228,149,22)" fg:x="17056" fg:w="5"/><text x="43.8291%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (27 samples, 0.07%)</title><rect x="43.5331%" y="533" width="0.0690%" height="15" fill="rgb(243,54,13)" fg:x="17038" fg:w="27"/><text x="43.7831%" y="543.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (19 samples, 0.05%)</title><rect x="43.5536%" y="517" width="0.0485%" height="15" fill="rgb(243,180,28)" fg:x="17046" fg:w="19"/><text x="43.8036%" y="527.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (32 samples, 0.08%)</title><rect x="43.5255%" y="549" width="0.0818%" height="15" fill="rgb(208,167,24)" fg:x="17035" fg:w="32"/><text x="43.7755%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.02%)</title><rect x="43.6149%" y="549" width="0.0153%" height="15" fill="rgb(245,73,45)" fg:x="17070" fg:w="6"/><text x="43.8649%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_DestroyTexture (46 samples, 0.12%)</title><rect x="43.5178%" y="565" width="0.1175%" height="15" fill="rgb(237,203,48)" fg:x="17032" fg:w="46"/><text x="43.7678%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (10 samples, 0.03%)</title><rect x="43.6532%" y="565" width="0.0256%" height="15" fill="rgb(211,197,16)" fg:x="17085" fg:w="10"/><text x="43.9032%" y="575.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (5 samples, 0.01%)</title><rect x="43.6660%" y="549" width="0.0128%" height="15" fill="rgb(243,99,51)" fg:x="17090" fg:w="5"/><text x="43.9160%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (12,408 samples, 31.70%)</title><rect x="11.9986%" y="581" width="31.7032%" height="15" fill="rgb(215,123,29)" fg:x="4696" fg:w="12408"/><text x="12.2486%" y="591.50">libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL</text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="43.6916%" y="565" width="0.0102%" height="15" fill="rgb(239,186,37)" fg:x="17100" fg:w="4"/><text x="43.9416%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetPixelFormatPalette_REAL (5 samples, 0.01%)</title><rect x="43.7427%" y="549" width="0.0128%" height="15" fill="rgb(252,136,39)" fg:x="17120" fg:w="5"/><text x="43.9927%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetSurfacePalette_REAL (6 samples, 0.02%)</title><rect x="43.7427%" y="565" width="0.0153%" height="15" fill="rgb(223,213,32)" fg:x="17120" fg:w="6"/><text x="43.9927%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="43.7656%" y="549" width="0.0102%" height="15" fill="rgb(233,115,5)" fg:x="17129" fg:w="4"/><text x="44.0156%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (9 samples, 0.02%)</title><rect x="43.7759%" y="549" width="0.0230%" height="15" fill="rgb(207,226,44)" fg:x="17133" fg:w="9"/><text x="44.0259%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.06%)</title><rect x="43.7989%" y="549" width="0.0588%" height="15" fill="rgb(208,126,0)" fg:x="17142" fg:w="23"/><text x="44.0489%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_free_REAL (42 samples, 0.11%)</title><rect x="43.7580%" y="565" width="0.1073%" height="15" fill="rgb(244,66,21)" fg:x="17126" fg:w="42"/><text x="44.0080%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="43.8704%" y="565" width="0.0179%" height="15" fill="rgb(222,97,12)" fg:x="17170" fg:w="7"/><text x="44.1204%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_FreeSurface_REAL (74 samples, 0.19%)</title><rect x="43.7145%" y="581" width="0.1891%" height="15" fill="rgb(219,213,19)" fg:x="17109" fg:w="74"/><text x="43.9645%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.02%)</title><rect x="43.8883%" y="565" width="0.0153%" height="15" fill="rgb(252,169,30)" fg:x="17177" fg:w="6"/><text x="44.1383%" y="575.50"></text></g><g><title>AppKit`_NSInitializeAppContext (4 samples, 0.01%)</title><rect x="43.9445%" y="485" width="0.0102%" height="15" fill="rgb(206,32,51)" fg:x="17199" fg:w="4"/><text x="44.1945%" y="495.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (12 samples, 0.03%)</title><rect x="43.9266%" y="517" width="0.0307%" height="15" fill="rgb(250,172,42)" fg:x="17192" fg:w="12"/><text x="44.1766%" y="527.50"></text></g><g><title>AppKit`-[NSApplication init] (12 samples, 0.03%)</title><rect x="43.9266%" y="501" width="0.0307%" height="15" fill="rgb(209,34,43)" fg:x="17192" fg:w="12"/><text x="44.1766%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateDevice (17 samples, 0.04%)</title><rect x="43.9266%" y="549" width="0.0434%" height="15" fill="rgb(223,11,35)" fg:x="17192" fg:w="17"/><text x="44.1766%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_RegisterApp (17 samples, 0.04%)</title><rect x="43.9266%" y="533" width="0.0434%" height="15" fill="rgb(251,219,26)" fg:x="17192" fg:w="17"/><text x="44.1766%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_InitSubSystem_REAL (21 samples, 0.05%)</title><rect x="43.9266%" y="581" width="0.0537%" height="15" fill="rgb(231,119,3)" fg:x="17192" fg:w="21"/><text x="44.1766%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_VideoInit_REAL (21 samples, 0.05%)</title><rect x="43.9266%" y="565" width="0.0537%" height="15" fill="rgb(216,97,11)" fg:x="17192" fg:w="21"/><text x="44.1766%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdGeometry (4 samples, 0.01%)</title><rect x="43.9931%" y="565" width="0.0102%" height="15" fill="rgb(223,59,9)" fg:x="17218" fg:w="4"/><text x="44.2431%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (14 samples, 0.04%)</title><rect x="44.0416%" y="533" width="0.0358%" height="15" fill="rgb(233,93,31)" fg:x="17237" fg:w="14"/><text x="44.2916%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdGeometry (17 samples, 0.04%)</title><rect x="44.0365%" y="549" width="0.0434%" height="15" fill="rgb(239,81,33)" fg:x="17235" fg:w="17"/><text x="44.2865%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderCopy_REAL (37 samples, 0.09%)</title><rect x="43.9931%" y="581" width="0.0945%" height="15" fill="rgb(213,120,34)" fg:x="17218" fg:w="37"/><text x="44.2431%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderCopyF_REAL (33 samples, 0.08%)</title><rect x="44.0033%" y="565" width="0.0843%" height="15" fill="rgb(243,49,53)" fg:x="17222" fg:w="33"/><text x="44.2533%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (11 samples, 0.03%)</title><rect x="44.1515%" y="533" width="0.0281%" height="15" fill="rgb(247,216,33)" fg:x="17280" fg:w="11"/><text x="44.4015%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (9 samples, 0.02%)</title><rect x="44.2000%" y="517" width="0.0230%" height="15" fill="rgb(226,26,14)" fg:x="17299" fg:w="9"/><text x="44.4500%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdSetViewport (11 samples, 0.03%)</title><rect x="44.2307%" y="517" width="0.0281%" height="15" fill="rgb(215,49,53)" fg:x="17311" fg:w="11"/><text x="44.4807%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_floor_REAL (10 samples, 0.03%)</title><rect x="44.2588%" y="517" width="0.0256%" height="15" fill="rgb(245,162,40)" fg:x="17322" fg:w="10"/><text x="44.5088%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (46 samples, 0.12%)</title><rect x="44.1796%" y="533" width="0.1175%" height="15" fill="rgb(229,68,17)" fg:x="17291" fg:w="46"/><text x="44.4296%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="44.2843%" y="517" width="0.0128%" height="15" fill="rgb(213,182,10)" fg:x="17332" fg:w="5"/><text x="44.5343%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (79 samples, 0.20%)</title><rect x="44.1131%" y="549" width="0.2018%" height="15" fill="rgb(245,125,30)" fg:x="17265" fg:w="79"/><text x="44.3631%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (94 samples, 0.24%)</title><rect x="44.0876%" y="581" width="0.2402%" height="15" fill="rgb(232,202,2)" fg:x="17255" fg:w="94"/><text x="44.3376%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (92 samples, 0.24%)</title><rect x="44.0927%" y="565" width="0.2351%" height="15" fill="rgb(237,140,51)" fg:x="17257" fg:w="92"/><text x="44.3427%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (5 samples, 0.01%)</title><rect x="44.3150%" y="549" width="0.0128%" height="15" fill="rgb(236,157,25)" fg:x="17344" fg:w="5"/><text x="44.5650%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (4 samples, 0.01%)</title><rect x="44.3278%" y="581" width="0.0102%" height="15" fill="rgb(219,209,0)" fg:x="17349" fg:w="4"/><text x="44.5778%" y="591.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (5 samples, 0.01%)</title><rect x="44.3405%" y="533" width="0.0128%" height="15" fill="rgb(240,116,54)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (5 samples, 0.01%)</title><rect x="44.3405%" y="517" width="0.0128%" height="15" fill="rgb(216,10,36)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (5 samples, 0.01%)</title><rect x="44.3405%" y="501" width="0.0128%" height="15" fill="rgb(222,72,44)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (5 samples, 0.01%)</title><rect x="44.3405%" y="485" width="0.0128%" height="15" fill="rgb(232,159,9)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="495.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (5 samples, 0.01%)</title><rect x="44.3405%" y="469" width="0.0128%" height="15" fill="rgb(210,39,32)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="479.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.01%)</title><rect x="44.3405%" y="453" width="0.0128%" height="15" fill="rgb(216,194,45)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="463.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.01%)</title><rect x="44.3405%" y="437" width="0.0128%" height="15" fill="rgb(218,18,35)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="44.3405%" y="421" width="0.0128%" height="15" fill="rgb(207,83,51)" fg:x="17354" fg:w="5"/><text x="44.5905%" y="431.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext deferredEndEncoding:] (5 samples, 0.01%)</title><rect x="44.3533%" y="501" width="0.0128%" height="15" fill="rgb(225,63,43)" fg:x="17359" fg:w="5"/><text x="44.6033%" y="511.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commit] (6 samples, 0.02%)</title><rect x="44.3533%" y="533" width="0.0153%" height="15" fill="rgb(207,57,36)" fg:x="17359" fg:w="6"/><text x="44.6033%" y="543.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commitEncoder] (6 samples, 0.02%)</title><rect x="44.3533%" y="517" width="0.0153%" height="15" fill="rgb(216,99,33)" fg:x="17359" fg:w="6"/><text x="44.6033%" y="527.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (5 samples, 0.01%)</title><rect x="44.3712%" y="501" width="0.0128%" height="15" fill="rgb(225,42,16)" fg:x="17366" fg:w="5"/><text x="44.6212%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (8 samples, 0.02%)</title><rect x="44.3712%" y="533" width="0.0204%" height="15" fill="rgb(220,201,45)" fg:x="17366" fg:w="8"/><text x="44.6212%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (8 samples, 0.02%)</title><rect x="44.3712%" y="517" width="0.0204%" height="15" fill="rgb(225,33,4)" fg:x="17366" fg:w="8"/><text x="44.6212%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (22 samples, 0.06%)</title><rect x="44.3380%" y="565" width="0.0562%" height="15" fill="rgb(224,33,50)" fg:x="17353" fg:w="22"/><text x="44.5880%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (21 samples, 0.05%)</title><rect x="44.3405%" y="549" width="0.0537%" height="15" fill="rgb(246,198,51)" fg:x="17354" fg:w="21"/><text x="44.5905%" y="559.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commit] (4 samples, 0.01%)</title><rect x="44.3942%" y="549" width="0.0102%" height="15" fill="rgb(205,22,4)" fg:x="17375" fg:w="4"/><text x="44.6442%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RenderPresent (9 samples, 0.02%)</title><rect x="44.3942%" y="565" width="0.0230%" height="15" fill="rgb(206,3,8)" fg:x="17375" fg:w="9"/><text x="44.6442%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (32 samples, 0.08%)</title><rect x="44.3380%" y="581" width="0.0818%" height="15" fill="rgb(251,23,15)" fg:x="17353" fg:w="32"/><text x="44.5880%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.03%)</title><rect x="44.4708%" y="565" width="0.0281%" height="15" fill="rgb(252,88,28)" fg:x="17405" fg:w="11"/><text x="44.7208%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_free_REAL (22 samples, 0.06%)</title><rect x="44.4479%" y="581" width="0.0562%" height="15" fill="rgb(212,127,14)" fg:x="17396" fg:w="22"/><text x="44.6979%" y="591.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`DYLD-STUB$$FT_MulFix (11 samples, 0.03%)</title><rect x="44.5143%" y="565" width="0.0281%" height="15" fill="rgb(247,145,37)" fg:x="17422" fg:w="11"/><text x="44.7643%" y="575.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_SetFontStyle (21 samples, 0.05%)</title><rect x="44.5092%" y="581" width="0.0537%" height="15" fill="rgb(209,117,53)" fg:x="17420" fg:w="21"/><text x="44.7592%" y="591.50"></text></g><g><title>libfreetype.6.dylib`FT_MulFix (4 samples, 0.01%)</title><rect x="44.5526%" y="565" width="0.0102%" height="15" fill="rgb(212,90,42)" fg:x="17437" fg:w="4"/><text x="44.8026%" y="575.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_initFontMetrics (4 samples, 0.01%)</title><rect x="44.5628%" y="581" width="0.0102%" height="15" fill="rgb(218,164,37)" fg:x="17441" fg:w="4"/><text x="44.8128%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.05%)</title><rect x="44.5782%" y="581" width="0.0485%" height="15" fill="rgb(246,65,34)" fg:x="17447" fg:w="19"/><text x="44.8282%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.03%)</title><rect x="44.6267%" y="581" width="0.0307%" height="15" fill="rgb(231,100,33)" fg:x="17466" fg:w="12"/><text x="44.8767%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.02%)</title><rect x="44.6574%" y="581" width="0.0153%" height="15" fill="rgb(228,126,14)" fg:x="17478" fg:w="6"/><text x="44.9074%" y="591.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (8 samples, 0.02%)</title><rect x="44.6982%" y="357" width="0.0204%" height="15" fill="rgb(215,173,21)" fg:x="17494" fg:w="8"/><text x="44.9482%" y="367.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (4 samples, 0.01%)</title><rect x="44.7085%" y="341" width="0.0102%" height="15" fill="rgb(210,6,40)" fg:x="17498" fg:w="4"/><text x="44.9585%" y="351.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (4 samples, 0.01%)</title><rect x="44.7085%" y="325" width="0.0102%" height="15" fill="rgb(212,48,18)" fg:x="17498" fg:w="4"/><text x="44.9585%" y="335.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (4 samples, 0.01%)</title><rect x="44.7085%" y="309" width="0.0102%" height="15" fill="rgb(230,214,11)" fg:x="17498" fg:w="4"/><text x="44.9585%" y="319.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="44.7085%" y="293" width="0.0102%" height="15" fill="rgb(254,105,39)" fg:x="17498" fg:w="4"/><text x="44.9585%" y="303.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="44.7085%" y="277" width="0.0102%" height="15" fill="rgb(245,158,5)" fg:x="17498" fg:w="4"/><text x="44.9585%" y="287.50"></text></g><g><title>HIToolbox`AppleMenuHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (4 samples, 0.01%)</title><rect x="44.7085%" y="261" width="0.0102%" height="15" fill="rgb(249,208,11)" fg:x="17498" fg:w="4"/><text x="44.9585%" y="271.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (12 samples, 0.03%)</title><rect x="44.6931%" y="485" width="0.0307%" height="15" fill="rgb(210,39,28)" fg:x="17492" fg:w="12"/><text x="44.9431%" y="495.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (12 samples, 0.03%)</title><rect x="44.6931%" y="469" width="0.0307%" height="15" fill="rgb(211,56,53)" fg:x="17492" fg:w="12"/><text x="44.9431%" y="479.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (11 samples, 0.03%)</title><rect x="44.6957%" y="453" width="0.0281%" height="15" fill="rgb(226,201,30)" fg:x="17493" fg:w="11"/><text x="44.9457%" y="463.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (11 samples, 0.03%)</title><rect x="44.6957%" y="437" width="0.0281%" height="15" fill="rgb(239,101,34)" fg:x="17493" fg:w="11"/><text x="44.9457%" y="447.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (11 samples, 0.03%)</title><rect x="44.6957%" y="421" width="0.0281%" height="15" fill="rgb(226,209,5)" fg:x="17493" fg:w="11"/><text x="44.9457%" y="431.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (11 samples, 0.03%)</title><rect x="44.6957%" y="405" width="0.0281%" height="15" fill="rgb(250,105,47)" fg:x="17493" fg:w="11"/><text x="44.9457%" y="415.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (10 samples, 0.03%)</title><rect x="44.6982%" y="389" width="0.0256%" height="15" fill="rgb(230,72,3)" fg:x="17494" fg:w="10"/><text x="44.9482%" y="399.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (10 samples, 0.03%)</title><rect x="44.6982%" y="373" width="0.0256%" height="15" fill="rgb(232,218,39)" fg:x="17494" fg:w="10"/><text x="44.9482%" y="383.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (4 samples, 0.01%)</title><rect x="44.7289%" y="85" width="0.0102%" height="15" fill="rgb(248,166,6)" fg:x="17506" fg:w="4"/><text x="44.9789%" y="95.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (5 samples, 0.01%)</title><rect x="44.7289%" y="101" width="0.0128%" height="15" fill="rgb(247,89,20)" fg:x="17506" fg:w="5"/><text x="44.9789%" y="111.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (8 samples, 0.02%)</title><rect x="44.7238%" y="437" width="0.0204%" height="15" fill="rgb(248,130,54)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="447.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (8 samples, 0.02%)</title><rect x="44.7238%" y="421" width="0.0204%" height="15" fill="rgb(234,196,4)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="431.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (8 samples, 0.02%)</title><rect x="44.7238%" y="405" width="0.0204%" height="15" fill="rgb(250,143,31)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="415.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (8 samples, 0.02%)</title><rect x="44.7238%" y="389" width="0.0204%" height="15" fill="rgb(211,110,34)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="399.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (8 samples, 0.02%)</title><rect x="44.7238%" y="373" width="0.0204%" height="15" fill="rgb(215,124,48)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="383.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (8 samples, 0.02%)</title><rect x="44.7238%" y="357" width="0.0204%" height="15" fill="rgb(216,46,13)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="367.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (8 samples, 0.02%)</title><rect x="44.7238%" y="341" width="0.0204%" height="15" fill="rgb(205,184,25)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="351.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (8 samples, 0.02%)</title><rect x="44.7238%" y="325" width="0.0204%" height="15" fill="rgb(228,1,10)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="335.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (8 samples, 0.02%)</title><rect x="44.7238%" y="309" width="0.0204%" height="15" fill="rgb(213,116,27)" fg:x="17504" fg:w="8"/><text x="44.9738%" y="319.50"></text></g><g><title>HIToolbox`ShowHide (6 samples, 0.02%)</title><rect x="44.7289%" y="293" width="0.0153%" height="15" fill="rgb(241,95,50)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="303.50"></text></g><g><title>HIToolbox`_ShowHideWindows (6 samples, 0.02%)</title><rect x="44.7289%" y="277" width="0.0153%" height="15" fill="rgb(238,48,32)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="287.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (6 samples, 0.02%)</title><rect x="44.7289%" y="261" width="0.0153%" height="15" fill="rgb(235,113,49)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="271.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (6 samples, 0.02%)</title><rect x="44.7289%" y="245" width="0.0153%" height="15" fill="rgb(205,127,43)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="255.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.02%)</title><rect x="44.7289%" y="229" width="0.0153%" height="15" fill="rgb(250,162,2)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="239.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.02%)</title><rect x="44.7289%" y="213" width="0.0153%" height="15" fill="rgb(220,13,41)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="223.50"></text></g><g><title>HIToolbox`HIView::SendDraw (6 samples, 0.02%)</title><rect x="44.7289%" y="197" width="0.0153%" height="15" fill="rgb(249,221,25)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="207.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (6 samples, 0.02%)</title><rect x="44.7289%" y="181" width="0.0153%" height="15" fill="rgb(215,208,19)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="191.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (6 samples, 0.02%)</title><rect x="44.7289%" y="165" width="0.0153%" height="15" fill="rgb(236,175,2)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="175.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (6 samples, 0.02%)</title><rect x="44.7289%" y="149" width="0.0153%" height="15" fill="rgb(241,52,2)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="159.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (6 samples, 0.02%)</title><rect x="44.7289%" y="133" width="0.0153%" height="15" fill="rgb(248,140,14)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="143.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (6 samples, 0.02%)</title><rect x="44.7289%" y="117" width="0.0153%" height="15" fill="rgb(253,22,42)" fg:x="17506" fg:w="6"/><text x="44.9789%" y="127.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (4 samples, 0.01%)</title><rect x="44.7545%" y="325" width="0.0102%" height="15" fill="rgb(234,61,47)" fg:x="17516" fg:w="4"/><text x="45.0045%" y="335.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (4 samples, 0.01%)</title><rect x="44.7545%" y="309" width="0.0102%" height="15" fill="rgb(208,226,15)" fg:x="17516" fg:w="4"/><text x="45.0045%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.01%)</title><rect x="44.7545%" y="293" width="0.0102%" height="15" fill="rgb(217,221,4)" fg:x="17516" fg:w="4"/><text x="45.0045%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.01%)</title><rect x="44.7545%" y="277" width="0.0102%" height="15" fill="rgb(212,174,34)" fg:x="17516" fg:w="4"/><text x="45.0045%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.01%)</title><rect x="44.7545%" y="261" width="0.0102%" height="15" fill="rgb(253,83,4)" fg:x="17516" fg:w="4"/><text x="45.0045%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (8 samples, 0.02%)</title><rect x="44.7493%" y="405" width="0.0204%" height="15" fill="rgb(250,195,49)" fg:x="17514" fg:w="8"/><text x="44.9993%" y="415.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (7 samples, 0.02%)</title><rect x="44.7519%" y="389" width="0.0179%" height="15" fill="rgb(241,192,25)" fg:x="17515" fg:w="7"/><text x="45.0019%" y="399.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (7 samples, 0.02%)</title><rect x="44.7519%" y="373" width="0.0179%" height="15" fill="rgb(208,124,10)" fg:x="17515" fg:w="7"/><text x="45.0019%" y="383.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (7 samples, 0.02%)</title><rect x="44.7519%" y="357" width="0.0179%" height="15" fill="rgb(222,33,0)" fg:x="17515" fg:w="7"/><text x="45.0019%" y="367.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (7 samples, 0.02%)</title><rect x="44.7519%" y="341" width="0.0179%" height="15" fill="rgb(234,209,28)" fg:x="17515" fg:w="7"/><text x="45.0019%" y="351.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (4 samples, 0.01%)</title><rect x="44.7851%" y="293" width="0.0102%" height="15" fill="rgb(224,11,23)" fg:x="17528" fg:w="4"/><text x="45.0351%" y="303.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (4 samples, 0.01%)</title><rect x="44.7851%" y="277" width="0.0102%" height="15" fill="rgb(232,99,1)" fg:x="17528" fg:w="4"/><text x="45.0351%" y="287.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (6 samples, 0.02%)</title><rect x="44.7851%" y="309" width="0.0153%" height="15" fill="rgb(237,95,45)" fg:x="17528" fg:w="6"/><text x="45.0351%" y="319.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (11 samples, 0.03%)</title><rect x="44.7851%" y="341" width="0.0281%" height="15" fill="rgb(208,109,11)" fg:x="17528" fg:w="11"/><text x="45.0351%" y="351.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (11 samples, 0.03%)</title><rect x="44.7851%" y="325" width="0.0281%" height="15" fill="rgb(216,190,48)" fg:x="17528" fg:w="11"/><text x="45.0351%" y="335.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (5 samples, 0.01%)</title><rect x="44.8132%" y="293" width="0.0128%" height="15" fill="rgb(251,171,36)" fg:x="17539" fg:w="5"/><text x="45.0632%" y="303.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (4 samples, 0.01%)</title><rect x="44.8158%" y="277" width="0.0102%" height="15" fill="rgb(230,62,22)" fg:x="17540" fg:w="4"/><text x="45.0658%" y="287.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.01%)</title><rect x="44.8158%" y="261" width="0.0102%" height="15" fill="rgb(225,114,35)" fg:x="17540" fg:w="4"/><text x="45.0658%" y="271.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (4 samples, 0.01%)</title><rect x="44.8158%" y="245" width="0.0102%" height="15" fill="rgb(215,118,42)" fg:x="17540" fg:w="4"/><text x="45.0658%" y="255.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.01%)</title><rect x="44.8158%" y="229" width="0.0102%" height="15" fill="rgb(243,119,21)" fg:x="17540" fg:w="4"/><text x="45.0658%" y="239.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (4 samples, 0.01%)</title><rect x="44.8158%" y="213" width="0.0102%" height="15" fill="rgb(252,177,53)" fg:x="17540" fg:w="4"/><text x="45.0658%" y="223.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (6 samples, 0.02%)</title><rect x="44.8132%" y="309" width="0.0153%" height="15" fill="rgb(237,209,29)" fg:x="17539" fg:w="6"/><text x="45.0632%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (20 samples, 0.05%)</title><rect x="44.7826%" y="389" width="0.0511%" height="15" fill="rgb(212,65,23)" fg:x="17527" fg:w="20"/><text x="45.0326%" y="399.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (19 samples, 0.05%)</title><rect x="44.7851%" y="373" width="0.0485%" height="15" fill="rgb(230,222,46)" fg:x="17528" fg:w="19"/><text x="45.0351%" y="383.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (19 samples, 0.05%)</title><rect x="44.7851%" y="357" width="0.0485%" height="15" fill="rgb(215,135,32)" fg:x="17528" fg:w="19"/><text x="45.0351%" y="367.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (8 samples, 0.02%)</title><rect x="44.8132%" y="341" width="0.0204%" height="15" fill="rgb(246,101,22)" fg:x="17539" fg:w="8"/><text x="45.0632%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (8 samples, 0.02%)</title><rect x="44.8132%" y="325" width="0.0204%" height="15" fill="rgb(206,107,13)" fg:x="17539" fg:w="8"/><text x="45.0632%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (30 samples, 0.08%)</title><rect x="44.7723%" y="405" width="0.0767%" height="15" fill="rgb(250,100,44)" fg:x="17523" fg:w="30"/><text x="45.0223%" y="415.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (42 samples, 0.11%)</title><rect x="44.7468%" y="421" width="0.1073%" height="15" fill="rgb(231,147,38)" fg:x="17513" fg:w="42"/><text x="44.9968%" y="431.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (6 samples, 0.02%)</title><rect x="44.8618%" y="373" width="0.0153%" height="15" fill="rgb(229,8,40)" fg:x="17558" fg:w="6"/><text x="45.1118%" y="383.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (5 samples, 0.01%)</title><rect x="44.8643%" y="357" width="0.0128%" height="15" fill="rgb(221,135,30)" fg:x="17559" fg:w="5"/><text x="45.1143%" y="367.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (5 samples, 0.01%)</title><rect x="44.8643%" y="341" width="0.0128%" height="15" fill="rgb(249,193,18)" fg:x="17559" fg:w="5"/><text x="45.1143%" y="351.50"></text></g><g><title>HIToolbox`KeyEventPostedObserver (4 samples, 0.01%)</title><rect x="44.8669%" y="325" width="0.0102%" height="15" fill="rgb(209,133,39)" fg:x="17560" fg:w="4"/><text x="45.1169%" y="335.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (78 samples, 0.20%)</title><rect x="44.6804%" y="501" width="0.1993%" height="15" fill="rgb(232,100,14)" fg:x="17487" fg:w="78"/><text x="44.9304%" y="511.50"></text></g><g><title>AppKit`_DPSNextEvent (61 samples, 0.16%)</title><rect x="44.7238%" y="485" width="0.1559%" height="15" fill="rgb(224,185,1)" fg:x="17504" fg:w="61"/><text x="44.9738%" y="495.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (61 samples, 0.16%)</title><rect x="44.7238%" y="469" width="0.1559%" height="15" fill="rgb(223,139,8)" fg:x="17504" fg:w="61"/><text x="44.9738%" y="479.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (61 samples, 0.16%)</title><rect x="44.7238%" y="453" width="0.1559%" height="15" fill="rgb(232,213,38)" fg:x="17504" fg:w="61"/><text x="44.9738%" y="463.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (52 samples, 0.13%)</title><rect x="44.7468%" y="437" width="0.1329%" height="15" fill="rgb(207,94,22)" fg:x="17513" fg:w="52"/><text x="44.9968%" y="447.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (9 samples, 0.02%)</title><rect x="44.8567%" y="421" width="0.0230%" height="15" fill="rgb(219,183,54)" fg:x="17556" fg:w="9"/><text x="45.1067%" y="431.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (9 samples, 0.02%)</title><rect x="44.8567%" y="405" width="0.0230%" height="15" fill="rgb(216,185,54)" fg:x="17556" fg:w="9"/><text x="45.1067%" y="415.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (9 samples, 0.02%)</title><rect x="44.8567%" y="389" width="0.0230%" height="15" fill="rgb(254,217,39)" fg:x="17556" fg:w="9"/><text x="45.1067%" y="399.50"></text></g><g><title>AppKit`+[NSTextInputContext processInputKeyBindings:] (4 samples, 0.01%)</title><rect x="44.8848%" y="469" width="0.0102%" height="15" fill="rgb(240,178,23)" fg:x="17567" fg:w="4"/><text x="45.1348%" y="479.50"></text></g><g><title>HIToolbox`ProcessInputSourceSwitchEventCandidate (4 samples, 0.01%)</title><rect x="44.8848%" y="453" width="0.0102%" height="15" fill="rgb(218,11,47)" fg:x="17567" fg:w="4"/><text x="45.1348%" y="463.50"></text></g><g><title>AppKit`getServiceEntries (4 samples, 0.01%)</title><rect x="44.9154%" y="133" width="0.0102%" height="15" fill="rgb(218,51,51)" fg:x="17579" fg:w="4"/><text x="45.1654%" y="143.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (6 samples, 0.02%)</title><rect x="44.9129%" y="325" width="0.0153%" height="15" fill="rgb(238,126,27)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="335.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (6 samples, 0.02%)</title><rect x="44.9129%" y="309" width="0.0153%" height="15" fill="rgb(249,202,22)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="319.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (6 samples, 0.02%)</title><rect x="44.9129%" y="293" width="0.0153%" height="15" fill="rgb(254,195,49)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="303.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (6 samples, 0.02%)</title><rect x="44.9129%" y="277" width="0.0153%" height="15" fill="rgb(208,123,14)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="287.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (6 samples, 0.02%)</title><rect x="44.9129%" y="261" width="0.0153%" height="15" fill="rgb(224,200,8)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="271.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (6 samples, 0.02%)</title><rect x="44.9129%" y="245" width="0.0153%" height="15" fill="rgb(217,61,36)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="255.50"></text></g><g><title>AppKit`NSSLMMenuEventHandler (6 samples, 0.02%)</title><rect x="44.9129%" y="229" width="0.0153%" height="15" fill="rgb(206,35,45)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="239.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] (6 samples, 0.02%)</title><rect x="44.9129%" y="213" width="0.0153%" height="15" fill="rgb(217,65,33)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="223.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventRef:] (6 samples, 0.02%)</title><rect x="44.9129%" y="197" width="0.0153%" height="15" fill="rgb(222,158,48)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="207.50"></text></g><g><title>AppKit`-[_NSServicesPrincipalMenuUpdater updateMenu:withEvent:withFlags:] (6 samples, 0.02%)</title><rect x="44.9129%" y="181" width="0.0153%" height="15" fill="rgb(254,2,54)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="191.50"></text></g><g><title>AppKit`-[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] (6 samples, 0.02%)</title><rect x="44.9129%" y="165" width="0.0153%" height="15" fill="rgb(250,143,38)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="175.50"></text></g><g><title>AppKit`-[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] (6 samples, 0.02%)</title><rect x="44.9129%" y="149" width="0.0153%" height="15" fill="rgb(248,25,0)" fg:x="17578" fg:w="6"/><text x="45.1629%" y="159.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (7 samples, 0.02%)</title><rect x="44.9129%" y="341" width="0.0179%" height="15" fill="rgb(206,152,27)" fg:x="17578" fg:w="7"/><text x="45.1629%" y="351.50"></text></g><g><title>AppKit`routeKeyEquivalent (8 samples, 0.02%)</title><rect x="44.9129%" y="469" width="0.0204%" height="15" fill="rgb(240,77,30)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="479.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (8 samples, 0.02%)</title><rect x="44.9129%" y="453" width="0.0204%" height="15" fill="rgb(231,5,3)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="463.50"></text></g><g><title>AppKit`_NSFindMenuItemMatchingCommandKeyEvent (8 samples, 0.02%)</title><rect x="44.9129%" y="437" width="0.0204%" height="15" fill="rgb(207,226,32)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="447.50"></text></g><g><title>AppKit`+[NSCarbonMenuImpl _menuItemWithKeyEquivalentMatchingEventRef:inMenu:includingDisabledItems:] (8 samples, 0.02%)</title><rect x="44.9129%" y="421" width="0.0204%" height="15" fill="rgb(222,207,47)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="431.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (8 samples, 0.02%)</title><rect x="44.9129%" y="405" width="0.0204%" height="15" fill="rgb(229,115,45)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="415.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (8 samples, 0.02%)</title><rect x="44.9129%" y="389" width="0.0204%" height="15" fill="rgb(224,191,6)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="399.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (8 samples, 0.02%)</title><rect x="44.9129%" y="373" width="0.0204%" height="15" fill="rgb(230,227,24)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="383.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (8 samples, 0.02%)</title><rect x="44.9129%" y="357" width="0.0204%" height="15" fill="rgb(228,80,19)" fg:x="17578" fg:w="8"/><text x="45.1629%" y="367.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (22 samples, 0.06%)</title><rect x="44.8822%" y="485" width="0.0562%" height="15" fill="rgb(247,229,0)" fg:x="17566" fg:w="22"/><text x="45.1322%" y="495.50"></text></g><g><title>AppKit`__204-[NSTextInputContext tryTSMProcessRawKeyEvent_orSubstitution:dispatchCondition:setupForDispatch:furtherCondition:doubleSpaceSubstitutionCondition:doubleSpaceSubstitutionWork:dispatchTSMWork:continuation:]_block_invoke.632 (4 samples, 0.01%)</title><rect x="44.9435%" y="389" width="0.0102%" height="15" fill="rgb(237,194,15)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="399.50"></text></g><g><title>AppKit`__84-[NSTextInputContext _handleEvent:options:allowingSyntheticEvent:completionHandler:]_block_invoke_3.650 (4 samples, 0.01%)</title><rect x="44.9435%" y="373" width="0.0102%" height="15" fill="rgb(219,203,20)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="383.50"></text></g><g><title>HIToolbox`TSMProcessRawKeyEventWithOptionsAndCompletionHandler (4 samples, 0.01%)</title><rect x="44.9435%" y="357" width="0.0102%" height="15" fill="rgb(234,128,8)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="367.50"></text></g><g><title>HIToolbox`__TSMProcessRawKeyEventWithOptionsAndCompletionHandler_block_invoke (4 samples, 0.01%)</title><rect x="44.9435%" y="341" width="0.0102%" height="15" fill="rgb(248,202,8)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="351.50"></text></g><g><title>HIToolbox`__TSMProcessRawKeyEventWithOptionsAndCompletionHandler_block_invoke_2 (4 samples, 0.01%)</title><rect x="44.9435%" y="325" width="0.0102%" height="15" fill="rgb(206,104,37)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="335.50"></text></g><g><title>HIToolbox`__TSMProcessRawKeyEventWithOptionsAndCompletionHandler_block_invoke_3 (4 samples, 0.01%)</title><rect x="44.9435%" y="309" width="0.0102%" height="15" fill="rgb(223,8,27)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="319.50"></text></g><g><title>HIToolbox`__TSMProcessRawKeyEventWithOptionsAndCompletionHandler_block_invoke_4 (4 samples, 0.01%)</title><rect x="44.9435%" y="293" width="0.0102%" height="15" fill="rgb(216,217,28)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="303.50"></text></g><g><title>HIToolbox`TSMKeyEvent_WithCompletionHandler (4 samples, 0.01%)</title><rect x="44.9435%" y="277" width="0.0102%" height="15" fill="rgb(249,199,1)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="287.50"></text></g><g><title>HIToolbox`__utDeliverTSMEvent_WithCompletionHandler_block_invoke (4 samples, 0.01%)</title><rect x="44.9435%" y="261" width="0.0102%" height="15" fill="rgb(240,85,17)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="271.50"></text></g><g><title>HIToolbox`__utDeliverTSMEvent_WithCompletionHandler_block_invoke_2 (4 samples, 0.01%)</title><rect x="44.9435%" y="245" width="0.0102%" height="15" fill="rgb(206,108,45)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="255.50"></text></g><g><title>HIToolbox`SendUnicodeTextAEToUnicodeDoc_WithCompletionHandler (4 samples, 0.01%)</title><rect x="44.9435%" y="229" width="0.0102%" height="15" fill="rgb(245,210,41)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="239.50"></text></g><g><title>HIToolbox`SendFilterTextEvent_WithCompletionHandler (4 samples, 0.01%)</title><rect x="44.9435%" y="213" width="0.0102%" height="15" fill="rgb(206,13,37)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="223.50"></text></g><g><title>HIToolbox`SendTSMEvent_WithCompletionHandler (4 samples, 0.01%)</title><rect x="44.9435%" y="197" width="0.0102%" height="15" fill="rgb(250,61,18)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="207.50"></text></g><g><title>HIToolbox`__SendFilterTextEvent_WithCompletionHandler_block_invoke (4 samples, 0.01%)</title><rect x="44.9435%" y="181" width="0.0102%" height="15" fill="rgb(235,172,48)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="191.50"></text></g><g><title>HIToolbox`__SendUnicodeTextAEToUnicodeDoc_WithCompletionHandler_block_invoke (4 samples, 0.01%)</title><rect x="44.9435%" y="165" width="0.0102%" height="15" fill="rgb(249,201,17)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="175.50"></text></g><g><title>HIToolbox`SendTSMEvent_WithCompletionHandler (4 samples, 0.01%)</title><rect x="44.9435%" y="149" width="0.0102%" height="15" fill="rgb(219,208,6)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="159.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (4 samples, 0.01%)</title><rect x="44.9435%" y="133" width="0.0102%" height="15" fill="rgb(248,31,23)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="143.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="44.9435%" y="117" width="0.0102%" height="15" fill="rgb(245,15,42)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="127.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="44.9435%" y="101" width="0.0102%" height="15" fill="rgb(222,217,39)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="111.50"></text></g><g><title>AppKit`_NSTSMEventHandler (4 samples, 0.01%)</title><rect x="44.9435%" y="85" width="0.0102%" height="15" fill="rgb(210,219,27)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="95.50"></text></g><g><title>AppKit`-[NSTextInputContext handleTSMEvent:completionHandler:] (4 samples, 0.01%)</title><rect x="44.9435%" y="69" width="0.0102%" height="15" fill="rgb(252,166,36)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="79.50"></text></g><g><title>AppKit`-[NSTextInputContext tryHandleTSMEvent_HasMarkedText_withDispatchCondition:dispatchWork:continuation:] (4 samples, 0.01%)</title><rect x="44.9435%" y="53" width="0.0102%" height="15" fill="rgb(245,132,34)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="63.50"></text></g><g><title>AppKit`__55-[NSTextInputContext handleTSMEvent:completionHandler:]_block_invoke_2 (4 samples, 0.01%)</title><rect x="44.9435%" y="37" width="0.0102%" height="15" fill="rgb(236,54,3)" fg:x="17590" fg:w="4"/><text x="45.1935%" y="47.50"></text></g><g><title>AppKit`-[NSTextInputContext _handleEvent:options:allowingSyntheticEvent:completionHandler:] (6 samples, 0.02%)</title><rect x="44.9410%" y="421" width="0.0153%" height="15" fill="rgb(241,173,43)" fg:x="17589" fg:w="6"/><text x="45.1910%" y="431.50"></text></g><g><title>AppKit`-[NSTextInputContext tryTSMProcessRawKeyEvent_orSubstitution:dispatchCondition:setupForDispatch:furtherCondition:doubleSpaceSubstitutionCondition:doubleSpaceSubstitutionWork:dispatchTSMWork:continuation:] (5 samples, 0.01%)</title><rect x="44.9435%" y="405" width="0.0128%" height="15" fill="rgb(215,190,9)" fg:x="17590" fg:w="5"/><text x="45.1935%" y="415.50"></text></g><g><title>AppKit`-[NSTextInputContext _handleEvent:allowingSyntheticEvent:] (8 samples, 0.02%)</title><rect x="44.9384%" y="437" width="0.0204%" height="15" fill="rgb(242,101,16)" fg:x="17588" fg:w="8"/><text x="45.1884%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_WaitEventTimeout_REAL (111 samples, 0.28%)</title><rect x="44.6778%" y="565" width="0.2836%" height="15" fill="rgb(223,190,21)" fg:x="17486" fg:w="111"/><text x="44.9278%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_PumpEventsInternal (110 samples, 0.28%)</title><rect x="44.6804%" y="549" width="0.2811%" height="15" fill="rgb(215,228,25)" fg:x="17487" fg:w="110"/><text x="44.9304%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEvents (110 samples, 0.28%)</title><rect x="44.6804%" y="533" width="0.2811%" height="15" fill="rgb(225,36,22)" fg:x="17487" fg:w="110"/><text x="44.9304%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEventsUntilDate (110 samples, 0.28%)</title><rect x="44.6804%" y="517" width="0.2811%" height="15" fill="rgb(251,106,46)" fg:x="17487" fg:w="110"/><text x="44.9304%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[SDLApplication sendEvent:] (31 samples, 0.08%)</title><rect x="44.8822%" y="501" width="0.0792%" height="15" fill="rgb(208,90,1)" fg:x="17566" fg:w="31"/><text x="45.1322%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_DispatchEvent (9 samples, 0.02%)</title><rect x="44.9384%" y="485" width="0.0230%" height="15" fill="rgb(243,10,4)" fg:x="17588" fg:w="9"/><text x="45.1884%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_HandleKeyEvent (9 samples, 0.02%)</title><rect x="44.9384%" y="469" width="0.0230%" height="15" fill="rgb(212,137,27)" fg:x="17588" fg:w="9"/><text x="45.1884%" y="479.50"></text></g><g><title>AppKit`-[NSView interpretKeyEvents:] (9 samples, 0.02%)</title><rect x="44.9384%" y="453" width="0.0230%" height="15" fill="rgb(231,220,49)" fg:x="17588" fg:w="9"/><text x="45.1884%" y="463.50"></text></g><g><title>velocity-sdl`&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.29%)</title><rect x="44.6753%" y="581" width="0.2913%" height="15" fill="rgb(237,96,20)" fg:x="17485" fg:w="114"/><text x="44.9253%" y="591.50"></text></g><g><title>velocity-sdl`&lt;sdl2::pixels::PixelFormatEnum as core::convert::TryFrom&lt;u32&gt;&gt;::try_from (8 samples, 0.02%)</title><rect x="44.9691%" y="581" width="0.0204%" height="15" fill="rgb(239,229,30)" fg:x="17600" fg:w="8"/><text x="45.2191%" y="591.50"></text></g><g><title>velocity-sdl`sdl2::render::CanvasBuilder::build (6 samples, 0.02%)</title><rect x="45.0023%" y="581" width="0.0153%" height="15" fill="rgb(219,65,33)" fg:x="17613" fg:w="6"/><text x="45.2523%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRenderer_REAL (6 samples, 0.02%)</title><rect x="45.0023%" y="565" width="0.0153%" height="15" fill="rgb(243,134,7)" fg:x="17613" fg:w="6"/><text x="45.2523%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_CreateRenderer (6 samples, 0.02%)</title><rect x="45.0023%" y="549" width="0.0153%" height="15" fill="rgb(216,177,54)" fg:x="17613" fg:w="6"/><text x="45.2523%" y="559.50"></text></g><g><title>velocity-sdl`sdl2::render::InternalTexture::query (4 samples, 0.01%)</title><rect x="45.0176%" y="581" width="0.0102%" height="15" fill="rgb(211,160,20)" fg:x="17619" fg:w="4"/><text x="45.2676%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_QueryTexture_REAL (4 samples, 0.01%)</title><rect x="45.0176%" y="565" width="0.0102%" height="15" fill="rgb(239,85,39)" fg:x="17619" fg:w="4"/><text x="45.2676%" y="575.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`AllocateAlignedPixels (6 samples, 0.02%)</title><rect x="45.0585%" y="549" width="0.0153%" height="15" fill="rgb(232,125,22)" fg:x="17635" fg:w="6"/><text x="45.3085%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$calloc (5 samples, 0.01%)</title><rect x="45.1301%" y="485" width="0.0128%" height="15" fill="rgb(244,57,34)" fg:x="17663" fg:w="5"/><text x="45.3801%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_calloc_REAL (4 samples, 0.01%)</title><rect x="45.1428%" y="469" width="0.0102%" height="15" fill="rgb(214,203,32)" fg:x="17668" fg:w="4"/><text x="45.3928%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="45.1428%" y="453" width="0.0102%" height="15" fill="rgb(207,58,43)" fg:x="17668" fg:w="4"/><text x="45.3928%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocBlitMap (5 samples, 0.01%)</title><rect x="45.1428%" y="485" width="0.0128%" height="15" fill="rgb(215,193,15)" fg:x="17668" fg:w="5"/><text x="45.3928%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_InvalidateMap (4 samples, 0.01%)</title><rect x="45.1709%" y="485" width="0.0102%" height="15" fill="rgb(232,15,44)" fg:x="17679" fg:w="4"/><text x="45.4209%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetSurfaceBlendMode_REAL (14 samples, 0.04%)</title><rect x="45.1812%" y="485" width="0.0358%" height="15" fill="rgb(212,3,48)" fg:x="17683" fg:w="14"/><text x="45.4312%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_calloc_REAL (10 samples, 0.03%)</title><rect x="45.2169%" y="485" width="0.0256%" height="15" fill="rgb(218,128,7)" fg:x="17697" fg:w="10"/><text x="45.4669%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="45.2323%" y="469" width="0.0102%" height="15" fill="rgb(226,216,39)" fg:x="17703" fg:w="4"/><text x="45.4823%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRGBSurfaceWithFormat_REAL (49 samples, 0.13%)</title><rect x="45.1249%" y="501" width="0.1252%" height="15" fill="rgb(243,47,51)" fg:x="17661" fg:w="49"/><text x="45.3749%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRGBSurfaceWithFormatFrom_REAL (59 samples, 0.15%)</title><rect x="45.1045%" y="517" width="0.1507%" height="15" fill="rgb(241,183,40)" fg:x="17653" fg:w="59"/><text x="45.3545%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRGBSurfaceWithFormat_REAL (5 samples, 0.01%)</title><rect x="45.2553%" y="517" width="0.0128%" height="15" fill="rgb(231,217,32)" fg:x="17712" fg:w="5"/><text x="45.5053%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.02%)</title><rect x="45.2731%" y="501" width="0.0153%" height="15" fill="rgb(229,61,38)" fg:x="17719" fg:w="6"/><text x="45.5231%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_malloc_REAL (22 samples, 0.06%)</title><rect x="45.2680%" y="517" width="0.0562%" height="15" fill="rgb(225,210,5)" fg:x="17717" fg:w="22"/><text x="45.5180%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.04%)</title><rect x="45.2885%" y="501" width="0.0358%" height="15" fill="rgb(231,79,45)" fg:x="17725" fg:w="14"/><text x="45.5385%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (13 samples, 0.03%)</title><rect x="45.2910%" y="485" width="0.0332%" height="15" fill="rgb(224,100,7)" fg:x="17726" fg:w="13"/><text x="45.5410%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="45.3242%" y="517" width="0.0102%" height="15" fill="rgb(241,198,18)" fg:x="17739" fg:w="4"/><text x="45.5742%" y="527.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`AllocateAlignedPixels (99 samples, 0.25%)</title><rect x="45.0866%" y="533" width="0.2530%" height="15" fill="rgb(252,97,53)" fg:x="17646" fg:w="99"/><text x="45.3366%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16 (31 samples, 0.08%)</title><rect x="45.3472%" y="533" width="0.0792%" height="15" fill="rgb(220,88,7)" fg:x="17748" fg:w="31"/><text x="45.5972%" y="543.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`Create_Surface_Blended (139 samples, 0.36%)</title><rect x="45.0738%" y="549" width="0.3552%" height="15" fill="rgb(213,176,14)" fg:x="17641" fg:w="139"/><text x="45.3238%" y="559.50"></text></g><g><title>libsystem_c.dylib`__srefill1 (31 samples, 0.08%)</title><rect x="45.7535%" y="389" width="0.0792%" height="15" fill="rgb(246,73,7)" fg:x="17907" fg:w="31"/><text x="46.0035%" y="399.50"></text></g><g><title>libsystem_c.dylib`_sread (31 samples, 0.08%)</title><rect x="45.7535%" y="373" width="0.0792%" height="15" fill="rgb(245,64,36)" fg:x="17907" fg:w="31"/><text x="46.0035%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__read_nocancel (31 samples, 0.08%)</title><rect x="45.7535%" y="357" width="0.0792%" height="15" fill="rgb(245,80,10)" fg:x="17907" fg:w="31"/><text x="46.0035%" y="367.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_Seek (47 samples, 0.12%)</title><rect x="45.7509%" y="469" width="0.1201%" height="15" fill="rgb(232,107,50)" fg:x="17906" fg:w="47"/><text x="46.0009%" y="479.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (47 samples, 0.12%)</title><rect x="45.7509%" y="453" width="0.1201%" height="15" fill="rgb(253,3,0)" fg:x="17906" fg:w="47"/><text x="46.0009%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (46 samples, 0.12%)</title><rect x="45.7535%" y="437" width="0.1175%" height="15" fill="rgb(212,99,53)" fg:x="17907" fg:w="46"/><text x="46.0035%" y="447.50"></text></g><g><title>libsystem_c.dylib`fseeko (46 samples, 0.12%)</title><rect x="45.7535%" y="421" width="0.1175%" height="15" fill="rgb(249,111,54)" fg:x="17907" fg:w="46"/><text x="46.0035%" y="431.50"></text></g><g><title>libsystem_c.dylib`_fseeko (46 samples, 0.12%)</title><rect x="45.7535%" y="405" width="0.1175%" height="15" fill="rgb(249,55,30)" fg:x="17907" fg:w="46"/><text x="46.0035%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (15 samples, 0.04%)</title><rect x="45.8327%" y="389" width="0.0383%" height="15" fill="rgb(237,47,42)" fg:x="17938" fg:w="15"/><text x="46.0827%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_read (5 samples, 0.01%)</title><rect x="45.8736%" y="437" width="0.0128%" height="15" fill="rgb(211,20,18)" fg:x="17954" fg:w="5"/><text x="46.1236%" y="447.50"></text></g><g><title>libsystem_c.dylib`fread (5 samples, 0.01%)</title><rect x="45.8736%" y="421" width="0.0128%" height="15" fill="rgb(231,203,46)" fg:x="17954" fg:w="5"/><text x="46.1236%" y="431.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_EnterFrame (9 samples, 0.02%)</title><rect x="45.8736%" y="453" width="0.0230%" height="15" fill="rgb(237,142,3)" fg:x="17954" fg:w="9"/><text x="46.1236%" y="463.50"></text></g><g><title>libfreetype.6.dylib`TT_Access_Glyph_Frame (15 samples, 0.04%)</title><rect x="45.8710%" y="469" width="0.0383%" height="15" fill="rgb(241,107,1)" fg:x="17953" fg:w="15"/><text x="46.1210%" y="479.50"></text></g><g><title>libfreetype.6.dylib`Ins_MIRP (5 samples, 0.01%)</title><rect x="46.0192%" y="421" width="0.0128%" height="15" fill="rgb(229,83,13)" fg:x="18011" fg:w="5"/><text x="46.2692%" y="431.50"></text></g><g><title>libfreetype.6.dylib`TT_RunIns (48 samples, 0.12%)</title><rect x="45.9323%" y="437" width="0.1226%" height="15" fill="rgb(241,91,40)" fg:x="17977" fg:w="48"/><text x="46.1823%" y="447.50"></text></g><g><title>libfreetype.6.dylib`iup_worker_interpolate_ (5 samples, 0.01%)</title><rect x="46.0422%" y="421" width="0.0128%" height="15" fill="rgb(225,3,45)" fg:x="18020" fg:w="5"/><text x="46.2922%" y="431.50"></text></g><g><title>libfreetype.6.dylib`TT_Hint_Glyph (56 samples, 0.14%)</title><rect x="45.9145%" y="453" width="0.1431%" height="15" fill="rgb(244,223,14)" fg:x="17970" fg:w="56"/><text x="46.1645%" y="463.50"></text></g><g><title>libfreetype.6.dylib`TT_Process_Simple_Glyph (57 samples, 0.15%)</title><rect x="45.9145%" y="469" width="0.1456%" height="15" fill="rgb(224,124,37)" fg:x="17970" fg:w="57"/><text x="46.1645%" y="479.50"></text></g><g><title>libsystem_c.dylib`fseeko (5 samples, 0.01%)</title><rect x="46.0703%" y="405" width="0.0128%" height="15" fill="rgb(251,171,30)" fg:x="18031" fg:w="5"/><text x="46.3203%" y="415.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_ReadUShort (11 samples, 0.03%)</title><rect x="46.0627%" y="453" width="0.0281%" height="15" fill="rgb(236,46,54)" fg:x="18028" fg:w="11"/><text x="46.3127%" y="463.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (8 samples, 0.02%)</title><rect x="46.0703%" y="437" width="0.0204%" height="15" fill="rgb(245,213,5)" fg:x="18031" fg:w="8"/><text x="46.3203%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (8 samples, 0.02%)</title><rect x="46.0703%" y="421" width="0.0204%" height="15" fill="rgb(230,144,27)" fg:x="18031" fg:w="8"/><text x="46.3203%" y="431.50"></text></g><g><title>libsystem_c.dylib`__srefill1 (28 samples, 0.07%)</title><rect x="46.0984%" y="373" width="0.0715%" height="15" fill="rgb(220,86,6)" fg:x="18042" fg:w="28"/><text x="46.3484%" y="383.50"></text></g><g><title>libsystem_c.dylib`_sread (28 samples, 0.07%)</title><rect x="46.0984%" y="357" width="0.0715%" height="15" fill="rgb(240,20,13)" fg:x="18042" fg:w="28"/><text x="46.3484%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__read_nocancel (28 samples, 0.07%)</title><rect x="46.0984%" y="341" width="0.0715%" height="15" fill="rgb(217,89,34)" fg:x="18042" fg:w="28"/><text x="46.3484%" y="351.50"></text></g><g><title>libsystem_c.dylib`fseeko (41 samples, 0.10%)</title><rect x="46.0933%" y="405" width="0.1048%" height="15" fill="rgb(229,13,5)" fg:x="18040" fg:w="41"/><text x="46.3433%" y="415.50"></text></g><g><title>libsystem_c.dylib`_fseeko (41 samples, 0.10%)</title><rect x="46.0933%" y="389" width="0.1048%" height="15" fill="rgb(244,67,35)" fg:x="18040" fg:w="41"/><text x="46.3433%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (10 samples, 0.03%)</title><rect x="46.1725%" y="373" width="0.0256%" height="15" fill="rgb(221,40,2)" fg:x="18071" fg:w="10"/><text x="46.4225%" y="383.50"></text></g><g><title>libfreetype.6.dylib`tt_face_get_metrics (55 samples, 0.14%)</title><rect x="46.0601%" y="469" width="0.1405%" height="15" fill="rgb(237,157,21)" fg:x="18027" fg:w="55"/><text x="46.3101%" y="479.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_Seek (43 samples, 0.11%)</title><rect x="46.0908%" y="453" width="0.1099%" height="15" fill="rgb(222,94,11)" fg:x="18039" fg:w="43"/><text x="46.3408%" y="463.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (43 samples, 0.11%)</title><rect x="46.0908%" y="437" width="0.1099%" height="15" fill="rgb(249,113,6)" fg:x="18039" fg:w="43"/><text x="46.3408%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (42 samples, 0.11%)</title><rect x="46.0933%" y="421" width="0.1073%" height="15" fill="rgb(238,137,36)" fg:x="18040" fg:w="42"/><text x="46.3433%" y="431.50"></text></g><g><title>libfreetype.6.dylib`load_truetype_glyph (184 samples, 0.47%)</title><rect x="45.7330%" y="485" width="0.4701%" height="15" fill="rgb(210,102,26)" fg:x="17899" fg:w="184"/><text x="45.9830%" y="495.50"></text></g><g><title>libfreetype.6.dylib`FT_Load_Glyph (191 samples, 0.49%)</title><rect x="45.7203%" y="517" width="0.4880%" height="15" fill="rgb(218,30,30)" fg:x="17894" fg:w="191"/><text x="45.9703%" y="527.50"></text></g><g><title>libfreetype.6.dylib`tt_glyph_load (188 samples, 0.48%)</title><rect x="45.7279%" y="501" width="0.4804%" height="15" fill="rgb(214,67,26)" fg:x="17897" fg:w="188"/><text x="45.9779%" y="511.50"></text></g><g><title>libfreetype.6.dylib`gray_conic_to (45 samples, 0.11%)</title><rect x="46.2747%" y="421" width="0.1150%" height="15" fill="rgb(251,9,53)" fg:x="18111" fg:w="45"/><text x="46.5247%" y="431.50"></text></g><g><title>libfreetype.6.dylib`gray_render_line (36 samples, 0.09%)</title><rect x="46.2977%" y="405" width="0.0920%" height="15" fill="rgb(228,204,25)" fg:x="18120" fg:w="36"/><text x="46.5477%" y="415.50"></text></g><g><title>libfreetype.6.dylib`gray_set_cell (16 samples, 0.04%)</title><rect x="46.3488%" y="389" width="0.0409%" height="15" fill="rgb(207,153,8)" fg:x="18140" fg:w="16"/><text x="46.5988%" y="399.50"></text></g><g><title>libfreetype.6.dylib`gray_render_line (11 samples, 0.03%)</title><rect x="46.3897%" y="405" width="0.0281%" height="15" fill="rgb(242,9,16)" fg:x="18156" fg:w="11"/><text x="46.6397%" y="415.50"></text></g><g><title>libfreetype.6.dylib`gray_set_cell (6 samples, 0.02%)</title><rect x="46.4025%" y="389" width="0.0153%" height="15" fill="rgb(217,211,10)" fg:x="18161" fg:w="6"/><text x="46.6525%" y="399.50"></text></g><g><title>libfreetype.6.dylib`gray_line_to (12 samples, 0.03%)</title><rect x="46.3897%" y="421" width="0.0307%" height="15" fill="rgb(219,228,52)" fg:x="18156" fg:w="12"/><text x="46.6397%" y="431.50"></text></g><g><title>libfreetype.6.dylib`FT_Outline_Decompose (67 samples, 0.17%)</title><rect x="46.2594%" y="437" width="0.1712%" height="15" fill="rgb(231,92,29)" fg:x="18105" fg:w="67"/><text x="46.5094%" y="447.50"></text></g><g><title>libfreetype.6.dylib`gray_convert_glyph_inner (68 samples, 0.17%)</title><rect x="46.2594%" y="453" width="0.1737%" height="15" fill="rgb(232,8,23)" fg:x="18105" fg:w="68"/><text x="46.5094%" y="463.50"></text></g><g><title>libfreetype.6.dylib`FT_Render_Glyph_Internal (98 samples, 0.25%)</title><rect x="46.2083%" y="517" width="0.2504%" height="15" fill="rgb(216,211,34)" fg:x="18085" fg:w="98"/><text x="46.4583%" y="527.50"></text></g><g><title>libfreetype.6.dylib`ft_smooth_render (97 samples, 0.25%)</title><rect x="46.2108%" y="501" width="0.2478%" height="15" fill="rgb(236,151,0)" fg:x="18086" fg:w="97"/><text x="46.4608%" y="511.50"></text></g><g><title>libfreetype.6.dylib`gray_raster_render (95 samples, 0.24%)</title><rect x="46.2160%" y="485" width="0.2427%" height="15" fill="rgb(209,168,3)" fg:x="18088" fg:w="95"/><text x="46.4660%" y="495.50"></text></g><g><title>libfreetype.6.dylib`gray_convert_glyph (95 samples, 0.24%)</title><rect x="46.2160%" y="469" width="0.2427%" height="15" fill="rgb(208,129,28)" fg:x="18088" fg:w="95"/><text x="46.4660%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`sigprocmask (10 samples, 0.03%)</title><rect x="46.4331%" y="453" width="0.0256%" height="15" fill="rgb(229,78,22)" fg:x="18173" fg:w="10"/><text x="46.6831%" y="463.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`Load_Glyph (291 samples, 0.74%)</title><rect x="45.7177%" y="533" width="0.7435%" height="15" fill="rgb(228,187,13)" fg:x="17893" fg:w="291"/><text x="45.9677%" y="543.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`Render_Line (402 samples, 1.03%)</title><rect x="45.4443%" y="549" width="1.0271%" height="15" fill="rgb(240,119,24)" fg:x="17786" fg:w="402"/><text x="45.6943%" y="559.50"></text></g><g><title>libfreetype.6.dylib`FT_MulFix (4 samples, 0.01%)</title><rect x="46.5737%" y="469" width="0.0102%" height="15" fill="rgb(209,194,42)" fg:x="18228" fg:w="4"/><text x="46.8237%" y="479.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_ExitFrame (6 samples, 0.02%)</title><rect x="46.5839%" y="469" width="0.0153%" height="15" fill="rgb(247,200,46)" fg:x="18232" fg:w="6"/><text x="46.8339%" y="479.50"></text></g><g><title>libsystem_c.dylib`__srefill1 (28 samples, 0.07%)</title><rect x="46.5992%" y="389" width="0.0715%" height="15" fill="rgb(218,76,16)" fg:x="18238" fg:w="28"/><text x="46.8492%" y="399.50"></text></g><g><title>libsystem_c.dylib`_sread (28 samples, 0.07%)</title><rect x="46.5992%" y="373" width="0.0715%" height="15" fill="rgb(225,21,48)" fg:x="18238" fg:w="28"/><text x="46.8492%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__read_nocancel (27 samples, 0.07%)</title><rect x="46.6018%" y="357" width="0.0690%" height="15" fill="rgb(239,223,50)" fg:x="18239" fg:w="27"/><text x="46.8518%" y="367.50"></text></g><g><title>libsystem_c.dylib`_fseeko (44 samples, 0.11%)</title><rect x="46.5992%" y="405" width="0.1124%" height="15" fill="rgb(244,45,21)" fg:x="18238" fg:w="44"/><text x="46.8492%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (15 samples, 0.04%)</title><rect x="46.6733%" y="389" width="0.0383%" height="15" fill="rgb(232,33,43)" fg:x="18267" fg:w="15"/><text x="46.9233%" y="399.50"></text></g><g><title>libsystem_c.dylib`fseeko (46 samples, 0.12%)</title><rect x="46.5992%" y="421" width="0.1175%" height="15" fill="rgb(209,8,3)" fg:x="18238" fg:w="46"/><text x="46.8492%" y="431.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_Seek (47 samples, 0.12%)</title><rect x="46.5992%" y="469" width="0.1201%" height="15" fill="rgb(214,25,53)" fg:x="18238" fg:w="47"/><text x="46.8492%" y="479.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (47 samples, 0.12%)</title><rect x="46.5992%" y="453" width="0.1201%" height="15" fill="rgb(254,186,54)" fg:x="18238" fg:w="47"/><text x="46.8492%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (47 samples, 0.12%)</title><rect x="46.5992%" y="437" width="0.1201%" height="15" fill="rgb(208,174,49)" fg:x="18238" fg:w="47"/><text x="46.8492%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_read (4 samples, 0.01%)</title><rect x="46.7219%" y="437" width="0.0102%" height="15" fill="rgb(233,191,51)" fg:x="18286" fg:w="4"/><text x="46.9719%" y="447.50"></text></g><g><title>libsystem_c.dylib`fread (4 samples, 0.01%)</title><rect x="46.7219%" y="421" width="0.0102%" height="15" fill="rgb(222,134,10)" fg:x="18286" fg:w="4"/><text x="46.9719%" y="431.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (5 samples, 0.01%)</title><rect x="46.7321%" y="437" width="0.0128%" height="15" fill="rgb(230,226,20)" fg:x="18290" fg:w="5"/><text x="46.9821%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (5 samples, 0.01%)</title><rect x="46.7321%" y="421" width="0.0128%" height="15" fill="rgb(251,111,25)" fg:x="18290" fg:w="5"/><text x="46.9821%" y="431.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_EnterFrame (11 samples, 0.03%)</title><rect x="46.7219%" y="453" width="0.0281%" height="15" fill="rgb(224,40,46)" fg:x="18286" fg:w="11"/><text x="46.9719%" y="463.50"></text></g><g><title>libsystem_c.dylib`__srefill1 (16 samples, 0.04%)</title><rect x="46.7678%" y="373" width="0.0409%" height="15" fill="rgb(236,108,47)" fg:x="18304" fg:w="16"/><text x="47.0178%" y="383.50"></text></g><g><title>libsystem_c.dylib`_sread (16 samples, 0.04%)</title><rect x="46.7678%" y="357" width="0.0409%" height="15" fill="rgb(234,93,0)" fg:x="18304" fg:w="16"/><text x="47.0178%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__read_nocancel (16 samples, 0.04%)</title><rect x="46.7678%" y="341" width="0.0409%" height="15" fill="rgb(224,213,32)" fg:x="18304" fg:w="16"/><text x="47.0178%" y="351.50"></text></g><g><title>libsystem_c.dylib`_fseeko (33 samples, 0.08%)</title><rect x="46.7627%" y="389" width="0.0843%" height="15" fill="rgb(251,11,48)" fg:x="18302" fg:w="33"/><text x="47.0127%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (15 samples, 0.04%)</title><rect x="46.8087%" y="373" width="0.0383%" height="15" fill="rgb(236,173,5)" fg:x="18320" fg:w="15"/><text x="47.0587%" y="383.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_Seek (41 samples, 0.10%)</title><rect x="46.7500%" y="453" width="0.1048%" height="15" fill="rgb(230,95,12)" fg:x="18297" fg:w="41"/><text x="47.0000%" y="463.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (40 samples, 0.10%)</title><rect x="46.7525%" y="437" width="0.1022%" height="15" fill="rgb(232,209,1)" fg:x="18298" fg:w="40"/><text x="47.0025%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (40 samples, 0.10%)</title><rect x="46.7525%" y="421" width="0.1022%" height="15" fill="rgb(232,6,1)" fg:x="18298" fg:w="40"/><text x="47.0025%" y="431.50"></text></g><g><title>libsystem_c.dylib`fseeko (39 samples, 0.10%)</title><rect x="46.7551%" y="405" width="0.0996%" height="15" fill="rgb(210,224,50)" fg:x="18299" fg:w="39"/><text x="47.0051%" y="415.50"></text></g><g><title>libfreetype.6.dylib`TT_Access_Glyph_Frame (56 samples, 0.14%)</title><rect x="46.7193%" y="469" width="0.1431%" height="15" fill="rgb(228,127,35)" fg:x="18285" fg:w="56"/><text x="46.9693%" y="479.50"></text></g><g><title>libfreetype.6.dylib`TT_Load_Simple_Glyph (6 samples, 0.02%)</title><rect x="46.8624%" y="469" width="0.0153%" height="15" fill="rgb(245,102,45)" fg:x="18341" fg:w="6"/><text x="47.1124%" y="479.50"></text></g><g><title>libfreetype.6.dylib`Write_CVT (11 samples, 0.03%)</title><rect x="47.0208%" y="421" width="0.0281%" height="15" fill="rgb(214,1,49)" fg:x="18403" fg:w="11"/><text x="47.2708%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="47.0310%" y="405" width="0.0179%" height="15" fill="rgb(226,163,40)" fg:x="18407" fg:w="7"/><text x="47.2810%" y="415.50"></text></g><g><title>libfreetype.6.dylib`TT_RunIns (62 samples, 0.16%)</title><rect x="46.9007%" y="437" width="0.1584%" height="15" fill="rgb(239,212,28)" fg:x="18356" fg:w="62"/><text x="47.1507%" y="447.50"></text></g><g><title>libfreetype.6.dylib`iup_worker_interpolate_ (4 samples, 0.01%)</title><rect x="47.0489%" y="421" width="0.0102%" height="15" fill="rgb(220,20,13)" fg:x="18414" fg:w="4"/><text x="47.2989%" y="431.50"></text></g><g><title>libfreetype.6.dylib`TT_Process_Simple_Glyph (72 samples, 0.18%)</title><rect x="46.8777%" y="469" width="0.1840%" height="15" fill="rgb(210,164,35)" fg:x="18347" fg:w="72"/><text x="47.1277%" y="479.50"></text></g><g><title>libfreetype.6.dylib`TT_Hint_Glyph (71 samples, 0.18%)</title><rect x="46.8803%" y="453" width="0.1814%" height="15" fill="rgb(248,109,41)" fg:x="18348" fg:w="71"/><text x="47.1303%" y="463.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_ReadUShort (7 samples, 0.02%)</title><rect x="47.0617%" y="453" width="0.0179%" height="15" fill="rgb(238,23,50)" fg:x="18419" fg:w="7"/><text x="47.3117%" y="463.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (4 samples, 0.01%)</title><rect x="47.0693%" y="437" width="0.0102%" height="15" fill="rgb(211,48,49)" fg:x="18422" fg:w="4"/><text x="47.3193%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (4 samples, 0.01%)</title><rect x="47.0693%" y="421" width="0.0102%" height="15" fill="rgb(223,36,21)" fg:x="18422" fg:w="4"/><text x="47.3193%" y="431.50"></text></g><g><title>libsystem_c.dylib`fseeko (4 samples, 0.01%)</title><rect x="47.0693%" y="405" width="0.0102%" height="15" fill="rgb(207,123,46)" fg:x="18422" fg:w="4"/><text x="47.3193%" y="415.50"></text></g><g><title>libsystem_c.dylib`__srefill1 (24 samples, 0.06%)</title><rect x="47.0821%" y="373" width="0.0613%" height="15" fill="rgb(240,218,32)" fg:x="18427" fg:w="24"/><text x="47.3321%" y="383.50"></text></g><g><title>libsystem_c.dylib`_sread (24 samples, 0.06%)</title><rect x="47.0821%" y="357" width="0.0613%" height="15" fill="rgb(252,5,43)" fg:x="18427" fg:w="24"/><text x="47.3321%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__read_nocancel (24 samples, 0.06%)</title><rect x="47.0821%" y="341" width="0.0613%" height="15" fill="rgb(252,84,19)" fg:x="18427" fg:w="24"/><text x="47.3321%" y="351.50"></text></g><g><title>libfreetype.6.dylib`tt_face_get_metrics (46 samples, 0.12%)</title><rect x="47.0617%" y="469" width="0.1175%" height="15" fill="rgb(243,152,39)" fg:x="18419" fg:w="46"/><text x="47.3117%" y="479.50"></text></g><g><title>libfreetype.6.dylib`FT_Stream_Seek (39 samples, 0.10%)</title><rect x="47.0796%" y="453" width="0.0996%" height="15" fill="rgb(234,160,15)" fg:x="18426" fg:w="39"/><text x="47.3296%" y="463.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`RWread (39 samples, 0.10%)</title><rect x="47.0796%" y="437" width="0.0996%" height="15" fill="rgb(237,34,20)" fg:x="18426" fg:w="39"/><text x="47.3296%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`stdio_seek (39 samples, 0.10%)</title><rect x="47.0796%" y="421" width="0.0996%" height="15" fill="rgb(229,97,13)" fg:x="18426" fg:w="39"/><text x="47.3296%" y="431.50"></text></g><g><title>libsystem_c.dylib`fseeko (39 samples, 0.10%)</title><rect x="47.0796%" y="405" width="0.0996%" height="15" fill="rgb(234,71,50)" fg:x="18426" fg:w="39"/><text x="47.3296%" y="415.50"></text></g><g><title>libsystem_c.dylib`_fseeko (39 samples, 0.10%)</title><rect x="47.0796%" y="389" width="0.0996%" height="15" fill="rgb(253,155,4)" fg:x="18426" fg:w="39"/><text x="47.3296%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (13 samples, 0.03%)</title><rect x="47.1460%" y="373" width="0.0332%" height="15" fill="rgb(222,185,37)" fg:x="18452" fg:w="13"/><text x="47.3960%" y="383.50"></text></g><g><title>libfreetype.6.dylib`load_truetype_glyph (240 samples, 0.61%)</title><rect x="46.5711%" y="485" width="0.6132%" height="15" fill="rgb(251,177,13)" fg:x="18227" fg:w="240"/><text x="46.8211%" y="495.50"></text></g><g><title>libfreetype.6.dylib`tt_glyph_load (247 samples, 0.63%)</title><rect x="46.5686%" y="501" width="0.6311%" height="15" fill="rgb(250,179,40)" fg:x="18226" fg:w="247"/><text x="46.8186%" y="511.50"></text></g><g><title>libfreetype.6.dylib`tt_loader_init (5 samples, 0.01%)</title><rect x="47.1869%" y="485" width="0.0128%" height="15" fill="rgb(242,44,2)" fg:x="18468" fg:w="5"/><text x="47.4369%" y="495.50"></text></g><g><title>libfreetype.6.dylib`TT_Load_Context (4 samples, 0.01%)</title><rect x="47.1894%" y="469" width="0.0102%" height="15" fill="rgb(216,177,13)" fg:x="18469" fg:w="4"/><text x="47.4394%" y="479.50"></text></g><g><title>libfreetype.6.dylib`FT_Load_Glyph (253 samples, 0.65%)</title><rect x="46.5583%" y="517" width="0.6464%" height="15" fill="rgb(216,106,43)" fg:x="18222" fg:w="253"/><text x="46.8083%" y="527.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`Load_Glyph (256 samples, 0.65%)</title><rect x="46.5532%" y="533" width="0.6541%" height="15" fill="rgb(216,183,2)" fg:x="18220" fg:w="256"/><text x="46.8032%" y="543.50"></text></g><g><title>libharfbuzz.0.dylib`DYLD-STUB$$calloc (5 samples, 0.01%)</title><rect x="47.2073%" y="533" width="0.0128%" height="15" fill="rgb(249,75,3)" fg:x="18476" fg:w="5"/><text x="47.4573%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="47.2610%" y="485" width="0.0204%" height="15" fill="rgb(219,67,39)" fg:x="18497" fg:w="8"/><text x="47.5110%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (5 samples, 0.01%)</title><rect x="47.3325%" y="437" width="0.0128%" height="15" fill="rgb(253,228,2)" fg:x="18525" fg:w="5"/><text x="47.5825%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.03%)</title><rect x="47.3453%" y="437" width="0.0332%" height="15" fill="rgb(235,138,27)" fg:x="18530" fg:w="13"/><text x="47.5953%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (104 samples, 0.27%)</title><rect x="47.2891%" y="469" width="0.2657%" height="15" fill="rgb(236,97,51)" fg:x="18508" fg:w="104"/><text x="47.5391%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (98 samples, 0.25%)</title><rect x="47.3044%" y="453" width="0.2504%" height="15" fill="rgb(240,80,30)" fg:x="18514" fg:w="98"/><text x="47.5544%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (69 samples, 0.18%)</title><rect x="47.3785%" y="437" width="0.1763%" height="15" fill="rgb(230,178,19)" fg:x="18543" fg:w="69"/><text x="47.6285%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.03%)</title><rect x="47.5241%" y="421" width="0.0307%" height="15" fill="rgb(210,190,27)" fg:x="18600" fg:w="12"/><text x="47.7741%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (107 samples, 0.27%)</title><rect x="47.2865%" y="485" width="0.2734%" height="15" fill="rgb(222,107,31)" fg:x="18507" fg:w="107"/><text x="47.5365%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::enlarge (125 samples, 0.32%)</title><rect x="47.2456%" y="501" width="0.3194%" height="15" fill="rgb(216,127,34)" fg:x="18491" fg:w="125"/><text x="47.4956%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::add (133 samples, 0.34%)</title><rect x="47.2354%" y="517" width="0.3398%" height="15" fill="rgb(234,116,52)" fg:x="18487" fg:w="133"/><text x="47.4854%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.01%)</title><rect x="47.5650%" y="501" width="0.0102%" height="15" fill="rgb(222,124,15)" fg:x="18616" fg:w="4"/><text x="47.8150%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_add_utf8 (140 samples, 0.36%)</title><rect x="47.2278%" y="533" width="0.3577%" height="15" fill="rgb(231,179,28)" fg:x="18484" fg:w="140"/><text x="47.4778%" y="543.50"></text></g><g><title>libharfbuzz.0.dylib`hb_unicode_funcs_destroy (4 samples, 0.01%)</title><rect x="47.5957%" y="517" width="0.0102%" height="15" fill="rgb(226,93,45)" fg:x="18628" fg:w="4"/><text x="47.8457%" y="527.50"></text></g><g><title>libharfbuzz.0.dylib`hb_unicode_funcs_get_default (4 samples, 0.01%)</title><rect x="47.6059%" y="517" width="0.0102%" height="15" fill="rgb(215,8,51)" fg:x="18632" fg:w="4"/><text x="47.8559%" y="527.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_create (17 samples, 0.04%)</title><rect x="47.5855%" y="533" width="0.0434%" height="15" fill="rgb(223,106,5)" fg:x="18624" fg:w="17"/><text x="47.8355%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="47.6187%" y="517" width="0.0102%" height="15" fill="rgb(250,191,5)" fg:x="18637" fg:w="4"/><text x="47.8687%" y="527.50"></text></g><g><title>libharfbuzz.0.dylib`hb_unicode_funcs_destroy (4 samples, 0.01%)</title><rect x="47.6315%" y="517" width="0.0102%" height="15" fill="rgb(242,132,44)" fg:x="18642" fg:w="4"/><text x="47.8815%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.02%)</title><rect x="47.6545%" y="517" width="0.0153%" height="15" fill="rgb(251,152,29)" fg:x="18651" fg:w="6"/><text x="47.9045%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (11 samples, 0.03%)</title><rect x="47.7004%" y="501" width="0.0281%" height="15" fill="rgb(218,179,5)" fg:x="18669" fg:w="11"/><text x="47.9504%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.03%)</title><rect x="47.8129%" y="485" width="0.0281%" height="15" fill="rgb(227,67,19)" fg:x="18713" fg:w="11"/><text x="48.0629%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (73 samples, 0.19%)</title><rect x="47.6698%" y="517" width="0.1865%" height="15" fill="rgb(233,119,31)" fg:x="18657" fg:w="73"/><text x="47.9198%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (49 samples, 0.13%)</title><rect x="47.7311%" y="501" width="0.1252%" height="15" fill="rgb(241,120,22)" fg:x="18681" fg:w="49"/><text x="47.9811%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.02%)</title><rect x="47.8410%" y="485" width="0.0153%" height="15" fill="rgb(224,102,30)" fg:x="18724" fg:w="6"/><text x="48.0910%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_destroy (102 samples, 0.26%)</title><rect x="47.6289%" y="533" width="0.2606%" height="15" fill="rgb(210,164,37)" fg:x="18641" fg:w="102"/><text x="47.8789%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13 samples, 0.03%)</title><rect x="47.8563%" y="517" width="0.0332%" height="15" fill="rgb(226,191,16)" fg:x="18730" fg:w="13"/><text x="48.1063%" y="527.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::enter (4 samples, 0.01%)</title><rect x="47.9023%" y="533" width="0.0102%" height="15" fill="rgb(214,40,45)" fg:x="18748" fg:w="4"/><text x="48.1523%" y="543.50"></text></g><g><title>libharfbuzz.0.dylib`OT::FeatureVariations::find_index (4 samples, 0.01%)</title><rect x="47.9764%" y="485" width="0.0102%" height="15" fill="rgb(244,29,26)" fg:x="18777" fg:w="4"/><text x="48.2264%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`_hb_graphite2_shaper_face_data_create (4 samples, 0.01%)</title><rect x="47.9943%" y="485" width="0.0102%" height="15" fill="rgb(216,16,5)" fg:x="18784" fg:w="4"/><text x="48.2443%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`get_gsubgpos_table(hb_face_t*, unsigned int) (5 samples, 0.01%)</title><rect x="48.0045%" y="485" width="0.0128%" height="15" fill="rgb(249,76,35)" fg:x="18788" fg:w="5"/><text x="48.2545%" y="495.50"></text></g><g><title>libfreetype.6.dylib`tt_face_load_any (34 samples, 0.09%)</title><rect x="48.0377%" y="453" width="0.0869%" height="15" fill="rgb(207,11,44)" fg:x="18801" fg:w="34"/><text x="48.2877%" y="463.50"></text></g><g><title>libfreetype.6.dylib`ft_service_list_lookup (7 samples, 0.02%)</title><rect x="48.1425%" y="421" width="0.0179%" height="15" fill="rgb(228,190,49)" fg:x="18842" fg:w="7"/><text x="48.3925%" y="431.50"></text></g><g><title>libfreetype.6.dylib`DYLD-STUB$$strcmp (9 samples, 0.02%)</title><rect x="48.1629%" y="405" width="0.0230%" height="15" fill="rgb(214,173,12)" fg:x="18850" fg:w="9"/><text x="48.4129%" y="415.50"></text></g><g><title>libfreetype.6.dylib`FT_Get_Module (6 samples, 0.02%)</title><rect x="48.1859%" y="405" width="0.0153%" height="15" fill="rgb(218,26,35)" fg:x="18859" fg:w="6"/><text x="48.4359%" y="415.50"></text></g><g><title>libfreetype.6.dylib`tt_get_interface (51 samples, 0.13%)</title><rect x="48.1604%" y="421" width="0.1303%" height="15" fill="rgb(220,200,19)" fg:x="18849" fg:w="51"/><text x="48.4104%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (32 samples, 0.08%)</title><rect x="48.2089%" y="405" width="0.0818%" height="15" fill="rgb(239,95,49)" fg:x="18868" fg:w="32"/><text x="48.4589%" y="415.50"></text></g><g><title>libfreetype.6.dylib`FT_Load_Sfnt_Table (67 samples, 0.17%)</title><rect x="48.1297%" y="437" width="0.1712%" height="15" fill="rgb(235,85,53)" fg:x="18837" fg:w="67"/><text x="48.3797%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (4 samples, 0.01%)</title><rect x="48.2907%" y="421" width="0.0102%" height="15" fill="rgb(233,133,31)" fg:x="18900" fg:w="4"/><text x="48.5407%" y="431.50"></text></g><g><title>libharfbuzz.0.dylib`hb_lazy_loader_t&lt;hb_graphite2_face_data_t, hb_shaper_lazy_loader_t&lt;hb_face_t, 1u, hb_graphite2_face_data_t&gt;, hb_face_t, 1u, hb_graphite2_face_data_t&gt;::get_stored (117 samples, 0.30%)</title><rect x="48.0173%" y="485" width="0.2989%" height="15" fill="rgb(218,25,20)" fg:x="18793" fg:w="117"/><text x="48.2673%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`_hb_graphite2_shaper_face_data_create (115 samples, 0.29%)</title><rect x="48.0224%" y="469" width="0.2938%" height="15" fill="rgb(252,210,38)" fg:x="18795" fg:w="115"/><text x="48.2724%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`_hb_ft_reference_table(hb_face_t*, unsigned int, void*) (73 samples, 0.19%)</title><rect x="48.1297%" y="453" width="0.1865%" height="15" fill="rgb(242,134,21)" fg:x="18837" fg:w="73"/><text x="48.3797%" y="463.50"></text></g><g><title>libfreetype.6.dylib`tt_get_interface (4 samples, 0.01%)</title><rect x="48.3060%" y="437" width="0.0102%" height="15" fill="rgb(213,28,48)" fg:x="18906" fg:w="4"/><text x="48.5560%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_lazy_loader_t&lt;hb_shaper_entry_t, hb_shapers_lazy_loader_t, void, 0u, hb_shaper_entry_t&gt;::get_stored (4 samples, 0.01%)</title><rect x="48.3213%" y="485" width="0.0102%" height="15" fill="rgb(250,196,2)" fg:x="18912" fg:w="4"/><text x="48.5713%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`OT::FeatureVariations::find_index (5 samples, 0.01%)</title><rect x="48.3315%" y="469" width="0.0128%" height="15" fill="rgb(227,5,17)" fg:x="18916" fg:w="5"/><text x="48.5815%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`get_gsubgpos_table(hb_face_t*, unsigned int) (11 samples, 0.03%)</title><rect x="48.3443%" y="469" width="0.0281%" height="15" fill="rgb(221,226,24)" fg:x="18921" fg:w="11"/><text x="48.5943%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_plan_key_t::init (169 samples, 0.43%)</title><rect x="47.9585%" y="501" width="0.4318%" height="15" fill="rgb(211,5,48)" fg:x="18770" fg:w="169"/><text x="48.2085%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_ot_layout_table_find_feature_variations (23 samples, 0.06%)</title><rect x="48.3315%" y="485" width="0.0588%" height="15" fill="rgb(219,150,6)" fg:x="18916" fg:w="23"/><text x="48.5815%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`hb_lazy_loader_t&lt;OT::GSUB_accelerator_t, hb_face_lazy_loader_t&lt;OT::GSUB_accelerator_t, 25u&gt;, hb_face_t, 25u, OT::GSUB_accelerator_t&gt;::get_stored (4 samples, 0.01%)</title><rect x="48.3801%" y="469" width="0.0102%" height="15" fill="rgb(251,46,16)" fg:x="18935" fg:w="4"/><text x="48.6301%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_plan_key_t::user_features_match (4 samples, 0.01%)</title><rect x="48.3903%" y="501" width="0.0102%" height="15" fill="rgb(220,204,40)" fg:x="18939" fg:w="4"/><text x="48.6403%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_plan_create_cached2 (183 samples, 0.47%)</title><rect x="47.9355%" y="517" width="0.4676%" height="15" fill="rgb(211,85,2)" fg:x="18761" fg:w="183"/><text x="48.1855%" y="527.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_plan_destroy (4 samples, 0.01%)</title><rect x="48.4031%" y="517" width="0.0102%" height="15" fill="rgb(229,17,7)" fg:x="18944" fg:w="4"/><text x="48.6531%" y="527.50"></text></g><g><title>libharfbuzz.0.dylib`OT::Layout::GPOS::position_finish_offsets (4 samples, 0.01%)</title><rect x="48.6100%" y="485" width="0.0102%" height="15" fill="rgb(239,72,28)" fg:x="19025" fg:w="4"/><text x="48.8600%" y="495.50"></text></g><g><title>libfreetype.6.dylib`FT_Get_Char_Index (7 samples, 0.02%)</title><rect x="48.6841%" y="469" width="0.0179%" height="15" fill="rgb(230,47,54)" fg:x="19054" fg:w="7"/><text x="48.9341%" y="479.50"></text></g><g><title>libfreetype.6.dylib`tt_cmap4_char_index (21 samples, 0.05%)</title><rect x="48.7352%" y="437" width="0.0537%" height="15" fill="rgb(214,50,8)" fg:x="19074" fg:w="21"/><text x="48.9852%" y="447.50"></text></g><g><title>libfreetype.6.dylib`tt_cmap4_char_map_binary (19 samples, 0.05%)</title><rect x="48.7404%" y="421" width="0.0485%" height="15" fill="rgb(216,198,43)" fg:x="19076" fg:w="19"/><text x="48.9904%" y="431.50"></text></g><g><title>libfreetype.6.dylib`FT_Get_Char_Index (27 samples, 0.07%)</title><rect x="48.7301%" y="453" width="0.0690%" height="15" fill="rgb(234,20,35)" fg:x="19072" fg:w="27"/><text x="48.9801%" y="463.50"></text></g><g><title>libfreetype.6.dylib`tt_cmap4_char_map_binary (4 samples, 0.01%)</title><rect x="48.7889%" y="437" width="0.0102%" height="15" fill="rgb(254,45,19)" fg:x="19095" fg:w="4"/><text x="49.0389%" y="447.50"></text></g><g><title>libfreetype.6.dylib`tt_cmap4_char_index (4 samples, 0.01%)</title><rect x="48.7991%" y="453" width="0.0102%" height="15" fill="rgb(219,14,44)" fg:x="19099" fg:w="4"/><text x="49.0491%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_ft_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*) (41 samples, 0.10%)</title><rect x="48.7250%" y="469" width="0.1048%" height="15" fill="rgb(217,220,26)" fg:x="19070" fg:w="41"/><text x="48.9750%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (8 samples, 0.02%)</title><rect x="48.8093%" y="453" width="0.0204%" height="15" fill="rgb(213,158,28)" fg:x="19103" fg:w="8"/><text x="49.0593%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`_hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*) (77 samples, 0.20%)</title><rect x="48.6356%" y="485" width="0.1967%" height="15" fill="rgb(252,51,52)" fg:x="19035" fg:w="77"/><text x="48.8856%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::hb_aat_apply_context_t::hb_aat_apply_context_t (11 samples, 0.03%)</title><rect x="48.8400%" y="469" width="0.0281%" height="15" fill="rgb(246,89,16)" fg:x="19115" fg:w="11"/><text x="49.0900%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_lazy_loader_t&lt;OT::GDEF_accelerator_t, hb_face_lazy_loader_t&lt;OT::GDEF_accelerator_t, 24u&gt;, hb_face_t, 24u, OT::GDEF_accelerator_t&gt;::get_stored (6 samples, 0.02%)</title><rect x="48.8528%" y="453" width="0.0153%" height="15" fill="rgb(216,158,49)" fg:x="19120" fg:w="6"/><text x="49.1028%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LigatureSubtable&lt;AAT::ExtendedTypes&gt;::driver_context_t::transition(AAT::StateTableDriver&lt;AAT::ExtendedTypes, AAT::LigatureEntry&lt;true&gt;::EntryData&gt;*, AAT::Entry&lt;AAT::LigatureEntry (11 samples, 0.03%)</title><rect x="48.9345%" y="421" width="0.0281%" height="15" fill="rgb(236,107,19)" fg:x="19152" fg:w="11"/><text x="49.1845%" y="431.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::StateTable&lt;AAT::ExtendedTypes, AAT::LigatureEntry&lt;true&gt;::EntryData&gt;::get_entry (39 samples, 0.10%)</title><rect x="48.9678%" y="421" width="0.0996%" height="15" fill="rgb(228,185,30)" fg:x="19165" fg:w="39"/><text x="49.2178%" y="431.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::clear_output (11 samples, 0.03%)</title><rect x="49.0674%" y="421" width="0.0281%" height="15" fill="rgb(246,134,8)" fg:x="19204" fg:w="11"/><text x="49.3174%" y="431.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::sync (15 samples, 0.04%)</title><rect x="49.1083%" y="421" width="0.0383%" height="15" fill="rgb(214,143,50)" fg:x="19220" fg:w="15"/><text x="49.3583%" y="431.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::next_glyphs (6 samples, 0.02%)</title><rect x="49.1313%" y="405" width="0.0153%" height="15" fill="rgb(228,75,8)" fg:x="19229" fg:w="6"/><text x="49.3813%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LigatureSubtable&lt;AAT::ExtendedTypes&gt;::driver_context_t::transition(AAT::StateTableDriver&lt;AAT::ExtendedTypes, AAT::LigatureEntry&lt;true&gt;::EntryData&gt;*, AAT::Entry&lt;AAT::LigatureEntry (13 samples, 0.03%)</title><rect x="49.2335%" y="405" width="0.0332%" height="15" fill="rgb(207,175,4)" fg:x="19269" fg:w="13"/><text x="49.4835%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LookupSingle&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt; const* OT::VarSizedBinSearchArrayOf&lt;AAT::LookupSingle&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt;&gt;::bsearch&lt;unsigned int&gt; (64 samples, 0.16%)</title><rect x="49.3970%" y="373" width="0.1635%" height="15" fill="rgb(205,108,24)" fg:x="19333" fg:w="64"/><text x="49.6470%" y="383.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::Lookup&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt;::get_value (111 samples, 0.28%)</title><rect x="49.2897%" y="389" width="0.2836%" height="15" fill="rgb(244,120,49)" fg:x="19291" fg:w="111"/><text x="49.5397%" y="399.50"></text></g><g><title>libharfbuzz.0.dylib`OT::VarSizedBinSearchArrayOf&lt;AAT::LookupSingle&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt;&gt;::last_is_terminator (5 samples, 0.01%)</title><rect x="49.5605%" y="373" width="0.0128%" height="15" fill="rgb(223,47,38)" fg:x="19397" fg:w="5"/><text x="49.8105%" y="383.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LookupSegmentArray&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt; const* OT::VarSizedBinSearchArrayOf&lt;AAT::LookupSegmentArray&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt;&gt;::bsearch&lt;unsigned int&gt; (8 samples, 0.02%)</title><rect x="49.5733%" y="373" width="0.0204%" height="15" fill="rgb(229,179,11)" fg:x="19402" fg:w="8"/><text x="49.8233%" y="383.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LookupFormat4&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt;::get_value (13 samples, 0.03%)</title><rect x="49.5733%" y="389" width="0.0332%" height="15" fill="rgb(231,122,1)" fg:x="19402" fg:w="13"/><text x="49.8233%" y="399.50"></text></g><g><title>libharfbuzz.0.dylib`OT::VarSizedBinSearchArrayOf&lt;AAT::LookupSegmentArray&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt;&gt;::last_is_terminator (5 samples, 0.01%)</title><rect x="49.5937%" y="373" width="0.0128%" height="15" fill="rgb(245,119,9)" fg:x="19410" fg:w="5"/><text x="49.8437%" y="383.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::StateTable&lt;AAT::ExtendedTypes, AAT::LigatureEntry&lt;true&gt;::EntryData&gt;::get_class (142 samples, 0.36%)</title><rect x="49.2744%" y="405" width="0.3628%" height="15" fill="rgb(241,163,25)" fg:x="19285" fg:w="142"/><text x="49.5244%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LookupSingle&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt; const* OT::VarSizedBinSearchArrayOf&lt;AAT::LookupSingle&lt;OT::IntType&lt;unsigned short, 2u&gt;&gt;&gt;::bsearch&lt;unsigned int&gt; (11 samples, 0.03%)</title><rect x="49.6091%" y="389" width="0.0281%" height="15" fill="rgb(217,214,3)" fg:x="19416" fg:w="11"/><text x="49.8591%" y="399.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LigatureSubtable&lt;AAT::ExtendedTypes&gt;::apply (279 samples, 0.71%)</title><rect x="48.9269%" y="437" width="0.7129%" height="15" fill="rgb(240,86,28)" fg:x="19149" fg:w="279"/><text x="49.1769%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`void AAT::StateTableDriver&lt;AAT::ExtendedTypes, AAT::LigatureEntry&lt;true&gt;::EntryData&gt;::drive&lt;AAT::LigatureSubtable&lt;AAT::ExtendedTypes&gt;::driver_context_t&gt;(AAT::LigatureSubtable (193 samples, 0.49%)</title><rect x="49.1466%" y="421" width="0.4931%" height="15" fill="rgb(215,47,9)" fg:x="19235" fg:w="193"/><text x="49.3966%" y="431.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LigatureSubtable&lt;AAT::ExtendedTypes&gt;::driver_context_t::driver_context_t(AAT::LigatureSubtable (14 samples, 0.04%)</title><rect x="49.6397%" y="437" width="0.0358%" height="15" fill="rgb(252,25,45)" fg:x="19428" fg:w="14"/><text x="49.8897%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::message (13 samples, 0.03%)</title><rect x="49.6755%" y="437" width="0.0332%" height="15" fill="rgb(251,164,9)" fg:x="19442" fg:w="13"/><text x="49.9255%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::sync (4 samples, 0.01%)</title><rect x="49.7087%" y="437" width="0.0102%" height="15" fill="rgb(233,194,0)" fg:x="19455" fg:w="4"/><text x="49.9587%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::Chain&lt;AAT::ExtendedTypes&gt;::apply (332 samples, 0.85%)</title><rect x="48.8732%" y="453" width="0.8483%" height="15" fill="rgb(249,111,24)" fg:x="19128" fg:w="332"/><text x="49.1232%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::LigatureSubtable&lt;AAT::ExtendedTypes&gt;::apply (7 samples, 0.02%)</title><rect x="49.7215%" y="453" width="0.0179%" height="15" fill="rgb(250,223,3)" fg:x="19460" fg:w="7"/><text x="49.9715%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::hb_aat_apply_context_t::return_t AAT::ChainSubtable&lt;AAT::ExtendedTypes&gt;::dispatch&lt;AAT::hb_aat_apply_context_t&gt; (5 samples, 0.01%)</title><rect x="49.7394%" y="453" width="0.0128%" height="15" fill="rgb(236,178,37)" fg:x="19467" fg:w="5"/><text x="49.9894%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::mortmorx&lt;AAT::ExtendedTypes, 1836020344u&gt;::apply (361 samples, 0.92%)</title><rect x="48.8681%" y="469" width="0.9224%" height="15" fill="rgb(241,158,50)" fg:x="19126" fg:w="361"/><text x="49.1181%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`void hb_sanitize_context_t::set_object&lt;AAT::ChainSubtable&lt;AAT::ExtendedTypes&gt;&gt;(AAT::ChainSubtable (15 samples, 0.04%)</title><rect x="49.7522%" y="453" width="0.0383%" height="15" fill="rgb(213,121,41)" fg:x="19472" fg:w="15"/><text x="50.0022%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_aat_layout_compile_map(hb_aat_map_builder_t const*, hb_aat_map_t*) (4 samples, 0.01%)</title><rect x="49.8007%" y="469" width="0.0102%" height="15" fill="rgb(240,92,3)" fg:x="19491" fg:w="4"/><text x="50.0507%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::Chain&lt;AAT::ExtendedTypes&gt;::compile_flags (16 samples, 0.04%)</title><rect x="49.8646%" y="437" width="0.0409%" height="15" fill="rgb(205,123,3)" fg:x="19516" fg:w="16"/><text x="50.1146%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`bool hb_sorted_array_t&lt;hb_aat_map_builder_t::feature_info_t const&gt;::bsearch_impl&lt;hb_aat_map_builder_t::feature_info_t&gt; (14 samples, 0.04%)</title><rect x="49.9055%" y="437" width="0.0358%" height="15" fill="rgb(205,97,47)" fg:x="19532" fg:w="14"/><text x="50.1555%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="49.9489%" y="405" width="0.0102%" height="15" fill="rgb(247,152,14)" fg:x="19549" fg:w="4"/><text x="50.1989%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="49.9591%" y="405" width="0.0102%" height="15" fill="rgb(248,195,53)" fg:x="19553" fg:w="4"/><text x="50.2091%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;::alloc (15 samples, 0.04%)</title><rect x="49.9463%" y="421" width="0.0383%" height="15" fill="rgb(226,201,16)" fg:x="19548" fg:w="15"/><text x="50.1963%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.02%)</title><rect x="49.9693%" y="405" width="0.0153%" height="15" fill="rgb(205,98,0)" fg:x="19557" fg:w="6"/><text x="50.2193%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`hb_aat_map_t::range_flags_t* hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;::push&lt;hb_aat_map_t::range_flags_t, hb_aat_map_t::range_flags_t, (void*)0&gt; (20 samples, 0.05%)</title><rect x="49.9412%" y="437" width="0.0511%" height="15" fill="rgb(214,191,48)" fg:x="19546" fg:w="20"/><text x="50.1912%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;* hb_vector_t&lt;hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;, false&gt;::realloc_vector&lt;hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;, (void*)0&gt;(unsigned int, hb_priority (6 samples, 0.02%)</title><rect x="50.0204%" y="405" width="0.0153%" height="15" fill="rgb(237,112,39)" fg:x="19577" fg:w="6"/><text x="50.2704%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.01%)</title><rect x="50.0256%" y="389" width="0.0102%" height="15" fill="rgb(247,203,27)" fg:x="19579" fg:w="4"/><text x="50.2756%" y="399.50"></text></g><g><title>libharfbuzz.0.dylib`AAT::mortmorx&lt;AAT::ExtendedTypes, 1836020344u&gt;::compile_flags (83 samples, 0.21%)</title><rect x="49.8441%" y="453" width="0.2121%" height="15" fill="rgb(235,124,28)" fg:x="19508" fg:w="83"/><text x="50.0941%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;, false&gt;::resize (24 samples, 0.06%)</title><rect x="49.9949%" y="437" width="0.0613%" height="15" fill="rgb(208,207,46)" fg:x="19567" fg:w="24"/><text x="50.2449%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;, false&gt;::alloc (21 samples, 0.05%)</title><rect x="50.0026%" y="421" width="0.0537%" height="15" fill="rgb(234,176,4)" fg:x="19570" fg:w="21"/><text x="50.2526%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="50.0434%" y="405" width="0.0128%" height="15" fill="rgb(230,133,28)" fg:x="19586" fg:w="5"/><text x="50.2934%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="50.0920%" y="405" width="0.0230%" height="15" fill="rgb(211,137,40)" fg:x="19605" fg:w="9"/><text x="50.3420%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_builder_t::feature_event_t, false&gt;::resize (16 samples, 0.04%)</title><rect x="50.0843%" y="437" width="0.0409%" height="15" fill="rgb(254,35,13)" fg:x="19602" fg:w="16"/><text x="50.3343%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_builder_t::feature_event_t, false&gt;::alloc (15 samples, 0.04%)</title><rect x="50.0869%" y="421" width="0.0383%" height="15" fill="rgb(225,49,51)" fg:x="19603" fg:w="15"/><text x="50.3369%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.01%)</title><rect x="50.1150%" y="405" width="0.0102%" height="15" fill="rgb(251,10,15)" fg:x="19614" fg:w="4"/><text x="50.3650%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_builder_t::feature_event_t, false&gt;::push (22 samples, 0.06%)</title><rect x="50.0715%" y="453" width="0.0562%" height="15" fill="rgb(228,207,15)" fg:x="19597" fg:w="22"/><text x="50.3215%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_builder_t::feature_event_t, false&gt;::resize (5 samples, 0.01%)</title><rect x="50.1278%" y="453" width="0.0128%" height="15" fill="rgb(241,99,19)" fg:x="19619" fg:w="5"/><text x="50.3778%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_builder_t::feature_info_t, true&gt;::operator=(hb_vector_t (8 samples, 0.02%)</title><rect x="50.1405%" y="453" width="0.0204%" height="15" fill="rgb(207,104,49)" fg:x="19624" fg:w="8"/><text x="50.3905%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_aat_map_builder_t::feature_info_t, true&gt;::resize (6 samples, 0.02%)</title><rect x="50.1456%" y="437" width="0.0153%" height="15" fill="rgb(234,99,18)" fg:x="19626" fg:w="6"/><text x="50.3956%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.02%)</title><rect x="50.1661%" y="453" width="0.0153%" height="15" fill="rgb(213,191,49)" fg:x="19634" fg:w="6"/><text x="50.4161%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_aat_map_builder_t::compile (148 samples, 0.38%)</title><rect x="49.8109%" y="469" width="0.3781%" height="15" fill="rgb(210,226,19)" fg:x="19495" fg:w="148"/><text x="50.0609%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::unsafe_to_concat (4 samples, 0.01%)</title><rect x="50.1967%" y="469" width="0.0102%" height="15" fill="rgb(229,97,18)" fg:x="19646" fg:w="4"/><text x="50.4467%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.02%)</title><rect x="50.2172%" y="437" width="0.0230%" height="15" fill="rgb(211,167,15)" fg:x="19654" fg:w="9"/><text x="50.4672%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;, false&gt;::shrink_vector (10 samples, 0.03%)</title><rect x="50.2172%" y="453" width="0.0256%" height="15" fill="rgb(210,169,34)" fg:x="19654" fg:w="10"/><text x="50.4672%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="50.2427%" y="453" width="0.0102%" height="15" fill="rgb(241,121,31)" fg:x="19664" fg:w="4"/><text x="50.4927%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`hb_vector_t&lt;hb_vector_t&lt;hb_aat_map_t::range_flags_t, true&gt;, false&gt;::fini (15 samples, 0.04%)</title><rect x="50.2172%" y="469" width="0.0383%" height="15" fill="rgb(232,40,11)" fg:x="19654" fg:w="15"/><text x="50.4672%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_aat_layout_substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_feature_t const*, unsigned int) (565 samples, 1.44%)</title><rect x="48.8323%" y="485" width="1.4436%" height="15" fill="rgb(205,86,26)" fg:x="19112" fg:w="565"/><text x="49.0823%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="50.2632%" y="469" width="0.0128%" height="15" fill="rgb(231,126,28)" fg:x="19672" fg:w="5"/><text x="50.5132%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::delete_glyphs_inplace(bool (*) (10 samples, 0.03%)</title><rect x="50.2938%" y="485" width="0.0256%" height="15" fill="rgb(219,221,18)" fg:x="19684" fg:w="10"/><text x="50.5438%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::message (4 samples, 0.01%)</title><rect x="50.3194%" y="485" width="0.0102%" height="15" fill="rgb(211,40,0)" fg:x="19694" fg:w="4"/><text x="50.5694%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.01%)</title><rect x="50.3500%" y="469" width="0.0102%" height="15" fill="rgb(239,85,43)" fg:x="19706" fg:w="4"/><text x="50.6000%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_ft_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*) (13 samples, 0.03%)</title><rect x="50.3322%" y="485" width="0.0332%" height="15" fill="rgb(231,55,21)" fg:x="19699" fg:w="13"/><text x="50.5822%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*) (6 samples, 0.02%)</title><rect x="50.3705%" y="485" width="0.0153%" height="15" fill="rgb(225,184,43)" fg:x="19714" fg:w="6"/><text x="50.6205%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`OT::hb_kern_machine_t&lt;hb_ot_shape_fallback_kern_driver_t&gt;::kern (5 samples, 0.01%)</title><rect x="50.3986%" y="469" width="0.0128%" height="15" fill="rgb(251,158,41)" fg:x="19725" fg:w="5"/><text x="50.6486%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`OT::hb_ot_apply_context_t::hb_ot_apply_context_t (11 samples, 0.03%)</title><rect x="50.4497%" y="437" width="0.0281%" height="15" fill="rgb(234,159,37)" fg:x="19745" fg:w="11"/><text x="50.6997%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`OT::hb_ot_apply_context_t::skipping_iterator_t::init (6 samples, 0.02%)</title><rect x="50.4778%" y="437" width="0.0153%" height="15" fill="rgb(216,204,22)" fg:x="19756" fg:w="6"/><text x="50.7278%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`OT::hb_ot_apply_context_t::skipping_iterator_t::next (10 samples, 0.03%)</title><rect x="50.4931%" y="437" width="0.0256%" height="15" fill="rgb(214,17,3)" fg:x="19762" fg:w="10"/><text x="50.7431%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::message (4 samples, 0.01%)</title><rect x="50.5238%" y="437" width="0.0102%" height="15" fill="rgb(212,111,17)" fg:x="19774" fg:w="4"/><text x="50.7738%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`hb_sanitize_context_t::hb_sanitize_context_t (4 samples, 0.01%)</title><rect x="50.5340%" y="437" width="0.0102%" height="15" fill="rgb(221,157,24)" fg:x="19778" fg:w="4"/><text x="50.7840%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`OT::hb_kern_machine_t&lt;hb_ot_shape_fallback_kern_driver_t&gt;::kern (59 samples, 0.15%)</title><rect x="50.4165%" y="453" width="0.1507%" height="15" fill="rgb(252,16,13)" fg:x="19732" fg:w="59"/><text x="50.6665%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="50.5570%" y="437" width="0.0102%" height="15" fill="rgb(221,62,2)" fg:x="19787" fg:w="4"/><text x="50.8070%" y="447.50"></text></g><g><title>libharfbuzz.0.dylib`OT::hb_ot_apply_context_t::hb_ot_apply_context_t (6 samples, 0.02%)</title><rect x="50.5672%" y="453" width="0.0153%" height="15" fill="rgb(247,87,22)" fg:x="19791" fg:w="6"/><text x="50.8172%" y="463.50"></text></g><g><title>libharfbuzz.0.dylib`_hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) (73 samples, 0.19%)</title><rect x="50.4114%" y="469" width="0.1865%" height="15" fill="rgb(215,73,9)" fg:x="19730" fg:w="73"/><text x="50.6614%" y="479.50"></text></g><g><title>libharfbuzz.0.dylib`hb_ot_shape_plan_t::position (85 samples, 0.22%)</title><rect x="50.3858%" y="485" width="0.2172%" height="15" fill="rgb(207,175,33)" fg:x="19720" fg:w="85"/><text x="50.6358%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`hb_ucd_general_category(hb_unicode_funcs_t*, unsigned int, void*) (5 samples, 0.01%)</title><rect x="50.6030%" y="485" width="0.0128%" height="15" fill="rgb(243,129,54)" fg:x="19805" fg:w="5"/><text x="50.8530%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`position_cluster(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, bool) (4 samples, 0.01%)</title><rect x="50.6183%" y="485" width="0.0102%" height="15" fill="rgb(227,119,45)" fg:x="19811" fg:w="4"/><text x="50.8683%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.01%)</title><rect x="50.6285%" y="485" width="0.0102%" height="15" fill="rgb(205,109,36)" fg:x="19815" fg:w="4"/><text x="50.8785%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`_hb_ot_shape (865 samples, 2.21%)</title><rect x="48.4363%" y="501" width="2.2101%" height="15" fill="rgb(205,6,39)" fg:x="18957" fg:w="865"/><text x="48.6863%" y="511.50">l..</text></g><g><title>libharfbuzz.0.dylib`_hb_ot_shape_fallback_mark_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) (5 samples, 0.01%)</title><rect x="50.6464%" y="501" width="0.0128%" height="15" fill="rgb(221,32,16)" fg:x="19822" fg:w="5"/><text x="50.8964%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_t::delete_glyphs_inplace(bool (*) (4 samples, 0.01%)</title><rect x="50.6771%" y="501" width="0.0102%" height="15" fill="rgb(228,144,50)" fg:x="19834" fg:w="4"/><text x="50.9271%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_font_t::has_func (8 samples, 0.02%)</title><rect x="50.6975%" y="501" width="0.0204%" height="15" fill="rgb(229,201,53)" fg:x="19842" fg:w="8"/><text x="50.9475%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*) (7 samples, 0.02%)</title><rect x="50.7231%" y="501" width="0.0179%" height="15" fill="rgb(249,153,27)" fg:x="19852" fg:w="7"/><text x="50.9731%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_plan_execute (920 samples, 2.35%)</title><rect x="48.4133%" y="517" width="2.3507%" height="15" fill="rgb(227,106,25)" fg:x="18948" fg:w="920"/><text x="48.6633%" y="527.50">l..</text></g><g><title>libharfbuzz.0.dylib`hb_script_get_horizontal_direction (6 samples, 0.02%)</title><rect x="50.7486%" y="501" width="0.0153%" height="15" fill="rgb(230,65,29)" fg:x="19862" fg:w="6"/><text x="50.9986%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_full (1,119 samples, 2.86%)</title><rect x="47.9125%" y="533" width="2.8591%" height="15" fill="rgb(221,57,46)" fg:x="18752" fg:w="1119"/><text x="48.1625%" y="543.50">li..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (6 samples, 0.02%)</title><rect x="50.7895%" y="533" width="0.0153%" height="15" fill="rgb(229,161,17)" fg:x="19878" fg:w="6"/><text x="51.0395%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.02%)</title><rect x="50.8048%" y="533" width="0.0230%" height="15" fill="rgb(222,213,11)" fg:x="19884" fg:w="9"/><text x="51.0548%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (14 samples, 0.04%)</title><rect x="50.8278%" y="533" width="0.0358%" height="15" fill="rgb(235,35,13)" fg:x="19893" fg:w="14"/><text x="51.0778%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="50.8687%" y="533" width="0.0102%" height="15" fill="rgb(233,158,34)" fg:x="19909" fg:w="4"/><text x="51.1187%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="50.8789%" y="533" width="0.0179%" height="15" fill="rgb(215,151,48)" fg:x="19913" fg:w="7"/><text x="51.1289%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (4 samples, 0.01%)</title><rect x="50.8994%" y="533" width="0.0102%" height="15" fill="rgb(229,84,14)" fg:x="19921" fg:w="4"/><text x="51.1494%" y="543.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_Size_Internal (1,740 samples, 4.45%)</title><rect x="46.4715%" y="549" width="4.4458%" height="15" fill="rgb(229,68,14)" fg:x="18188" fg:w="1740"/><text x="46.7215%" y="559.50">libSD..</text></g><g><title>libharfbuzz.0.dylib`hb_buffer_create (5 samples, 0.01%)</title><rect x="50.9224%" y="549" width="0.0128%" height="15" fill="rgb(243,106,26)" fg:x="19930" fg:w="5"/><text x="51.1724%" y="559.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_destroy (6 samples, 0.02%)</title><rect x="50.9352%" y="549" width="0.0153%" height="15" fill="rgb(206,45,38)" fg:x="19935" fg:w="6"/><text x="51.1852%" y="559.50"></text></g><g><title>libharfbuzz.0.dylib`hb_buffer_set_direction (4 samples, 0.01%)</title><rect x="50.9581%" y="549" width="0.0102%" height="15" fill="rgb(226,6,15)" fg:x="19944" fg:w="4"/><text x="51.2081%" y="559.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_Render_Internal (2,326 samples, 5.94%)</title><rect x="45.0457%" y="565" width="5.9431%" height="15" fill="rgb(232,22,54)" fg:x="17630" fg:w="2326"/><text x="45.2957%" y="575.50">libSDL2_..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="50.9939%" y="565" width="0.0102%" height="15" fill="rgb(229,222,32)" fg:x="19958" fg:w="4"/><text x="51.2439%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="51.0220%" y="549" width="0.0102%" height="15" fill="rgb(228,62,29)" fg:x="19969" fg:w="4"/><text x="51.2720%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="51.0322%" y="549" width="0.0102%" height="15" fill="rgb(251,103,34)" fg:x="19973" fg:w="4"/><text x="51.2822%" y="559.50"></text></g><g><title>velocity-sdl`alloc::ffi::c_str::CString::_from_vec_unchecked (4 samples, 0.01%)</title><rect x="51.0501%" y="533" width="0.0102%" height="15" fill="rgb(233,12,30)" fg:x="19980" fg:w="4"/><text x="51.3001%" y="543.50"></text></g><g><title>velocity-sdl`&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (11 samples, 0.03%)</title><rect x="51.0425%" y="549" width="0.0281%" height="15" fill="rgb(238,52,0)" fg:x="19977" fg:w="11"/><text x="51.2925%" y="559.50"></text></g><g><title>velocity-sdl`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (4 samples, 0.01%)</title><rect x="51.0604%" y="533" width="0.0102%" height="15" fill="rgb(223,98,5)" fg:x="19984" fg:w="4"/><text x="51.3104%" y="543.50"></text></g><g><title>velocity-sdl`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="51.0706%" y="549" width="0.0102%" height="15" fill="rgb(228,75,37)" fg:x="19988" fg:w="4"/><text x="51.3206%" y="559.50"></text></g><g><title>velocity-sdl`sdl2::ttf::font::RenderableText::convert (28 samples, 0.07%)</title><rect x="51.0144%" y="565" width="0.0715%" height="15" fill="rgb(205,115,49)" fg:x="19966" fg:w="28"/><text x="51.2644%" y="575.50"></text></g><g><title>velocity-sdl`sdl2::ttf::font::PartialRendering::blended (2,369 samples, 6.05%)</title><rect x="45.0355%" y="581" width="6.0529%" height="15" fill="rgb(250,154,43)" fg:x="17626" fg:w="2369"/><text x="45.2855%" y="591.50">velocity..</text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (6 samples, 0.02%)</title><rect x="51.0961%" y="453" width="0.0153%" height="15" fill="rgb(226,43,29)" fg:x="19998" fg:w="6"/><text x="51.3461%" y="463.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (6 samples, 0.02%)</title><rect x="51.0961%" y="437" width="0.0153%" height="15" fill="rgb(249,228,39)" fg:x="19998" fg:w="6"/><text x="51.3461%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (5 samples, 0.01%)</title><rect x="51.0987%" y="421" width="0.0128%" height="15" fill="rgb(216,79,43)" fg:x="19999" fg:w="5"/><text x="51.3487%" y="431.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.01%)</title><rect x="51.0987%" y="405" width="0.0128%" height="15" fill="rgb(228,95,12)" fg:x="19999" fg:w="5"/><text x="51.3487%" y="415.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (5 samples, 0.01%)</title><rect x="51.0987%" y="389" width="0.0128%" height="15" fill="rgb(249,221,15)" fg:x="19999" fg:w="5"/><text x="51.3487%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (5 samples, 0.01%)</title><rect x="51.0987%" y="373" width="0.0128%" height="15" fill="rgb(233,34,13)" fg:x="19999" fg:w="5"/><text x="51.3487%" y="383.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (5 samples, 0.01%)</title><rect x="51.0987%" y="357" width="0.0128%" height="15" fill="rgb(214,103,39)" fg:x="19999" fg:w="5"/><text x="51.3487%" y="367.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (5 samples, 0.01%)</title><rect x="51.0987%" y="341" width="0.0128%" height="15" fill="rgb(251,126,39)" fg:x="19999" fg:w="5"/><text x="51.3487%" y="351.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.01%)</title><rect x="51.0987%" y="325" width="0.0128%" height="15" fill="rgb(214,216,36)" fg:x="19999" fg:w="5"/><text x="51.3487%" y="335.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (10 samples, 0.03%)</title><rect x="51.0961%" y="469" width="0.0256%" height="15" fill="rgb(220,221,8)" fg:x="19998" fg:w="10"/><text x="51.3461%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateWindow (12 samples, 0.03%)</title><rect x="51.0936%" y="549" width="0.0307%" height="15" fill="rgb(240,216,3)" fg:x="19997" fg:w="12"/><text x="51.3436%" y="559.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:screen:] (12 samples, 0.03%)</title><rect x="51.0936%" y="533" width="0.0307%" height="15" fill="rgb(232,218,17)" fg:x="19997" fg:w="12"/><text x="51.3436%" y="543.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (12 samples, 0.03%)</title><rect x="51.0936%" y="517" width="0.0307%" height="15" fill="rgb(229,163,45)" fg:x="19997" fg:w="12"/><text x="51.3436%" y="527.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (12 samples, 0.03%)</title><rect x="51.0936%" y="501" width="0.0307%" height="15" fill="rgb(231,110,42)" fg:x="19997" fg:w="12"/><text x="51.3436%" y="511.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (11 samples, 0.03%)</title><rect x="51.0961%" y="485" width="0.0281%" height="15" fill="rgb(208,170,48)" fg:x="19998" fg:w="11"/><text x="51.3461%" y="495.50"></text></g><g><title>velocity-sdl`sdl2::video::WindowBuilder::build (14 samples, 0.04%)</title><rect x="51.0936%" y="581" width="0.0358%" height="15" fill="rgb(239,116,25)" fg:x="19997" fg:w="14"/><text x="51.3436%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateWindow_REAL (14 samples, 0.04%)</title><rect x="51.0936%" y="565" width="0.0358%" height="15" fill="rgb(219,200,50)" fg:x="19997" fg:w="14"/><text x="51.3436%" y="575.50"></text></g><g><title>velocity-sdl`std::rt::lang_start::_{{closure}} (20,015 samples, 51.14%)</title><rect x="0.0000%" y="629" width="51.1396%" height="15" fill="rgb(245,200,0)" fg:x="0" fg:w="20015"/><text x="0.2500%" y="639.50">velocity-sdl`std::rt::lang_start::_{{closure}}</text></g><g><title>velocity-sdl`std::sys_common::backtrace::__rust_begin_short_backtrace (20,015 samples, 51.14%)</title><rect x="0.0000%" y="613" width="51.1396%" height="15" fill="rgb(245,119,33)" fg:x="0" fg:w="20015"/><text x="0.2500%" y="623.50">velocity-sdl`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>velocity-sdl`velocity_sdl::main (19,952 samples, 50.98%)</title><rect x="0.1610%" y="597" width="50.9786%" height="15" fill="rgb(231,125,12)" fg:x="63" fg:w="19952"/><text x="0.4110%" y="607.50">velocity-sdl`velocity_sdl::main</text></g><g><title>dyld`start (20,016 samples, 51.14%)</title><rect x="0.0000%" y="677" width="51.1421%" height="15" fill="rgb(216,96,41)" fg:x="0" fg:w="20016"/><text x="0.2500%" y="687.50">dyld`start</text></g><g><title>velocity-sdl`main (20,016 samples, 51.14%)</title><rect x="0.0000%" y="661" width="51.1421%" height="15" fill="rgb(248,43,45)" fg:x="0" fg:w="20016"/><text x="0.2500%" y="671.50">velocity-sdl`main</text></g><g><title>velocity-sdl`std::rt::lang_start_internal (20,016 samples, 51.14%)</title><rect x="0.0000%" y="645" width="51.1421%" height="15" fill="rgb(217,222,7)" fg:x="0" fg:w="20016"/><text x="0.2500%" y="655.50">velocity-sdl`std::rt::lang_start_internal</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (4 samples, 0.01%)</title><rect x="51.1447%" y="677" width="0.0102%" height="15" fill="rgb(233,28,6)" fg:x="20017" fg:w="4"/><text x="51.3947%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (8 samples, 0.02%)</title><rect x="51.7374%" y="661" width="0.0204%" height="15" fill="rgb(231,218,15)" fg:x="20249" fg:w="8"/><text x="51.9874%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (2,058 samples, 5.26%)</title><rect x="51.7579%" y="661" width="5.2583%" height="15" fill="rgb(226,171,48)" fg:x="20257" fg:w="2058"/><text x="52.0079%" y="671.50">libsys..</text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (4 samples, 0.01%)</title><rect x="57.0417%" y="645" width="0.0102%" height="15" fill="rgb(235,201,9)" fg:x="22325" fg:w="4"/><text x="57.2917%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_leave_deferred (4 samples, 0.01%)</title><rect x="57.1261%" y="629" width="0.0102%" height="15" fill="rgb(217,80,15)" fg:x="22358" fg:w="4"/><text x="57.3761%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_mach_msg_drain (4 samples, 0.01%)</title><rect x="57.1491%" y="613" width="0.0102%" height="15" fill="rgb(219,152,8)" fg:x="22367" fg:w="4"/><text x="57.3991%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_mach_msg_recv (8 samples, 0.02%)</title><rect x="57.1593%" y="613" width="0.0204%" height="15" fill="rgb(243,107,38)" fg:x="22371" fg:w="8"/><text x="57.4093%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_push (22 samples, 0.06%)</title><rect x="57.1797%" y="613" width="0.0562%" height="15" fill="rgb(231,17,5)" fg:x="22379" fg:w="22"/><text x="57.4297%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_wakeup (4 samples, 0.01%)</title><rect x="57.2359%" y="613" width="0.0102%" height="15" fill="rgb(209,25,54)" fg:x="22401" fg:w="4"/><text x="57.4859%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_handle_or_push_received_msg (5 samples, 0.01%)</title><rect x="57.2462%" y="613" width="0.0128%" height="15" fill="rgb(219,0,2)" fg:x="22405" fg:w="5"/><text x="57.4962%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_handle_or_push_received_msg (7 samples, 0.02%)</title><rect x="57.2743%" y="597" width="0.0179%" height="15" fill="rgb(246,9,5)" fg:x="22416" fg:w="7"/><text x="57.5243%" y="607.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (8 samples, 0.02%)</title><rect x="57.3100%" y="565" width="0.0204%" height="15" fill="rgb(226,159,4)" fg:x="22430" fg:w="8"/><text x="57.5600%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (7 samples, 0.02%)</title><rect x="57.3126%" y="549" width="0.0179%" height="15" fill="rgb(219,175,34)" fg:x="22431" fg:w="7"/><text x="57.5626%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (5 samples, 0.01%)</title><rect x="57.3305%" y="565" width="0.0128%" height="15" fill="rgb(236,10,46)" fg:x="22438" fg:w="5"/><text x="57.5805%" y="575.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (19 samples, 0.05%)</title><rect x="57.3100%" y="581" width="0.0485%" height="15" fill="rgb(240,211,16)" fg:x="22430" fg:w="19"/><text x="57.5600%" y="591.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (25 samples, 0.06%)</title><rect x="57.3024%" y="597" width="0.0639%" height="15" fill="rgb(205,3,43)" fg:x="22427" fg:w="25"/><text x="57.5524%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (43 samples, 0.11%)</title><rect x="57.2589%" y="613" width="0.1099%" height="15" fill="rgb(245,7,22)" fg:x="22410" fg:w="43"/><text x="57.5089%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (35 samples, 0.09%)</title><rect x="57.3688%" y="613" width="0.0894%" height="15" fill="rgb(239,132,32)" fg:x="22453" fg:w="35"/><text x="57.6188%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (127 samples, 0.32%)</title><rect x="57.1363%" y="629" width="0.3245%" height="15" fill="rgb(228,202,34)" fg:x="22362" fg:w="127"/><text x="57.3863%" y="639.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (7 samples, 0.02%)</title><rect x="57.5272%" y="565" width="0.0179%" height="15" fill="rgb(254,200,22)" fg:x="22515" fg:w="7"/><text x="57.7772%" y="575.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (10 samples, 0.03%)</title><rect x="57.5221%" y="581" width="0.0256%" height="15" fill="rgb(219,10,39)" fg:x="22513" fg:w="10"/><text x="57.7721%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (13 samples, 0.03%)</title><rect x="57.5195%" y="597" width="0.0332%" height="15" fill="rgb(226,210,39)" fg:x="22512" fg:w="13"/><text x="57.7695%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (6 samples, 0.02%)</title><rect x="57.5962%" y="565" width="0.0153%" height="15" fill="rgb(208,219,16)" fg:x="22542" fg:w="6"/><text x="57.8462%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (8 samples, 0.02%)</title><rect x="57.6447%" y="549" width="0.0204%" height="15" fill="rgb(216,158,51)" fg:x="22561" fg:w="8"/><text x="57.8947%" y="559.50"></text></g><g><title>IOGPU`DYLD-STUB$$_Block_release (6 samples, 0.02%)</title><rect x="57.7495%" y="485" width="0.0153%" height="15" fill="rgb(233,14,44)" fg:x="22602" fg:w="6"/><text x="57.9995%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (4 samples, 0.01%)</title><rect x="57.7878%" y="469" width="0.0102%" height="15" fill="rgb(237,97,39)" fg:x="22617" fg:w="4"/><text x="58.0378%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue device] (4 samples, 0.01%)</title><rect x="57.7980%" y="469" width="0.0102%" height="15" fill="rgb(218,198,43)" fg:x="22621" fg:w="4"/><text x="58.0480%" y="479.50"></text></g><g><title>IOKit`__IODataQueueDequeue (42 samples, 0.11%)</title><rect x="57.8134%" y="469" width="0.1073%" height="15" fill="rgb(231,104,20)" fg:x="22627" fg:w="42"/><text x="58.0634%" y="479.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (8 samples, 0.02%)</title><rect x="57.9360%" y="373" width="0.0204%" height="15" fill="rgb(254,36,13)" fg:x="22675" fg:w="8"/><text x="58.1860%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (8 samples, 0.02%)</title><rect x="57.9360%" y="357" width="0.0204%" height="15" fill="rgb(248,14,50)" fg:x="22675" fg:w="8"/><text x="58.1860%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (8 samples, 0.02%)</title><rect x="57.9360%" y="341" width="0.0204%" height="15" fill="rgb(217,107,29)" fg:x="22675" fg:w="8"/><text x="58.1860%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.02%)</title><rect x="57.9360%" y="325" width="0.0204%" height="15" fill="rgb(251,169,33)" fg:x="22675" fg:w="8"/><text x="58.1860%" y="335.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (10 samples, 0.03%)</title><rect x="57.9335%" y="421" width="0.0256%" height="15" fill="rgb(217,108,32)" fg:x="22674" fg:w="10"/><text x="58.1835%" y="431.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (9 samples, 0.02%)</title><rect x="57.9360%" y="405" width="0.0230%" height="15" fill="rgb(219,66,42)" fg:x="22675" fg:w="9"/><text x="58.1860%" y="415.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (9 samples, 0.02%)</title><rect x="57.9360%" y="389" width="0.0230%" height="15" fill="rgb(206,180,7)" fg:x="22675" fg:w="9"/><text x="58.1860%" y="399.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (12 samples, 0.03%)</title><rect x="57.9309%" y="437" width="0.0307%" height="15" fill="rgb(208,226,31)" fg:x="22673" fg:w="12"/><text x="58.1809%" y="447.50"></text></g><g><title>Metal`MTLDispatchListApply (13 samples, 0.03%)</title><rect x="57.9309%" y="453" width="0.0332%" height="15" fill="rgb(218,26,49)" fg:x="22673" fg:w="13"/><text x="58.1809%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (5 samples, 0.01%)</title><rect x="57.9667%" y="453" width="0.0128%" height="15" fill="rgb(233,197,48)" fg:x="22687" fg:w="5"/><text x="58.2167%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (13 samples, 0.03%)</title><rect x="57.9795%" y="453" width="0.0332%" height="15" fill="rgb(252,181,51)" fg:x="22692" fg:w="13"/><text x="58.2295%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (12 samples, 0.03%)</title><rect x="57.9820%" y="437" width="0.0307%" height="15" fill="rgb(253,90,19)" fg:x="22693" fg:w="12"/><text x="58.2320%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (7 samples, 0.02%)</title><rect x="58.0127%" y="453" width="0.0179%" height="15" fill="rgb(215,171,30)" fg:x="22705" fg:w="7"/><text x="58.2627%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (45 samples, 0.11%)</title><rect x="57.9232%" y="469" width="0.1150%" height="15" fill="rgb(214,222,9)" fg:x="22670" fg:w="45"/><text x="58.1732%" y="479.50"></text></g><g><title>CoreFoundation`-[__NSArrayM _mutate] (5 samples, 0.01%)</title><rect x="58.1277%" y="437" width="0.0128%" height="15" fill="rgb(223,3,22)" fg:x="22750" fg:w="5"/><text x="58.3777%" y="447.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (38 samples, 0.10%)</title><rect x="58.1455%" y="437" width="0.0971%" height="15" fill="rgb(225,196,46)" fg:x="22757" fg:w="38"/><text x="58.3955%" y="447.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (8 samples, 0.02%)</title><rect x="58.2452%" y="437" width="0.0204%" height="15" fill="rgb(209,110,37)" fg:x="22796" fg:w="8"/><text x="58.4952%" y="447.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (87 samples, 0.22%)</title><rect x="58.0510%" y="453" width="0.2223%" height="15" fill="rgb(249,89,12)" fg:x="22720" fg:w="87"/><text x="58.3010%" y="463.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (68 samples, 0.17%)</title><rect x="58.2835%" y="453" width="0.1737%" height="15" fill="rgb(226,27,33)" fg:x="22811" fg:w="68"/><text x="58.5335%" y="463.50"></text></g><g><title>CoreFoundation`objc_msgSend$isEqual: (14 samples, 0.04%)</title><rect x="58.4700%" y="453" width="0.0358%" height="15" fill="rgb(213,82,22)" fg:x="22884" fg:w="14"/><text x="58.7200%" y="463.50"></text></g><g><title>CoreFoundation`objc_msgSend$objectAtIndex: (25 samples, 0.06%)</title><rect x="58.5058%" y="453" width="0.0639%" height="15" fill="rgb(248,140,0)" fg:x="22898" fg:w="25"/><text x="58.7558%" y="463.50"></text></g><g><title>CoreFoundation`objc_msgSend$removeObjectsInRange: (4 samples, 0.01%)</title><rect x="58.5697%" y="453" width="0.0102%" height="15" fill="rgb(228,106,3)" fg:x="22923" fg:w="4"/><text x="58.8197%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice kickCleanupQueue] (4 samples, 0.01%)</title><rect x="58.6054%" y="437" width="0.0102%" height="15" fill="rgb(209,23,37)" fg:x="22937" fg:w="4"/><text x="58.8554%" y="447.50"></text></g><g><title>IOGPU`DYLD-STUB$$os_unfair_lock_lock (4 samples, 0.01%)</title><rect x="58.6182%" y="437" width="0.0102%" height="15" fill="rgb(241,93,50)" fg:x="22942" fg:w="4"/><text x="58.8682%" y="447.50"></text></g><g><title>IOGPU`DYLD-STUB$$objc_opt_isKindOfClass (5 samples, 0.01%)</title><rect x="58.6514%" y="405" width="0.0128%" height="15" fill="rgb(253,46,43)" fg:x="22955" fg:w="5"/><text x="58.9014%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (20 samples, 0.05%)</title><rect x="58.6744%" y="389" width="0.0511%" height="15" fill="rgb(226,206,43)" fg:x="22964" fg:w="20"/><text x="58.9244%" y="399.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReleaseExtraResources (25 samples, 0.06%)</title><rect x="58.6668%" y="405" width="0.0639%" height="15" fill="rgb(217,54,7)" fg:x="22961" fg:w="25"/><text x="58.9168%" y="415.50"></text></g><g><title>IOGPU`IOGPUMetalPooledResourceRelease (15 samples, 0.04%)</title><rect x="58.7306%" y="405" width="0.0383%" height="15" fill="rgb(223,5,52)" fg:x="22986" fg:w="15"/><text x="58.9806%" y="415.50"></text></g><g><title>Metal`DYLD-STUB$$objc_release (11 samples, 0.03%)</title><rect x="58.7741%" y="389" width="0.0281%" height="15" fill="rgb(206,52,46)" fg:x="23003" fg:w="11"/><text x="59.0241%" y="399.50"></text></g><g><title>Metal`MTLRangeAllocatorDeallocate (10 samples, 0.03%)</title><rect x="58.8303%" y="293" width="0.0256%" height="15" fill="rgb(253,136,11)" fg:x="23025" fg:w="10"/><text x="59.0803%" y="303.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (14 samples, 0.04%)</title><rect x="58.8252%" y="309" width="0.0358%" height="15" fill="rgb(208,106,33)" fg:x="23023" fg:w="14"/><text x="59.0752%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (27 samples, 0.07%)</title><rect x="58.8226%" y="325" width="0.0690%" height="15" fill="rgb(206,54,4)" fg:x="23022" fg:w="27"/><text x="59.0726%" y="335.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (4 samples, 0.01%)</title><rect x="58.8814%" y="309" width="0.0102%" height="15" fill="rgb(213,3,15)" fg:x="23045" fg:w="4"/><text x="59.1314%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (621 samples, 1.59%)</title><rect x="58.9964%" y="245" width="1.5867%" height="15" fill="rgb(252,211,39)" fg:x="23090" fg:w="621"/><text x="59.2464%" y="255.50"></text></g><g><title>IOKit`io_connect_method (633 samples, 1.62%)</title><rect x="58.9683%" y="261" width="1.6174%" height="15" fill="rgb(223,6,36)" fg:x="23079" fg:w="633"/><text x="59.2183%" y="271.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (643 samples, 1.64%)</title><rect x="58.9580%" y="293" width="1.6429%" height="15" fill="rgb(252,169,45)" fg:x="23075" fg:w="643"/><text x="59.2080%" y="303.50"></text></g><g><title>IOKit`IOConnectCallMethod (640 samples, 1.64%)</title><rect x="58.9657%" y="277" width="1.6352%" height="15" fill="rgb(212,48,26)" fg:x="23078" fg:w="640"/><text x="59.2157%" y="287.50"></text></g><g><title>CoreFoundation`_CFRelease (661 samples, 1.69%)</title><rect x="58.9197%" y="309" width="1.6889%" height="15" fill="rgb(251,102,48)" fg:x="23060" fg:w="661"/><text x="59.1697%" y="319.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (8 samples, 0.02%)</title><rect x="60.6239%" y="245" width="0.0204%" height="15" fill="rgb(243,208,16)" fg:x="23727" fg:w="8"/><text x="60.8739%" y="255.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (18 samples, 0.05%)</title><rect x="60.6469%" y="229" width="0.0460%" height="15" fill="rgb(219,96,24)" fg:x="23736" fg:w="18"/><text x="60.8969%" y="239.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (33 samples, 0.08%)</title><rect x="60.6137%" y="293" width="0.0843%" height="15" fill="rgb(219,33,29)" fg:x="23723" fg:w="33"/><text x="60.8637%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (32 samples, 0.08%)</title><rect x="60.6163%" y="277" width="0.0818%" height="15" fill="rgb(223,176,5)" fg:x="23724" fg:w="32"/><text x="60.8663%" y="287.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (29 samples, 0.07%)</title><rect x="60.6239%" y="261" width="0.0741%" height="15" fill="rgb(228,140,14)" fg:x="23727" fg:w="29"/><text x="60.8739%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (21 samples, 0.05%)</title><rect x="60.6444%" y="245" width="0.0537%" height="15" fill="rgb(217,179,31)" fg:x="23735" fg:w="21"/><text x="60.8944%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="60.7108%" y="277" width="0.0102%" height="15" fill="rgb(230,9,30)" fg:x="23761" fg:w="4"/><text x="60.9608%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.07%)</title><rect x="60.6980%" y="293" width="0.0664%" height="15" fill="rgb(230,136,20)" fg:x="23756" fg:w="26"/><text x="60.9480%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.04%)</title><rect x="60.7236%" y="277" width="0.0409%" height="15" fill="rgb(215,210,22)" fg:x="23766" fg:w="16"/><text x="60.9736%" y="287.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (64 samples, 0.16%)</title><rect x="60.6137%" y="309" width="0.1635%" height="15" fill="rgb(218,43,5)" fg:x="23723" fg:w="64"/><text x="60.8637%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="60.7645%" y="293" width="0.0128%" height="15" fill="rgb(216,11,5)" fg:x="23782" fg:w="5"/><text x="61.0145%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (757 samples, 1.93%)</title><rect x="58.8916%" y="325" width="1.9342%" height="15" fill="rgb(209,82,29)" fg:x="23049" fg:w="757"/><text x="59.1416%" y="335.50">I..</text></g><g><title>libobjc.A.dylib`objc_loadWeak (14 samples, 0.04%)</title><rect x="60.8565%" y="325" width="0.0358%" height="15" fill="rgb(244,115,12)" fg:x="23818" fg:w="14"/><text x="61.1065%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (14 samples, 0.04%)</title><rect x="60.8565%" y="309" width="0.0358%" height="15" fill="rgb(222,82,18)" fg:x="23818" fg:w="14"/><text x="61.1065%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="60.8922%" y="325" width="0.0128%" height="15" fill="rgb(249,227,8)" fg:x="23832" fg:w="5"/><text x="61.1422%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (830 samples, 2.12%)</title><rect x="58.8073%" y="341" width="2.1207%" height="15" fill="rgb(253,141,45)" fg:x="23016" fg:w="830"/><text x="59.0573%" y="351.50">I..</text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.02%)</title><rect x="60.9127%" y="325" width="0.0153%" height="15" fill="rgb(234,184,4)" fg:x="23840" fg:w="6"/><text x="61.1627%" y="335.50"></text></g><g><title>IOGPU`DYLD-STUB$$objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="60.9331%" y="341" width="0.0102%" height="15" fill="rgb(218,194,23)" fg:x="23848" fg:w="4"/><text x="61.1831%" y="351.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer dealloc] (843 samples, 2.15%)</title><rect x="58.8047%" y="357" width="2.1539%" height="15" fill="rgb(235,66,41)" fg:x="23015" fg:w="843"/><text x="59.0547%" y="367.50">A..</text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyBuffer dealloc] (844 samples, 2.16%)</title><rect x="58.8047%" y="373" width="2.1565%" height="15" fill="rgb(245,217,1)" fg:x="23015" fg:w="844"/><text x="59.0547%" y="383.50">A..</text></g><g><title>IOGPU`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;unsigned int, short&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::__map_value_compare&lt;unsigned int, std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::less&lt;unsigned int&gt;, true&gt;, IOGPUMetalSuballocatorHeap::Allocator&lt;std::__1::__value_type&lt;unsigned int, short&gt;&gt;&gt;::__emplace_multi&lt;std::__1::pair&lt;unsigned int, short&gt;&gt;(std::__1::pair (4 samples, 0.01%)</title><rect x="61.0047%" y="293" width="0.0102%" height="15" fill="rgb(229,91,1)" fg:x="23876" fg:w="4"/><text x="61.2547%" y="303.50"></text></g><g><title>Metal`MTLRangeAllocatorDeallocate (14 samples, 0.04%)</title><rect x="61.0174%" y="293" width="0.0358%" height="15" fill="rgb(207,101,30)" fg:x="23881" fg:w="14"/><text x="61.2674%" y="303.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (30 samples, 0.08%)</title><rect x="60.9842%" y="309" width="0.0767%" height="15" fill="rgb(223,82,49)" fg:x="23868" fg:w="30"/><text x="61.2342%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (39 samples, 0.10%)</title><rect x="60.9817%" y="325" width="0.0996%" height="15" fill="rgb(218,167,17)" fg:x="23867" fg:w="39"/><text x="61.2317%" y="335.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.01%)</title><rect x="61.1375%" y="277" width="0.0102%" height="15" fill="rgb(208,103,14)" fg:x="23928" fg:w="4"/><text x="61.3875%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (615 samples, 1.57%)</title><rect x="61.1912%" y="245" width="1.5714%" height="15" fill="rgb(238,20,8)" fg:x="23949" fg:w="615"/><text x="61.4412%" y="255.50"></text></g><g><title>IOKit`io_connect_method (627 samples, 1.60%)</title><rect x="61.1656%" y="261" width="1.6020%" height="15" fill="rgb(218,80,54)" fg:x="23939" fg:w="627"/><text x="61.4156%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="62.7702%" y="261" width="0.0179%" height="15" fill="rgb(240,144,17)" fg:x="24567" fg:w="7"/><text x="63.0202%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (641 samples, 1.64%)</title><rect x="61.1528%" y="277" width="1.6378%" height="15" fill="rgb(245,27,50)" fg:x="23934" fg:w="641"/><text x="61.4028%" y="287.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (650 samples, 1.66%)</title><rect x="61.1375%" y="293" width="1.6608%" height="15" fill="rgb(251,51,7)" fg:x="23928" fg:w="650"/><text x="61.3875%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="62.8009%" y="293" width="0.0102%" height="15" fill="rgb(245,217,29)" fg:x="24579" fg:w="4"/><text x="63.0509%" y="303.50"></text></g><g><title>CoreFoundation`_CFRelease (670 samples, 1.71%)</title><rect x="61.1017%" y="309" width="1.7119%" height="15" fill="rgb(221,176,29)" fg:x="23914" fg:w="670"/><text x="61.3517%" y="319.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (18 samples, 0.05%)</title><rect x="62.8136%" y="293" width="0.0460%" height="15" fill="rgb(212,180,24)" fg:x="24584" fg:w="18"/><text x="63.0636%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (18 samples, 0.05%)</title><rect x="62.8136%" y="277" width="0.0460%" height="15" fill="rgb(254,24,2)" fg:x="24584" fg:w="18"/><text x="63.0636%" y="287.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (16 samples, 0.04%)</title><rect x="62.8187%" y="261" width="0.0409%" height="15" fill="rgb(230,100,2)" fg:x="24586" fg:w="16"/><text x="63.0687%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (14 samples, 0.04%)</title><rect x="62.8239%" y="245" width="0.0358%" height="15" fill="rgb(219,142,25)" fg:x="24588" fg:w="14"/><text x="63.0739%" y="255.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (13 samples, 0.03%)</title><rect x="62.8264%" y="229" width="0.0332%" height="15" fill="rgb(240,73,43)" fg:x="24589" fg:w="13"/><text x="63.0764%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (10 samples, 0.03%)</title><rect x="62.8673%" y="277" width="0.0256%" height="15" fill="rgb(214,114,15)" fg:x="24605" fg:w="10"/><text x="63.1173%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="62.9209%" y="261" width="0.0128%" height="15" fill="rgb(207,130,4)" fg:x="24626" fg:w="5"/><text x="63.1709%" y="271.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (49 samples, 0.13%)</title><rect x="62.8136%" y="309" width="0.1252%" height="15" fill="rgb(221,25,40)" fg:x="24584" fg:w="49"/><text x="63.0636%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.08%)</title><rect x="62.8596%" y="293" width="0.0792%" height="15" fill="rgb(241,184,7)" fg:x="24602" fg:w="31"/><text x="63.1096%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.05%)</title><rect x="62.8928%" y="277" width="0.0460%" height="15" fill="rgb(235,159,4)" fg:x="24615" fg:w="18"/><text x="63.1428%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free (4 samples, 0.01%)</title><rect x="62.9797%" y="309" width="0.0102%" height="15" fill="rgb(214,87,48)" fg:x="24649" fg:w="4"/><text x="63.2297%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (748 samples, 1.91%)</title><rect x="61.0813%" y="325" width="1.9112%" height="15" fill="rgb(246,198,24)" fg:x="23906" fg:w="748"/><text x="61.3313%" y="335.50">I..</text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (800 samples, 2.04%)</title><rect x="60.9714%" y="341" width="2.0440%" height="15" fill="rgb(209,66,40)" fg:x="23863" fg:w="800"/><text x="61.2214%" y="351.50">I..</text></g><g><title>AGXMetalG14G`-[AGXTexture dealloc] (808 samples, 2.06%)</title><rect x="60.9663%" y="357" width="2.0645%" height="15" fill="rgb(233,147,39)" fg:x="23861" fg:w="808"/><text x="61.2163%" y="367.50">A..</text></g><g><title>AGXMetalG14G`AGX::G14::Texture::~Texture (6 samples, 0.02%)</title><rect x="63.0308%" y="357" width="0.0153%" height="15" fill="rgb(231,145,52)" fg:x="24669" fg:w="6"/><text x="63.2808%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.05%)</title><rect x="63.0921%" y="341" width="0.0460%" height="15" fill="rgb(206,20,26)" fg:x="24693" fg:w="18"/><text x="63.3421%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.07%)</title><rect x="63.0666%" y="357" width="0.0741%" height="15" fill="rgb(238,220,4)" fg:x="24683" fg:w="29"/><text x="63.3166%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="63.1432%" y="357" width="0.0128%" height="15" fill="rgb(252,195,42)" fg:x="24713" fg:w="5"/><text x="63.3932%" y="367.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture dealloc] (861 samples, 2.20%)</title><rect x="60.9612%" y="373" width="2.1999%" height="15" fill="rgb(209,10,6)" fg:x="23859" fg:w="861"/><text x="61.2112%" y="383.50">A..</text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="63.1662%" y="373" width="0.0102%" height="15" fill="rgb(229,3,52)" fg:x="24722" fg:w="4"/><text x="63.4162%" y="383.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (1,718 samples, 4.39%)</title><rect x="58.8022%" y="389" width="4.3896%" height="15" fill="rgb(253,49,37)" fg:x="23014" fg:w="1718"/><text x="59.0522%" y="399.50">Metal..</text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (1,762 samples, 4.50%)</title><rect x="58.7690%" y="405" width="4.5020%" height="15" fill="rgb(240,103,49)" fg:x="23001" fg:w="1762"/><text x="59.0190%" y="415.50">Metal..</text></g><g><title>libobjc.A.dylib`objc_release (30 samples, 0.08%)</title><rect x="63.1943%" y="389" width="0.0767%" height="15" fill="rgb(250,182,30)" fg:x="24733" fg:w="30"/><text x="63.4443%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (5 samples, 0.01%)</title><rect x="63.2838%" y="405" width="0.0128%" height="15" fill="rgb(248,8,30)" fg:x="24768" fg:w="5"/><text x="63.5338%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (152 samples, 0.39%)</title><rect x="63.2965%" y="405" width="0.3884%" height="15" fill="rgb(237,120,30)" fg:x="24773" fg:w="152"/><text x="63.5465%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.03%)</title><rect x="63.6926%" y="405" width="0.0281%" height="15" fill="rgb(221,146,34)" fg:x="24928" fg:w="11"/><text x="63.9426%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (174 samples, 0.44%)</title><rect x="63.7232%" y="405" width="0.4446%" height="15" fill="rgb(242,55,13)" fg:x="24940" fg:w="174"/><text x="63.9732%" y="415.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (5 samples, 0.01%)</title><rect x="64.1678%" y="405" width="0.0128%" height="15" fill="rgb(242,112,31)" fg:x="25114" fg:w="5"/><text x="64.4178%" y="415.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReleaseAllResources (2,173 samples, 5.55%)</title><rect x="58.6412%" y="421" width="5.5521%" height="15" fill="rgb(249,192,27)" fg:x="22951" fg:w="2173"/><text x="58.8912%" y="431.50">IOGPU`I..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (5 samples, 0.01%)</title><rect x="64.1806%" y="405" width="0.0128%" height="15" fill="rgb(208,204,44)" fg:x="25119" fg:w="5"/><text x="64.4306%" y="415.50"></text></g><g><title>Metal`DYLD-STUB$$objc_release (8 samples, 0.02%)</title><rect x="64.2342%" y="389" width="0.0204%" height="15" fill="rgb(208,93,54)" fg:x="25140" fg:w="8"/><text x="64.4842%" y="399.50"></text></g><g><title>Metal`MTLRangeAllocatorDeallocate (12 samples, 0.03%)</title><rect x="64.2853%" y="293" width="0.0307%" height="15" fill="rgb(242,1,31)" fg:x="25160" fg:w="12"/><text x="64.5353%" y="303.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (14 samples, 0.04%)</title><rect x="64.2828%" y="309" width="0.0358%" height="15" fill="rgb(241,83,25)" fg:x="25159" fg:w="14"/><text x="64.5328%" y="319.50"></text></g><g><title>Metal`MTLRangeAllocatorGetMaxFreeSize (8 samples, 0.02%)</title><rect x="64.3211%" y="309" width="0.0204%" height="15" fill="rgb(205,169,50)" fg:x="25174" fg:w="8"/><text x="64.5711%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (29 samples, 0.07%)</title><rect x="64.2751%" y="325" width="0.0741%" height="15" fill="rgb(239,186,37)" fg:x="25156" fg:w="29"/><text x="64.5251%" y="335.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.01%)</title><rect x="64.3620%" y="309" width="0.0102%" height="15" fill="rgb(205,221,10)" fg:x="25190" fg:w="4"/><text x="64.6120%" y="319.50"></text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.01%)</title><rect x="64.4105%" y="293" width="0.0128%" height="15" fill="rgb(218,196,15)" fg:x="25209" fg:w="5"/><text x="64.6605%" y="303.50"></text></g><g><title>IOKit`io_connect_method (581 samples, 1.48%)</title><rect x="64.4463%" y="261" width="1.4845%" height="15" fill="rgb(218,196,35)" fg:x="25223" fg:w="581"/><text x="64.6963%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (566 samples, 1.45%)</title><rect x="64.4846%" y="245" width="1.4462%" height="15" fill="rgb(233,63,24)" fg:x="25238" fg:w="566"/><text x="64.7346%" y="255.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (595 samples, 1.52%)</title><rect x="64.4259%" y="293" width="1.5203%" height="15" fill="rgb(225,8,4)" fg:x="25215" fg:w="595"/><text x="64.6759%" y="303.50"></text></g><g><title>IOKit`IOConnectCallMethod (591 samples, 1.51%)</title><rect x="64.4361%" y="277" width="1.5100%" height="15" fill="rgb(234,105,35)" fg:x="25219" fg:w="591"/><text x="64.6861%" y="287.50"></text></g><g><title>CoreFoundation`_CFRelease (618 samples, 1.58%)</title><rect x="64.3799%" y="309" width="1.5790%" height="15" fill="rgb(236,21,32)" fg:x="25197" fg:w="618"/><text x="64.6299%" y="319.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (30 samples, 0.08%)</title><rect x="65.9666%" y="293" width="0.0767%" height="15" fill="rgb(228,109,6)" fg:x="25818" fg:w="30"/><text x="66.2166%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (30 samples, 0.08%)</title><rect x="65.9666%" y="277" width="0.0767%" height="15" fill="rgb(229,215,31)" fg:x="25818" fg:w="30"/><text x="66.2166%" y="287.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (25 samples, 0.06%)</title><rect x="65.9794%" y="261" width="0.0639%" height="15" fill="rgb(221,52,54)" fg:x="25823" fg:w="25"/><text x="66.2294%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (21 samples, 0.05%)</title><rect x="65.9896%" y="245" width="0.0537%" height="15" fill="rgb(252,129,43)" fg:x="25827" fg:w="21"/><text x="66.2396%" y="255.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (21 samples, 0.05%)</title><rect x="65.9896%" y="229" width="0.0537%" height="15" fill="rgb(248,183,27)" fg:x="25827" fg:w="21"/><text x="66.2396%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.01%)</title><rect x="66.0586%" y="277" width="0.0128%" height="15" fill="rgb(250,0,22)" fg:x="25854" fg:w="5"/><text x="66.3086%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.05%)</title><rect x="66.0483%" y="293" width="0.0511%" height="15" fill="rgb(213,166,10)" fg:x="25850" fg:w="20"/><text x="66.2983%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.03%)</title><rect x="66.0739%" y="277" width="0.0256%" height="15" fill="rgb(207,163,36)" fg:x="25860" fg:w="10"/><text x="66.3239%" y="287.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (55 samples, 0.14%)</title><rect x="65.9666%" y="309" width="0.1405%" height="15" fill="rgb(208,122,22)" fg:x="25818" fg:w="55"/><text x="66.2166%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (4 samples, 0.01%)</title><rect x="66.1122%" y="309" width="0.0102%" height="15" fill="rgb(207,104,49)" fg:x="25875" fg:w="4"/><text x="66.3622%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (4 samples, 0.01%)</title><rect x="66.1122%" y="293" width="0.0102%" height="15" fill="rgb(248,211,50)" fg:x="25875" fg:w="4"/><text x="66.3622%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (702 samples, 1.79%)</title><rect x="64.3492%" y="325" width="1.7937%" height="15" fill="rgb(217,13,45)" fg:x="25185" fg:w="702"/><text x="64.5992%" y="335.50">I..</text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (7 samples, 0.02%)</title><rect x="66.1531%" y="325" width="0.0179%" height="15" fill="rgb(211,216,49)" fg:x="25891" fg:w="7"/><text x="66.4031%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (8 samples, 0.02%)</title><rect x="66.1710%" y="325" width="0.0204%" height="15" fill="rgb(221,58,53)" fg:x="25898" fg:w="8"/><text x="66.4210%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (8 samples, 0.02%)</title><rect x="66.1710%" y="309" width="0.0204%" height="15" fill="rgb(220,112,41)" fg:x="25898" fg:w="8"/><text x="66.4210%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease (6 samples, 0.02%)</title><rect x="66.1991%" y="325" width="0.0153%" height="15" fill="rgb(236,38,28)" fg:x="25909" fg:w="6"/><text x="66.4491%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_release (8 samples, 0.02%)</title><rect x="66.2144%" y="325" width="0.0204%" height="15" fill="rgb(227,195,22)" fg:x="25915" fg:w="8"/><text x="66.4644%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (773 samples, 1.98%)</title><rect x="64.2624%" y="341" width="1.9751%" height="15" fill="rgb(214,55,33)" fg:x="25151" fg:w="773"/><text x="64.5124%" y="351.50">I..</text></g><g><title>AGXMetalG14G`-[AGXBuffer dealloc] (784 samples, 2.00%)</title><rect x="64.2598%" y="357" width="2.0032%" height="15" fill="rgb(248,80,13)" fg:x="25150" fg:w="784"/><text x="64.5098%" y="367.50">A..</text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyBuffer dealloc] (786 samples, 2.01%)</title><rect x="64.2598%" y="373" width="2.0083%" height="15" fill="rgb(238,52,6)" fg:x="25150" fg:w="786"/><text x="64.5098%" y="383.50">A..</text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyBuffer dealloc] (17 samples, 0.04%)</title><rect x="66.2911%" y="293" width="0.0434%" height="15" fill="rgb(224,198,47)" fg:x="25945" fg:w="17"/><text x="66.5411%" y="303.50"></text></g><g><title>AGXMetalG14G`-[AGXBuffer dealloc] (17 samples, 0.04%)</title><rect x="66.2911%" y="277" width="0.0434%" height="15" fill="rgb(233,171,20)" fg:x="25945" fg:w="17"/><text x="66.5411%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (17 samples, 0.04%)</title><rect x="66.2911%" y="261" width="0.0434%" height="15" fill="rgb(241,30,25)" fg:x="25945" fg:w="17"/><text x="66.5411%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (17 samples, 0.04%)</title><rect x="66.2911%" y="245" width="0.0434%" height="15" fill="rgb(207,171,38)" fg:x="25945" fg:w="17"/><text x="66.5411%" y="255.50"></text></g><g><title>CoreFoundation`_CFRelease (16 samples, 0.04%)</title><rect x="66.2936%" y="229" width="0.0409%" height="15" fill="rgb(234,70,1)" fg:x="25946" fg:w="16"/><text x="66.5436%" y="239.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (16 samples, 0.04%)</title><rect x="66.2936%" y="213" width="0.0409%" height="15" fill="rgb(232,178,18)" fg:x="25946" fg:w="16"/><text x="66.5436%" y="223.50"></text></g><g><title>IOKit`IOConnectCallMethod (16 samples, 0.04%)</title><rect x="66.2936%" y="197" width="0.0409%" height="15" fill="rgb(241,78,40)" fg:x="25946" fg:w="16"/><text x="66.5436%" y="207.50"></text></g><g><title>IOKit`io_connect_method (16 samples, 0.04%)</title><rect x="66.2936%" y="181" width="0.0409%" height="15" fill="rgb(222,35,25)" fg:x="25946" fg:w="16"/><text x="66.5436%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (16 samples, 0.04%)</title><rect x="66.2936%" y="165" width="0.0409%" height="15" fill="rgb(207,92,16)" fg:x="25946" fg:w="16"/><text x="66.5436%" y="175.50"></text></g><g><title>Metal`MTLRangeAllocatorDeallocate (10 samples, 0.03%)</title><rect x="66.3549%" y="293" width="0.0256%" height="15" fill="rgb(216,59,51)" fg:x="25970" fg:w="10"/><text x="66.6049%" y="303.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (42 samples, 0.11%)</title><rect x="66.2885%" y="309" width="0.1073%" height="15" fill="rgb(213,80,28)" fg:x="25944" fg:w="42"/><text x="66.5385%" y="319.50"></text></g><g><title>Metal`MTLRangeAllocatorGetMaxFreeSize (4 samples, 0.01%)</title><rect x="66.3958%" y="309" width="0.0102%" height="15" fill="rgb(220,93,7)" fg:x="25986" fg:w="4"/><text x="66.6458%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (51 samples, 0.13%)</title><rect x="66.2783%" y="325" width="0.1303%" height="15" fill="rgb(225,24,44)" fg:x="25940" fg:w="51"/><text x="66.5283%" y="335.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.01%)</title><rect x="66.4469%" y="293" width="0.0102%" height="15" fill="rgb(243,74,40)" fg:x="26006" fg:w="4"/><text x="66.6969%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_internal (4 samples, 0.01%)</title><rect x="66.4878%" y="245" width="0.0102%" height="15" fill="rgb(228,39,7)" fg:x="26022" fg:w="4"/><text x="66.7378%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (493 samples, 1.26%)</title><rect x="66.4980%" y="245" width="1.2596%" height="15" fill="rgb(227,79,8)" fg:x="26026" fg:w="493"/><text x="66.7480%" y="255.50"></text></g><g><title>IOKit`io_connect_method (501 samples, 1.28%)</title><rect x="66.4827%" y="261" width="1.2801%" height="15" fill="rgb(236,58,11)" fg:x="26020" fg:w="501"/><text x="66.7327%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (508 samples, 1.30%)</title><rect x="66.4750%" y="277" width="1.2980%" height="15" fill="rgb(249,63,35)" fg:x="26017" fg:w="508"/><text x="66.7250%" y="287.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (512 samples, 1.31%)</title><rect x="66.4674%" y="293" width="1.3082%" height="15" fill="rgb(252,114,16)" fg:x="26014" fg:w="512"/><text x="66.7174%" y="303.50"></text></g><g><title>CoreFoundation`_CFRelease (530 samples, 1.35%)</title><rect x="66.4316%" y="309" width="1.3542%" height="15" fill="rgb(254,151,24)" fg:x="26000" fg:w="530"/><text x="66.6816%" y="319.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (6 samples, 0.02%)</title><rect x="67.7986%" y="245" width="0.0153%" height="15" fill="rgb(253,54,39)" fg:x="26535" fg:w="6"/><text x="68.0486%" y="255.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (13 samples, 0.03%)</title><rect x="67.8190%" y="229" width="0.0332%" height="15" fill="rgb(243,25,45)" fg:x="26543" fg:w="13"/><text x="68.0690%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (15 samples, 0.04%)</title><rect x="67.8164%" y="245" width="0.0383%" height="15" fill="rgb(234,134,9)" fg:x="26542" fg:w="15"/><text x="68.0664%" y="255.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (28 samples, 0.07%)</title><rect x="67.7858%" y="293" width="0.0715%" height="15" fill="rgb(227,166,31)" fg:x="26530" fg:w="28"/><text x="68.0358%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (28 samples, 0.07%)</title><rect x="67.7858%" y="277" width="0.0715%" height="15" fill="rgb(245,143,41)" fg:x="26530" fg:w="28"/><text x="68.0358%" y="287.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (26 samples, 0.07%)</title><rect x="67.7909%" y="261" width="0.0664%" height="15" fill="rgb(238,181,32)" fg:x="26532" fg:w="26"/><text x="68.0409%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="67.8650%" y="277" width="0.0102%" height="15" fill="rgb(224,113,18)" fg:x="26561" fg:w="4"/><text x="68.1150%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.04%)</title><rect x="67.8752%" y="277" width="0.0358%" height="15" fill="rgb(240,229,28)" fg:x="26565" fg:w="14"/><text x="68.1252%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.01%)</title><rect x="67.9008%" y="261" width="0.0102%" height="15" fill="rgb(250,185,3)" fg:x="26575" fg:w="4"/><text x="68.1508%" y="271.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (50 samples, 0.13%)</title><rect x="67.7858%" y="309" width="0.1278%" height="15" fill="rgb(212,59,25)" fg:x="26530" fg:w="50"/><text x="68.0358%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.05%)</title><rect x="67.8624%" y="293" width="0.0511%" height="15" fill="rgb(221,87,20)" fg:x="26560" fg:w="20"/><text x="68.1124%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (5 samples, 0.01%)</title><rect x="67.9161%" y="309" width="0.0128%" height="15" fill="rgb(213,74,28)" fg:x="26581" fg:w="5"/><text x="68.1661%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (5 samples, 0.01%)</title><rect x="67.9161%" y="293" width="0.0128%" height="15" fill="rgb(224,132,34)" fg:x="26581" fg:w="5"/><text x="68.1661%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease (4 samples, 0.01%)</title><rect x="67.9391%" y="309" width="0.0102%" height="15" fill="rgb(222,101,24)" fg:x="26590" fg:w="4"/><text x="68.1891%" y="319.50"></text></g><g><title>libobjc.A.dylib`moveTLSAutoreleaseToPool(ReturnAutoreleaseInfo) (4 samples, 0.01%)</title><rect x="67.9391%" y="293" width="0.0102%" height="15" fill="rgb(254,142,4)" fg:x="26590" fg:w="4"/><text x="68.1891%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.01%)</title><rect x="67.9544%" y="309" width="0.0128%" height="15" fill="rgb(230,229,49)" fg:x="26596" fg:w="5"/><text x="68.2044%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (616 samples, 1.57%)</title><rect x="66.4086%" y="325" width="1.5739%" height="15" fill="rgb(238,70,47)" fg:x="25991" fg:w="616"/><text x="66.6586%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="67.9953%" y="325" width="0.0102%" height="15" fill="rgb(231,160,17)" fg:x="26612" fg:w="4"/><text x="68.2453%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (681 samples, 1.74%)</title><rect x="66.2732%" y="341" width="1.7400%" height="15" fill="rgb(218,68,53)" fg:x="25938" fg:w="681"/><text x="66.5232%" y="351.50"></text></g><g><title>AGXMetalG14G`-[AGXTexture dealloc] (686 samples, 1.75%)</title><rect x="66.2681%" y="357" width="1.7528%" height="15" fill="rgb(236,111,10)" fg:x="25936" fg:w="686"/><text x="66.5181%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.07%)</title><rect x="68.0311%" y="357" width="0.0741%" height="15" fill="rgb(224,34,41)" fg:x="26626" fg:w="29"/><text x="68.2811%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.05%)</title><rect x="68.0515%" y="341" width="0.0537%" height="15" fill="rgb(241,118,19)" fg:x="26634" fg:w="21"/><text x="68.3015%" y="351.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture dealloc] (725 samples, 1.85%)</title><rect x="66.2681%" y="373" width="1.8524%" height="15" fill="rgb(238,129,25)" fg:x="25936" fg:w="725"/><text x="66.5181%" y="383.50">A..</text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.01%)</title><rect x="68.1384%" y="373" width="0.0102%" height="15" fill="rgb(238,22,31)" fg:x="26668" fg:w="4"/><text x="68.3884%" y="383.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (1,525 samples, 3.90%)</title><rect x="64.2547%" y="389" width="3.8965%" height="15" fill="rgb(222,174,48)" fg:x="25148" fg:w="1525"/><text x="64.5047%" y="399.50">Meta..</text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (1,553 samples, 3.97%)</title><rect x="64.2291%" y="405" width="3.9680%" height="15" fill="rgb(206,152,40)" fg:x="25138" fg:w="1553"/><text x="64.4791%" y="415.50">Meta..</text></g><g><title>libobjc.A.dylib`objc_release (16 samples, 0.04%)</title><rect x="68.1563%" y="389" width="0.0409%" height="15" fill="rgb(218,99,54)" fg:x="26675" fg:w="16"/><text x="68.4063%" y="399.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (1,763 samples, 4.50%)</title><rect x="64.1934%" y="421" width="4.5046%" height="15" fill="rgb(220,174,26)" fg:x="25124" fg:w="1763"/><text x="64.4434%" y="431.50">IOGPU..</text></g><g><title>libsystem_platform.dylib`_platform_memset (195 samples, 0.50%)</title><rect x="68.1997%" y="405" width="0.4982%" height="15" fill="rgb(245,116,9)" fg:x="26692" fg:w="195"/><text x="68.4497%" y="415.50"></text></g><g><title>IOGPU`IOGPUMetalDeviceShmemUpdateTrimLevel (45 samples, 0.11%)</title><rect x="68.7005%" y="421" width="0.1150%" height="15" fill="rgb(209,72,35)" fg:x="26888" fg:w="45"/><text x="68.9505%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalPooledResourceRelease (7 samples, 0.02%)</title><rect x="68.8155%" y="421" width="0.0179%" height="15" fill="rgb(226,126,21)" fg:x="26933" fg:w="7"/><text x="69.0655%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.03%)</title><rect x="68.8359%" y="405" width="0.0307%" height="15" fill="rgb(227,192,1)" fg:x="26941" fg:w="12"/><text x="69.0859%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.02%)</title><rect x="68.8666%" y="405" width="0.0153%" height="15" fill="rgb(237,180,29)" fg:x="26953" fg:w="6"/><text x="69.1166%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="68.9662%" y="389" width="0.0102%" height="15" fill="rgb(230,197,35)" fg:x="26992" fg:w="4"/><text x="69.2162%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="68.9764%" y="389" width="0.0204%" height="15" fill="rgb(246,193,31)" fg:x="26996" fg:w="8"/><text x="69.2264%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (54 samples, 0.14%)</title><rect x="68.8819%" y="405" width="0.1380%" height="15" fill="rgb(241,36,4)" fg:x="26959" fg:w="54"/><text x="69.1319%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (9 samples, 0.02%)</title><rect x="68.9969%" y="389" width="0.0230%" height="15" fill="rgb(241,130,17)" fg:x="27004" fg:w="9"/><text x="69.2469%" y="399.50"></text></g><g><title>IOGPU`IOGPUResourceListDestroy (75 samples, 0.19%)</title><rect x="68.8334%" y="421" width="0.1916%" height="15" fill="rgb(206,137,32)" fg:x="26940" fg:w="75"/><text x="69.0834%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_release (9 samples, 0.02%)</title><rect x="69.0480%" y="421" width="0.0230%" height="15" fill="rgb(237,228,51)" fg:x="27024" fg:w="9"/><text x="69.2980%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.01%)</title><rect x="69.0710%" y="421" width="0.0128%" height="15" fill="rgb(243,6,42)" fg:x="27033" fg:w="5"/><text x="69.3210%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.01%)</title><rect x="69.0838%" y="421" width="0.0102%" height="15" fill="rgb(251,74,28)" fg:x="27038" fg:w="4"/><text x="69.3338%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="69.0940%" y="421" width="0.0204%" height="15" fill="rgb(218,20,49)" fg:x="27042" fg:w="8"/><text x="69.3440%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="69.1170%" y="421" width="0.0128%" height="15" fill="rgb(238,28,14)" fg:x="27051" fg:w="5"/><text x="69.3670%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (4,112 samples, 10.51%)</title><rect x="58.6284%" y="437" width="10.5064%" height="15" fill="rgb(229,40,46)" fg:x="22946" fg:w="4112"/><text x="58.8784%" y="447.50">IOGPU`IOGPUMeta..</text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (66 samples, 0.17%)</title><rect x="69.1527%" y="421" width="0.1686%" height="15" fill="rgb(244,195,20)" fg:x="27065" fg:w="66"/><text x="69.4027%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (65 samples, 0.17%)</title><rect x="69.1553%" y="405" width="0.1661%" height="15" fill="rgb(253,56,35)" fg:x="27066" fg:w="65"/><text x="69.4053%" y="415.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (81 samples, 0.21%)</title><rect x="69.1374%" y="437" width="0.2070%" height="15" fill="rgb(210,149,44)" fg:x="27059" fg:w="81"/><text x="69.3874%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (6 samples, 0.02%)</title><rect x="69.3290%" y="421" width="0.0153%" height="15" fill="rgb(240,135,12)" fg:x="27134" fg:w="6"/><text x="69.5790%" y="431.50"></text></g><g><title>Metal`-[_MTLCommandBuffer signalCommandBufferAvailable] (4 samples, 0.01%)</title><rect x="69.3444%" y="437" width="0.0102%" height="15" fill="rgb(251,24,50)" fg:x="27140" fg:w="4"/><text x="69.5944%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.08%)</title><rect x="69.4006%" y="421" width="0.0843%" height="15" fill="rgb(243,200,47)" fg:x="27162" fg:w="33"/><text x="69.6506%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.02%)</title><rect x="69.4696%" y="405" width="0.0153%" height="15" fill="rgb(224,166,26)" fg:x="27189" fg:w="6"/><text x="69.7196%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.10%)</title><rect x="69.3853%" y="437" width="0.1022%" height="15" fill="rgb(233,0,47)" fg:x="27156" fg:w="40"/><text x="69.6353%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="69.4951%" y="437" width="0.0128%" height="15" fill="rgb(253,80,5)" fg:x="27199" fg:w="5"/><text x="69.7451%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (4,279 samples, 10.93%)</title><rect x="58.5799%" y="453" width="10.9331%" height="15" fill="rgb(214,133,25)" fg:x="22927" fg:w="4279"/><text x="58.8299%" y="463.50">IOGPU`-[IOGPUMet..</text></g><g><title>libobjc.A.dylib`-[NSObject isEqual:] (30 samples, 0.08%)</title><rect x="69.5386%" y="453" width="0.0767%" height="15" fill="rgb(209,27,14)" fg:x="27216" fg:w="30"/><text x="69.7886%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (136 samples, 0.35%)</title><rect x="69.6152%" y="453" width="0.3475%" height="15" fill="rgb(219,102,51)" fg:x="27246" fg:w="136"/><text x="69.8652%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (5 samples, 0.01%)</title><rect x="69.9627%" y="453" width="0.0128%" height="15" fill="rgb(237,18,16)" fg:x="27382" fg:w="5"/><text x="70.2127%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (5 samples, 0.01%)</title><rect x="69.9755%" y="453" width="0.0128%" height="15" fill="rgb(241,85,17)" fg:x="27387" fg:w="5"/><text x="70.2255%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_retain (4 samples, 0.01%)</title><rect x="69.9882%" y="453" width="0.0102%" height="15" fill="rgb(236,90,42)" fg:x="27392" fg:w="4"/><text x="70.2382%" y="463.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (9 samples, 0.02%)</title><rect x="70.0036%" y="453" width="0.0230%" height="15" fill="rgb(249,57,21)" fg:x="27398" fg:w="9"/><text x="70.2536%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (8 samples, 0.02%)</title><rect x="70.0266%" y="453" width="0.0204%" height="15" fill="rgb(243,12,36)" fg:x="27407" fg:w="8"/><text x="70.2766%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (8 samples, 0.02%)</title><rect x="70.0266%" y="437" width="0.0204%" height="15" fill="rgb(253,128,47)" fg:x="27407" fg:w="8"/><text x="70.2766%" y="447.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (4,704 samples, 12.02%)</title><rect x="58.0382%" y="469" width="12.0190%" height="15" fill="rgb(207,33,20)" fg:x="22715" fg:w="4704"/><text x="58.2882%" y="479.50">Metal`-[_MTLComman..</text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="70.0879%" y="469" width="0.0153%" height="15" fill="rgb(233,215,35)" fg:x="27431" fg:w="6"/><text x="70.3379%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.02%)</title><rect x="70.1032%" y="469" width="0.0153%" height="15" fill="rgb(249,188,52)" fg:x="27437" fg:w="6"/><text x="70.3532%" y="479.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (5 samples, 0.01%)</title><rect x="70.1518%" y="453" width="0.0128%" height="15" fill="rgb(225,12,32)" fg:x="27456" fg:w="5"/><text x="70.4018%" y="463.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (53 samples, 0.14%)</title><rect x="70.1722%" y="437" width="0.1354%" height="15" fill="rgb(247,98,14)" fg:x="27464" fg:w="53"/><text x="70.4222%" y="447.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (47 samples, 0.12%)</title><rect x="70.1875%" y="421" width="0.1201%" height="15" fill="rgb(247,219,48)" fg:x="27470" fg:w="47"/><text x="70.4375%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (9 samples, 0.02%)</title><rect x="70.3076%" y="437" width="0.0230%" height="15" fill="rgb(253,60,48)" fg:x="27517" fg:w="9"/><text x="70.5576%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (66 samples, 0.17%)</title><rect x="70.1645%" y="453" width="0.1686%" height="15" fill="rgb(245,15,52)" fg:x="27461" fg:w="66"/><text x="70.4145%" y="463.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_dispose (9 samples, 0.02%)</title><rect x="70.3408%" y="453" width="0.0230%" height="15" fill="rgb(220,133,28)" fg:x="27530" fg:w="9"/><text x="70.5908%" y="463.50"></text></g><g><title>libsystem_blocks.dylib`_call_custom_dispose_helper (6 samples, 0.02%)</title><rect x="70.3638%" y="453" width="0.0153%" height="15" fill="rgb(217,180,4)" fg:x="27539" fg:w="6"/><text x="70.6138%" y="463.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice alertCommandBufferActivityComplete] (8 samples, 0.02%)</title><rect x="70.3996%" y="421" width="0.0204%" height="15" fill="rgb(251,24,1)" fg:x="27553" fg:w="8"/><text x="70.6496%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.01%)</title><rect x="70.4098%" y="405" width="0.0102%" height="15" fill="rgb(212,185,49)" fg:x="27557" fg:w="4"/><text x="70.6598%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (4 samples, 0.01%)</title><rect x="70.4098%" y="389" width="0.0102%" height="15" fill="rgb(215,175,22)" fg:x="27557" fg:w="4"/><text x="70.6598%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (4 samples, 0.01%)</title><rect x="70.4098%" y="373" width="0.0102%" height="15" fill="rgb(250,205,14)" fg:x="27557" fg:w="4"/><text x="70.6598%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (10 samples, 0.03%)</title><rect x="70.4456%" y="357" width="0.0256%" height="15" fill="rgb(225,211,22)" fg:x="27571" fg:w="10"/><text x="70.6956%" y="367.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (6 samples, 0.02%)</title><rect x="70.4558%" y="341" width="0.0153%" height="15" fill="rgb(251,179,42)" fg:x="27575" fg:w="6"/><text x="70.7058%" y="351.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (13 samples, 0.03%)</title><rect x="70.4430%" y="373" width="0.0332%" height="15" fill="rgb(208,216,51)" fg:x="27570" fg:w="13"/><text x="70.6930%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (10 samples, 0.03%)</title><rect x="70.4993%" y="357" width="0.0256%" height="15" fill="rgb(235,36,11)" fg:x="27592" fg:w="10"/><text x="70.7493%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="70.5708%" y="341" width="0.0153%" height="15" fill="rgb(213,189,28)" fg:x="27620" fg:w="6"/><text x="70.8208%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (49 samples, 0.13%)</title><rect x="70.4890%" y="373" width="0.1252%" height="15" fill="rgb(227,203,42)" fg:x="27588" fg:w="49"/><text x="70.7390%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.08%)</title><rect x="70.5299%" y="357" width="0.0843%" height="15" fill="rgb(244,72,36)" fg:x="27604" fg:w="33"/><text x="70.7799%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.03%)</title><rect x="70.5861%" y="341" width="0.0281%" height="15" fill="rgb(213,53,17)" fg:x="27626" fg:w="11"/><text x="70.8361%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.02%)</title><rect x="70.6168%" y="373" width="0.0230%" height="15" fill="rgb(207,167,3)" fg:x="27638" fg:w="9"/><text x="70.8668%" y="383.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (79 samples, 0.20%)</title><rect x="70.4405%" y="389" width="0.2018%" height="15" fill="rgb(216,98,30)" fg:x="27569" fg:w="79"/><text x="70.6905%" y="399.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (100 samples, 0.26%)</title><rect x="70.4226%" y="405" width="0.2555%" height="15" fill="rgb(236,123,15)" fg:x="27562" fg:w="100"/><text x="70.6726%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (5 samples, 0.01%)</title><rect x="70.6653%" y="389" width="0.0128%" height="15" fill="rgb(248,81,50)" fg:x="27657" fg:w="5"/><text x="70.9153%" y="399.50"></text></g><g><title>Metal`DYLD-STUB$$objc_release (6 samples, 0.02%)</title><rect x="70.6858%" y="405" width="0.0153%" height="15" fill="rgb(214,120,4)" fg:x="27665" fg:w="6"/><text x="70.9358%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.02%)</title><rect x="70.7190%" y="405" width="0.0153%" height="15" fill="rgb(208,179,34)" fg:x="27678" fg:w="6"/><text x="70.9690%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (128 samples, 0.33%)</title><rect x="70.4201%" y="421" width="0.3270%" height="15" fill="rgb(227,140,7)" fg:x="27561" fg:w="128"/><text x="70.6701%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_release (8 samples, 0.02%)</title><rect x="70.7675%" y="421" width="0.0204%" height="15" fill="rgb(214,22,6)" fg:x="27697" fg:w="8"/><text x="71.0175%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.03%)</title><rect x="70.7905%" y="421" width="0.0281%" height="15" fill="rgb(207,137,27)" fg:x="27706" fg:w="11"/><text x="71.0405%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="70.8493%" y="389" width="0.0102%" height="15" fill="rgb(210,8,46)" fg:x="27729" fg:w="4"/><text x="71.0993%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.05%)</title><rect x="70.8186%" y="421" width="0.0485%" height="15" fill="rgb(240,16,54)" fg:x="27717" fg:w="19"/><text x="71.0686%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.03%)</title><rect x="70.8365%" y="405" width="0.0307%" height="15" fill="rgb(211,209,29)" fg:x="27724" fg:w="12"/><text x="71.0865%" y="415.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer dealloc] (197 samples, 0.50%)</title><rect x="70.3817%" y="437" width="0.5033%" height="15" fill="rgb(226,228,24)" fg:x="27546" fg:w="197"/><text x="70.6317%" y="447.50"></text></g><g><title>AGXMetalG14G`DYLD-STUB$$objc_release (5 samples, 0.01%)</title><rect x="70.8953%" y="437" width="0.0128%" height="15" fill="rgb(222,84,9)" fg:x="27747" fg:w="5"/><text x="71.1453%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="70.9592%" y="437" width="0.0256%" height="15" fill="rgb(234,203,30)" fg:x="27772" fg:w="10"/><text x="71.2092%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_release (7 samples, 0.02%)</title><rect x="70.9873%" y="437" width="0.0179%" height="15" fill="rgb(238,109,14)" fg:x="27783" fg:w="7"/><text x="71.2373%" y="447.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (261 samples, 0.67%)</title><rect x="70.3792%" y="453" width="0.6669%" height="15" fill="rgb(233,206,34)" fg:x="27545" fg:w="261"/><text x="70.6292%" y="463.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (5 samples, 0.01%)</title><rect x="71.0333%" y="437" width="0.0128%" height="15" fill="rgb(220,167,47)" fg:x="27801" fg:w="5"/><text x="71.2833%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.04%)</title><rect x="71.0512%" y="453" width="0.0434%" height="15" fill="rgb(238,105,10)" fg:x="27808" fg:w="17"/><text x="71.3012%" y="463.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (390 samples, 1.00%)</title><rect x="70.1186%" y="469" width="0.9965%" height="15" fill="rgb(213,227,17)" fg:x="27443" fg:w="390"/><text x="70.3686%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.02%)</title><rect x="71.0946%" y="453" width="0.0204%" height="15" fill="rgb(217,132,38)" fg:x="27825" fg:w="8"/><text x="71.3446%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="71.1252%" y="469" width="0.0204%" height="15" fill="rgb(242,146,4)" fg:x="27837" fg:w="8"/><text x="71.3752%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="71.1457%" y="469" width="0.0307%" height="15" fill="rgb(212,61,9)" fg:x="27845" fg:w="12"/><text x="71.3957%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (4 samples, 0.01%)</title><rect x="71.1815%" y="469" width="0.0102%" height="15" fill="rgb(247,126,22)" fg:x="27859" fg:w="4"/><text x="71.4315%" y="479.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (5,255 samples, 13.43%)</title><rect x="57.7699%" y="485" width="13.4268%" height="15" fill="rgb(220,196,2)" fg:x="22610" fg:w="5255"/><text x="58.0199%" y="495.50">IOGPU`IOGPUNotificat..</text></g><g><title>IOGPU`__62-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:]_block_invoke.44 (7 samples, 0.02%)</title><rect x="71.2045%" y="485" width="0.0179%" height="15" fill="rgb(208,46,4)" fg:x="27868" fg:w="7"/><text x="71.4545%" y="495.50"></text></g><g><title>IOKit`__IODataQueueDequeue (5 samples, 0.01%)</title><rect x="71.2300%" y="485" width="0.0128%" height="15" fill="rgb(252,104,46)" fg:x="27878" fg:w="5"/><text x="71.4800%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="71.2556%" y="485" width="0.0204%" height="15" fill="rgb(237,152,48)" fg:x="27888" fg:w="8"/><text x="71.5056%" y="495.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (5,299 samples, 13.54%)</title><rect x="57.7393%" y="501" width="13.5393%" height="15" fill="rgb(221,59,37)" fg:x="22598" fg:w="5299"/><text x="57.9893%" y="511.50">IOGPU`__IOGPUNotific..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (5,306 samples, 13.56%)</title><rect x="57.7240%" y="517" width="13.5572%" height="15" fill="rgb(209,202,51)" fg:x="22592" fg:w="5306"/><text x="57.9740%" y="527.50">libdispatch.dylib`_d..</text></g><g><title>libobjc.A.dylib`_object_remove_associations (4 samples, 0.01%)</title><rect x="71.3169%" y="485" width="0.0102%" height="15" fill="rgb(228,81,30)" fg:x="27912" fg:w="4"/><text x="71.5669%" y="495.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (4 samples, 0.01%)</title><rect x="71.3169%" y="469" width="0.0102%" height="15" fill="rgb(227,42,39)" fg:x="27912" fg:w="4"/><text x="71.5669%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (13 samples, 0.03%)</title><rect x="71.3067%" y="501" width="0.0332%" height="15" fill="rgb(221,26,2)" fg:x="27908" fg:w="13"/><text x="71.5567%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (5 samples, 0.01%)</title><rect x="71.3271%" y="485" width="0.0128%" height="15" fill="rgb(254,61,31)" fg:x="27916" fg:w="5"/><text x="71.5771%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="71.3475%" y="501" width="0.0102%" height="15" fill="rgb(222,173,38)" fg:x="27924" fg:w="4"/><text x="71.5975%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (31 samples, 0.08%)</title><rect x="71.2811%" y="517" width="0.0792%" height="15" fill="rgb(218,50,12)" fg:x="27898" fg:w="31"/><text x="71.5311%" y="527.50"></text></g><g><title>libdispatch.dylib`dispatch_release (8 samples, 0.02%)</title><rect x="71.3629%" y="517" width="0.0204%" height="15" fill="rgb(223,88,40)" fg:x="27930" fg:w="8"/><text x="71.6129%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (5,364 samples, 13.71%)</title><rect x="57.6933%" y="533" width="13.7054%" height="15" fill="rgb(237,54,19)" fg:x="22580" fg:w="5364"/><text x="57.9433%" y="543.50">libdispatch.dylib`_di..</text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="71.3884%" y="517" width="0.0102%" height="15" fill="rgb(251,129,25)" fg:x="27940" fg:w="4"/><text x="71.6384%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (5,378 samples, 13.74%)</title><rect x="57.6652%" y="549" width="13.7411%" height="15" fill="rgb(238,97,19)" fg:x="22569" fg:w="5378"/><text x="57.9152%" y="559.50">libdispatch.dylib`_di..</text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (5,399 samples, 13.79%)</title><rect x="57.6166%" y="565" width="13.7948%" height="15" fill="rgb(240,169,18)" fg:x="22550" fg:w="5399"/><text x="57.8666%" y="575.50">libdispatch.dylib`_di..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (5,427 samples, 13.87%)</title><rect x="57.5528%" y="597" width="13.8663%" height="15" fill="rgb(230,187,49)" fg:x="22525" fg:w="5427"/><text x="57.8028%" y="607.50">libdispatch.dylib`_di..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (5,415 samples, 13.84%)</title><rect x="57.5834%" y="581" width="13.8357%" height="15" fill="rgb(209,44,26)" fg:x="22537" fg:w="5415"/><text x="57.8334%" y="591.50">libdispatch.dylib`_di..</text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (10 samples, 0.03%)</title><rect x="71.5417%" y="517" width="0.0256%" height="15" fill="rgb(244,0,6)" fg:x="28000" fg:w="10"/><text x="71.7917%" y="527.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (18 samples, 0.05%)</title><rect x="71.5315%" y="533" width="0.0460%" height="15" fill="rgb(248,18,21)" fg:x="27996" fg:w="18"/><text x="71.7815%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.01%)</title><rect x="71.6720%" y="437" width="0.0128%" height="15" fill="rgb(245,180,19)" fg:x="28051" fg:w="5"/><text x="71.9220%" y="447.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (14 samples, 0.04%)</title><rect x="71.6567%" y="453" width="0.0358%" height="15" fill="rgb(252,118,36)" fg:x="28045" fg:w="14"/><text x="71.9067%" y="463.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (29 samples, 0.07%)</title><rect x="71.6260%" y="469" width="0.0741%" height="15" fill="rgb(210,224,19)" fg:x="28033" fg:w="29"/><text x="71.8760%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="71.7001%" y="469" width="0.0102%" height="15" fill="rgb(218,30,24)" fg:x="28062" fg:w="4"/><text x="71.9501%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="71.7104%" y="469" width="0.0204%" height="15" fill="rgb(219,75,50)" fg:x="28066" fg:w="8"/><text x="71.9604%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:] (46 samples, 0.12%)</title><rect x="71.6209%" y="485" width="0.1175%" height="15" fill="rgb(234,72,50)" fg:x="28031" fg:w="46"/><text x="71.8709%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer fillCommandBufferArgs:commandQueue:] (53 samples, 0.14%)</title><rect x="71.6184%" y="501" width="0.1354%" height="15" fill="rgb(219,100,48)" fg:x="28030" fg:w="53"/><text x="71.8684%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (4 samples, 0.01%)</title><rect x="71.7436%" y="485" width="0.0102%" height="15" fill="rgb(253,5,41)" fg:x="28079" fg:w="4"/><text x="71.9936%" y="495.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueWillSubmit (8 samples, 0.02%)</title><rect x="71.7921%" y="485" width="0.0204%" height="15" fill="rgb(247,181,11)" fg:x="28098" fg:w="8"/><text x="72.0421%" y="495.50"></text></g><g><title>IOKit`io_connect_method (10,869 samples, 27.77%)</title><rect x="71.8228%" y="469" width="27.7710%" height="15" fill="rgb(222,223,25)" fg:x="28110" fg:w="10869"/><text x="72.0728%" y="479.50">IOKit`io_connect_method</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10,863 samples, 27.76%)</title><rect x="71.8381%" y="453" width="27.7556%" height="15" fill="rgb(214,198,28)" fg:x="28116" fg:w="10863"/><text x="72.0881%" y="463.50">libsystem_kernel.dylib`mach_msg2_trap</text></g><g><title>IOKit`IOConnectCallMethod (10,878 samples, 27.79%)</title><rect x="71.8126%" y="485" width="27.7940%" height="15" fill="rgb(230,46,43)" fg:x="28106" fg:w="10878"/><text x="72.0626%" y="495.50">IOKit`IOConnectCallMethod</text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (10,901 samples, 27.85%)</title><rect x="71.7768%" y="501" width="27.8527%" height="15" fill="rgb(233,65,53)" fg:x="28092" fg:w="10901"/><text x="72.0268%" y="511.50">IOGPU`IOGPUCommandQueueSubmitCommandBuffers</text></g><g><title>libdispatch.dylib`dispatch_semaphore_wait (8 samples, 0.02%)</title><rect x="99.6091%" y="485" width="0.0204%" height="15" fill="rgb(221,121,27)" fg:x="38985" fg:w="8"/><text x="99.8591%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (10,975 samples, 28.04%)</title><rect x="71.6005%" y="517" width="28.0418%" height="15" fill="rgb(247,70,47)" fg:x="28023" fg:w="10975"/><text x="71.8505%" y="527.50">IOGPU`-[IOGPUMetalCommandQueue _submitCommand..</text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="99.6525%" y="517" width="0.0128%" height="15" fill="rgb(228,85,35)" fg:x="39002" fg:w="5"/><text x="99.9025%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (10,987 samples, 28.07%)</title><rect x="71.5954%" y="533" width="28.0725%" height="15" fill="rgb(209,50,18)" fg:x="28021" fg:w="10987"/><text x="71.8454%" y="543.50">IOGPU`-[IOGPUMetalCommandQueue submitCommandB..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (7 samples, 0.02%)</title><rect x="99.6857%" y="533" width="0.0179%" height="15" fill="rgb(250,19,35)" fg:x="39015" fg:w="7"/><text x="99.9357%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (7 samples, 0.02%)</title><rect x="99.6857%" y="517" width="0.0179%" height="15" fill="rgb(253,107,29)" fg:x="39015" fg:w="7"/><text x="99.9357%" y="527.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (11,037 samples, 28.20%)</title><rect x="71.5085%" y="549" width="28.2002%" height="15" fill="rgb(252,179,29)" fg:x="27987" fg:w="11037"/><text x="71.7585%" y="559.50">Metal`-[_MTLCommandQueue _submitAvailableComm..</text></g><g><title>Metal`DYLD-STUB$$objc_release (4 samples, 0.01%)</title><rect x="99.7087%" y="549" width="0.0102%" height="15" fill="rgb(238,194,6)" fg:x="39024" fg:w="4"/><text x="99.9587%" y="559.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (5 samples, 0.01%)</title><rect x="99.7343%" y="501" width="0.0128%" height="15" fill="rgb(238,164,29)" fg:x="39034" fg:w="5"/><text x="99.9843%" y="511.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (7 samples, 0.02%)</title><rect x="99.7317%" y="533" width="0.0179%" height="15" fill="rgb(224,25,9)" fg:x="39033" fg:w="7"/><text x="99.9817%" y="543.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (6 samples, 0.02%)</title><rect x="99.7343%" y="517" width="0.0153%" height="15" fill="rgb(244,153,23)" fg:x="39034" fg:w="6"/><text x="99.9843%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (11 samples, 0.03%)</title><rect x="99.7573%" y="533" width="0.0281%" height="15" fill="rgb(212,203,14)" fg:x="39043" fg:w="11"/><text x="100.0073%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (11 samples, 0.03%)</title><rect x="99.7573%" y="517" width="0.0281%" height="15" fill="rgb(220,164,20)" fg:x="39043" fg:w="11"/><text x="100.0073%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.03%)</title><rect x="99.7598%" y="501" width="0.0256%" height="15" fill="rgb(222,203,48)" fg:x="39044" fg:w="10"/><text x="100.0098%" y="511.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (22 samples, 0.06%)</title><rect x="99.7317%" y="549" width="0.0562%" height="15" fill="rgb(215,159,22)" fg:x="39033" fg:w="22"/><text x="99.9817%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="99.7879%" y="549" width="0.0128%" height="15" fill="rgb(216,183,47)" fg:x="39055" fg:w="5"/><text x="100.0379%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (11,089 samples, 28.33%)</title><rect x="71.4830%" y="565" width="28.3331%" height="15" fill="rgb(229,195,25)" fg:x="27977" fg:w="11089"/><text x="71.7330%" y="575.50">libdispatch.dylib`_dispatch_client_callout</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (16,563 samples, 42.32%)</title><rect x="57.4991%" y="613" width="42.3195%" height="15" fill="rgb(224,132,51)" fg:x="22504" fg:w="16563"/><text x="57.7491%" y="623.50">libdispatch.dylib`_dispatch_lane_serial_drain</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (11,107 samples, 28.38%)</title><rect x="71.4395%" y="597" width="28.3791%" height="15" fill="rgb(240,63,7)" fg:x="27960" fg:w="11107"/><text x="71.6895%" y="607.50">libdispatch.dylib`_dispatch_source_invoke</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (11,095 samples, 28.35%)</title><rect x="71.4702%" y="581" width="28.3484%" height="15" fill="rgb(249,182,41)" fg:x="27972" fg:w="11095"/><text x="71.7202%" y="591.50">libdispatch.dylib`_dispatch_continuation_pop</text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (8 samples, 0.02%)</title><rect x="99.8288%" y="581" width="0.0204%" height="15" fill="rgb(243,47,26)" fg:x="39071" fg:w="8"/><text x="100.0788%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (16 samples, 0.04%)</title><rect x="99.8186%" y="613" width="0.0409%" height="15" fill="rgb(233,48,2)" fg:x="39067" fg:w="16"/><text x="100.0686%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (16 samples, 0.04%)</title><rect x="99.8186%" y="597" width="0.0409%" height="15" fill="rgb(244,165,34)" fg:x="39067" fg:w="16"/><text x="100.0686%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (6 samples, 0.02%)</title><rect x="99.8595%" y="613" width="0.0153%" height="15" fill="rgb(207,89,7)" fg:x="39083" fg:w="6"/><text x="100.1095%" y="623.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (4 samples, 0.01%)</title><rect x="99.8646%" y="597" width="0.0102%" height="15" fill="rgb(244,117,36)" fg:x="39085" fg:w="4"/><text x="100.1146%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (16,600 samples, 42.41%)</title><rect x="57.4736%" y="629" width="42.4140%" height="15" fill="rgb(226,144,34)" fg:x="22494" fg:w="16600"/><text x="57.7236%" y="639.50">libdispatch.dylib`_dispatch_lane_invoke</text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (7 samples, 0.02%)</title><rect x="99.8978%" y="629" width="0.0179%" height="15" fill="rgb(213,23,19)" fg:x="39098" fg:w="7"/><text x="100.1478%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (19,087 samples, 48.77%)</title><rect x="51.1549%" y="677" width="48.7685%" height="15" fill="rgb(217,75,12)" fg:x="20021" fg:w="19087"/><text x="51.4049%" y="687.50">libsystem_pthread.dylib`start_wqthread</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (16,792 samples, 42.90%)</title><rect x="57.0188%" y="661" width="42.9046%" height="15" fill="rgb(224,159,17)" fg:x="22316" fg:w="16792"/><text x="57.2688%" y="671.50">libsystem_pthread.dylib`_pthread_wqthread</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (16,777 samples, 42.87%)</title><rect x="57.0571%" y="645" width="42.8663%" height="15" fill="rgb(217,118,1)" fg:x="22331" fg:w="16777"/><text x="57.3071%" y="655.50">libdispatch.dylib`_dispatch_workloop_worker_thread</text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (6 samples, 0.02%)</title><rect x="99.9387%" y="469" width="0.0153%" height="15" fill="rgb(232,180,48)" fg:x="39114" fg:w="6"/><text x="100.1887%" y="479.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (6 samples, 0.02%)</title><rect x="99.9387%" y="453" width="0.0153%" height="15" fill="rgb(230,27,33)" fg:x="39114" fg:w="6"/><text x="100.1887%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (6 samples, 0.02%)</title><rect x="99.9387%" y="437" width="0.0153%" height="15" fill="rgb(205,31,21)" fg:x="39114" fg:w="6"/><text x="100.1887%" y="447.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (22 samples, 0.06%)</title><rect x="99.9285%" y="501" width="0.0562%" height="15" fill="rgb(253,59,4)" fg:x="39110" fg:w="22"/><text x="100.1785%" y="511.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (19 samples, 0.05%)</title><rect x="99.9361%" y="485" width="0.0485%" height="15" fill="rgb(224,201,9)" fg:x="39113" fg:w="19"/><text x="100.1861%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (11 samples, 0.03%)</title><rect x="99.9566%" y="469" width="0.0281%" height="15" fill="rgb(229,206,30)" fg:x="39121" fg:w="11"/><text x="100.2066%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (11 samples, 0.03%)</title><rect x="99.9566%" y="453" width="0.0281%" height="15" fill="rgb(212,67,47)" fg:x="39121" fg:w="11"/><text x="100.2066%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.03%)</title><rect x="99.9566%" y="437" width="0.0281%" height="15" fill="rgb(211,96,50)" fg:x="39121" fg:w="11"/><text x="100.2066%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (25 samples, 0.06%)</title><rect x="99.9233%" y="597" width="0.0639%" height="15" fill="rgb(252,114,18)" fg:x="39108" fg:w="25"/><text x="100.1733%" y="607.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (25 samples, 0.06%)</title><rect x="99.9233%" y="581" width="0.0639%" height="15" fill="rgb(223,58,37)" fg:x="39108" fg:w="25"/><text x="100.1733%" y="591.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (25 samples, 0.06%)</title><rect x="99.9233%" y="565" width="0.0639%" height="15" fill="rgb(237,70,4)" fg:x="39108" fg:w="25"/><text x="100.1733%" y="575.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (24 samples, 0.06%)</title><rect x="99.9259%" y="549" width="0.0613%" height="15" fill="rgb(244,85,46)" fg:x="39109" fg:w="24"/><text x="100.1759%" y="559.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (24 samples, 0.06%)</title><rect x="99.9259%" y="533" width="0.0613%" height="15" fill="rgb(223,39,52)" fg:x="39109" fg:w="24"/><text x="100.1759%" y="543.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (23 samples, 0.06%)</title><rect x="99.9285%" y="517" width="0.0588%" height="15" fill="rgb(218,200,14)" fg:x="39110" fg:w="23"/><text x="100.1785%" y="527.50"></text></g><g><title>all (39,138 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(208,171,16)" fg:x="0" fg:w="39138"/><text x="0.2500%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (30 samples, 0.08%)</title><rect x="99.9233%" y="677" width="0.0767%" height="15" fill="rgb(234,200,18)" fg:x="39108" fg:w="30"/><text x="100.1733%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (30 samples, 0.08%)</title><rect x="99.9233%" y="661" width="0.0767%" height="15" fill="rgb(228,45,11)" fg:x="39108" fg:w="30"/><text x="100.1733%" y="671.50"></text></g><g><title>AppKit`_NSEventThread (30 samples, 0.08%)</title><rect x="99.9233%" y="645" width="0.0767%" height="15" fill="rgb(237,182,11)" fg:x="39108" fg:w="30"/><text x="100.1733%" y="655.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (30 samples, 0.08%)</title><rect x="99.9233%" y="629" width="0.0767%" height="15" fill="rgb(241,175,49)" fg:x="39108" fg:w="30"/><text x="100.1733%" y="639.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (30 samples, 0.08%)</title><rect x="99.9233%" y="613" width="0.0767%" height="15" fill="rgb(247,38,35)" fg:x="39108" fg:w="30"/><text x="100.1733%" y="623.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (5 samples, 0.01%)</title><rect x="99.9872%" y="597" width="0.0128%" height="15" fill="rgb(228,39,49)" fg:x="39133" fg:w="5"/><text x="100.2372%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.01%)</title><rect x="99.9872%" y="581" width="0.0128%" height="15" fill="rgb(226,101,26)" fg:x="39133" fg:w="5"/><text x="100.2372%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.01%)</title><rect x="99.9872%" y="565" width="0.0128%" height="15" fill="rgb(206,141,19)" fg:x="39133" fg:w="5"/><text x="100.2372%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="99.9872%" y="549" width="0.0128%" height="15" fill="rgb(211,200,13)" fg:x="39133" fg:w="5"/><text x="100.2372%" y="559.50"></text></g></svg></svg>